{"version":3,"sources":["app/api.js","components/classNames.js","app/Warning.js","components/shared-mui/styles.js","utils.js","app/vitessce-grid-layout/layout-utils.js","app/vitessce-grid-layout/VitessceGridLayout.js","loaders/AbstractLoader.js","loaders/errors/AbstractLoaderError.js","loaders/errors/LoaderFetchError.js","loaders/errors/LoaderValidationError.js","loaders/errors/LoaderNotFoundError.js","loaders/LoaderResult.js","loaders/JsonLoader.js","loaders/AbstractZarrLoader.js","loaders/MatrixZarrLoader.js","loaders/GenesJsonAsMatrixZarrLoader.js","loaders/ClustersJsonAsMatrixZarrLoader.js","components/sets/constants.js","components/utils.js","components/spatial/constants.js","layers/BitmaskLayer.js","layers/bitmask-layer-shaders.js","components/layer-controller/utils.js","components/spatial/utils.js","loaders/RasterJsonLoader.js","loaders/OmeZarrLoader.js","components/sets/utils.js","components/sets/cell-set-utils.js","components/sets/io.js","loaders/CellSetsJsonLoader.js","loaders/anndata-loaders/BaseAnnDataLoader.js","loaders/anndata-loaders/MatrixZarrLoader.js","loaders/anndata-loaders/index.js","loaders/anndata-loaders/CellSetsZarrLoader.js","loaders/anndata-loaders/CellsZarrLoader.js","loaders/GenomicProfilesZarrLoader.js","loaders/types.js","app/state/hooks.js","app/VitessceGrid.js","app/vitessce-grid-utils.js","app/state/coordination.js","app/view-config-upgraders.js","app/view-config-versions.js","app/CallbackPublisher.js","components/hooks.js","components/data-hooks.js","components/LoadingIndicator.js","components/shared-mui/components.js","components/TitleInfo.js","components/description/Description.js","components/description/DescriptionSubscriber.js","components/status/Status.js","components/selectable-table/SelectableTable.js","components/genes/Genes.js","components/genes/GenesSubscriber.js","components/sets/Tree.js","components/sets/HelpTooltip.js","components/sets/Popover.js","components/sets/PopoverMenu.js","assets/menu.svg","components/sets/TreeNode.js","assets/sets/union.svg","assets/sets/intersection.svg","assets/sets/complement.svg","components/sets/SetsManagerButtons.js","components/sets/SetsManager.js","components/sets/CellSetsManagerSubscriber.js","components/interpolate-colors.js","layers/SelectionLayer.js","layers/selection-utils.js","layers/SelectablePolygonLayer.js","layers/SelectableScatterplotLayer.js","layers/heatmap-constants.js","layers/HeatmapBitmapLayer.js","layers/heatmap-bitmap-layer-shaders.js","layers/PixelatedBitmapLayer.js","layers/HeatmapCompositeTextLayer.js","components/shared-spatial-scatterplot/quadtree.js","assets/tools/near_me.svg","assets/tools/selection_rectangle.svg","assets/tools/selection_lasso.svg","components/shared-spatial-scatterplot/ToolMenu.js","components/shared-spatial-scatterplot/cursor.js","components/shared-spatial-scatterplot/AbstractSpatialOrScatterplot.js","components/shared-spatial-scatterplot/force-collide-rects.js","components/scatterplot/Scatterplot.js","components/tooltip/Tooltip.js","components/tooltip/Tooltip2D.js","components/tooltip/TooltipContent.js","components/scatterplot/ScatterplotTooltipSubscriber.js","components/shared-plot-options/styles.js","components/shared-plot-options/OptionsContainer.js","components/shared-plot-options/CellColorEncodingOption.js","components/scatterplot/ScatterplotOptions.js","components/scatterplot/ScatterplotSubscriber.js","components/spatial/Spatial.js","components/spatial/SpatialOptions.js","components/spatial/SpatialTooltipSubscriber.js","components/spatial/SpatialSubscriber.js","components/heatmap/HeatmapControls.js","components/heatmap/utils.js","Pool.js","components/heatmap/HeatmapWorkerPool.js","components/heatmap/Heatmap.js","components/heatmap/HeatmapTooltipSubscriber.js","components/heatmap/HeatmapSubscriber.js","components/layer-controller/ColorPalette.js","components/layer-controller/ChannelOptions.js","components/layer-controller/constants.js","components/layer-controller/shared-channel-controls.js","components/layer-controller/RasterChannelController.js","components/layer-controller/BitmaskChannelController.js","components/layer-controller/styles.js","components/layer-controller/VectorLayerController.js","components/layer-controller/LayerOptions.js","components/layer-controller/VolumeOptions.js","components/layer-controller/LayerController.js","components/layer-controller/ImageAddButton.js","components/layer-controller/LayerControllerSubscriber.js","components/higlass/HiGlassLazy.js","components/higlass/HiGlassSubscriber.js","components/vega/VegaPlot.js","components/vega/utils.js","components/sets/CellSetSizesPlot.js","components/sets/CellSetSizesPlotSubscriber.js","components/higlass/GenomicProfilesSubscriber.js","components/genes/ExpressionHistogram.js","components/genes/ExpressionHistogramSubscriber.js","components/sets/hooks.js","components/sets/CellSetExpressionPlotOptions.js","components/sets/CellSetExpressionPlot.js","components/sets/CellSetExpressionPlotSubscriber.js","app/component-registry.js","components/status/StatusSubscriber.js","app/view-config-utils.js","app/Vitessce.js","app/app.js","demo/index.js","components/heatmap/heatmap.worker.js"],"names":["urlPrefix","makeLayerNameToConfig","datasetPrefix","name","type","toUpperCase","fileType","url","linnarssonLayerNames","linnarssonDescription","linnarssonBase","description","layers","map","linnarssonBaseNoClusters","filter","driesDescription","driesBase","wangDescription","wangBase","vanderbiltBase","configs","version","public","requestInit","method","headers","mode","credentials","cache","redirect","referrer","integrity","staticLayout","component","props","mapping","view","zoom","target","x","y","w","h","datasets","uid","files","file","toLowerCase","initStrategy","coordinationSpace","embeddingZoom","PCA","TSNE","embeddingType","spatialZoom","A","spatialTargetX","spatialTargetY","layout","coordinationScopes","transpose","UMAP","embeddingCellSetPolygonsVisible","embeddingCellSetLabelsVisible","embeddingCellSetLabelSize","embeddingCellRadius","cellRadius","spatialLayers","radius","opacity","visible","stroked","vanderbilt","genomicZoomX","genomicZoomY","genomicTargetX","genomicTargetY","hgViewConfig","autocompleteSource","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","chromInfoPath","tracks","top","height","tilesetUid","server","options","fontSize","labelPosition","labelLeftMargin","labelRightMargin","labelTopMargin","labelBottomMargin","minHeight","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","showMousePosition","mousePositionColor","plusStrandColor","minusStrandColor","labelColor","trackBorderWidth","trackBorderColor","color","stroke","fontIsLeftAligned","left","width","minWidth","center","contents","maxZoom","backgroundColor","labelShowResolution","labelShowAssembly","labelTextOpacity","labelBackgroundColor","labelBackgroundOpacity","colorRange","colorbarBackgroundColor","colorbarBackgroundOpacity","colorbarPosition","heatmapValueScaling","showTooltip","extent","zeroValueColor","scaleStartPercent","scaleEndPercent","transforms","value","right","bottom","whole","gallery","moved","static","profileTrackUidKey","dataset","spatialRotation","spatialTargetZ","heatmapZoomX","heatmapZoomY","heatmapTargetX","heatmapTargetY","cellFilter","cellHighlight","cellSetSelection","cellSetHighlight","cellSetColor","path","geneFilter","geneHighlight","geneSelection","geneExpressionColormap","geneExpressionColormapRange","cellColorEncoding","spatialRasterLayers","index","colormap","domainType","transparentColor","channels","selection","z","t","c","slider","spatialCellsLayer","spatialMoleculesLayer","spatialNeighborhoodsLayer","additionalCellSets","moleculeHighlight","images","metadata","omeTiffOffsetsUrl","schemaVersion","variablesLabelOverride","bems973","usePhysicalSizeScaling","isBitmask","renderLayers","xy","mappings","key","dims","groupName","setName","matrix","CARD","PRIMARY_CARD","SECONDARY_CARD","BLACK_CARD","SCROLL_CARD","Warning","title","preformatted","unformatted","theme","className","styles","makeStyles","paper","maxHeight","overflow","zIndex","span","textAlign","paddingLeft","paddingRight","popper","muiTheme","dark","createMuiTheme","palette","primary","grey","secondary","primaryBackground","primaryBackgroundHighlight","primaryBackgroundInput","primaryBackgroundDim","primaryBackgroundLight","primaryForeground","primaryForegroundDim","primaryForegroundActive","secondaryBackground","secondaryBackgroundDim","secondaryForeground","MuiButtonBase","disableRipple","light","fromEntries","iterable","reduce","obj","val","Object","assign","pluralize","singular","plural","count","capitalize","word","charAt","slice","getNextScope","prevScopes","nextScope","chars","nextCharIndices","next","r","forEach","charIndex","unshift","increment","i","length","push","join","includes","getSourceFromLoader","loader","level","data","Array","isArray","isRgb","source","shape","dtype","labels","indexOf","makeGridLayout","colXs","colLayout","colWs","entries","a","id","spec","resolveLayout","cols","layouts","breakpoints","components","positions","def","columns","columnXs","columnCount","keys","ResponsiveHeightGridLayout","prevProps","this","onWindowResize","WidthProvider","Responsive","VitessceGridLayout","getComponent","padding","margin","draggableHandle","reactGridLayoutProps","rowHeight","onRemoveComponent","onLayoutChangeProp","onLayoutChange","gridCols","gridLayouts","gridBreakpoints","gridComponents","maxRows","Math","max","values","xywh","style","layoutChildren","k","v","Component","uuid","removeGridComponent","window","innerHeight","containerPadding","newLayout","newComponentProps","nextC","prevC","parseInt","substring","nextProps","isEqual","defaultProps","AbstractLoader","subscriptions","Error","subscriber","token","uuidv4","AbstractLoaderError","message","LoaderFetchError","datasetType","datasetFileType","datasetUrl","responseHeaders","console","warn","LoaderValidationError","reason","JSON","stringify","LoaderNotFoundError","LoaderResult","coordinationValues","typeToSchema","cells","cellsSchema","molecules","moleculesSchema","neighborhoods","neighborhoodsSchema","raster","rasterSchema","cellSetsSchema","JsonLoader","params","schema","fetch","then","response","ok","json","Promise","reject","catch","resolve","validate","valid","failureReason","Ajv","compile","errors","AbstractZarrLoader","store","HTTPStore","supportedMethods","fetchOptions","getItem","buf","text","TextDecoder","decode","parse","KeyError","MatrixZarrLoader","attrs","getJson","arr","openArray","getRaw","all","loadAttrs","loadArr","GenesJsonAsMatrixZarrLoader","genesSchema","payload","rows","normalizedFlatMatrix","flatMap","cellId","geneId","Uint8Array","from","ClustersJsonAsMatrixZarrLoader","clustersSchema","normalizedMatrix","col","min","d","floor","tNormalizedMatrix","range","j","flat","HIERARCHICAL_SCHEMAS","cell","latestVersion","TABULAR_SCHEMAS","cellSetsTabularSchema","cellLayerDefaultProps","updateStatus","setCellHighlight","setComponentHover","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","pickable","autoHighlight","filled","getElevation","onHover","info","object","factors","cellInfoFactors","factor","DEFAULT_COLOR","PALETTE","VIEWER_PALETTE","COLORMAP_OPTIONS","DEFAULT_GL_OPTIONS","webgl2","getNextNumberedNodeName","nodes","prefix","find","n","setCellSelection","cellSelection","setCellSetSelection","setAdditionalCellSets","setCellSetColor","setCellColorEncoding","CELL_SELECTIONS_LEVEL_ZERO_NAME","selectionsLevelZeroNode","tree","nextAdditionalCellSets","datatype","nextName","children","colorIndex","set","nextPath","mergeCellSets","cellSets","asEsModule","__esModule","default","GLOBAL_LABELS","DEFAULT_RASTER_LAYER_PROPS","renderingMode","RENDERING_MODES","ADDITIVE","use3d","DEFAULT_MOLECULES_LAYER","DEFAULT_CELLS_LAYER","DEFAULT_NEIGHBORHOODS_LAYER","padWithDefault","defaultValue","padWidth","newArr","BitmaskLayer","fs","vs","modules","project32","picking","oldProps","changeFlags","cellColor","setColorTexture","colorTex","Texture2D","context","gl","mipmaps","parameters","GL","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","format","RGB","dataFormat","UNSIGNED_BYTE","setState","opts","uniforms","channelIsOn","hoveredCell","state","textures","model","setUniforms","hovered","colorTexHeight","colorTexWidth","draw","isWebGL2On","isWebGL2","Float32Array","R32F","LUMINANCE","RED","FLOAT","XRLayer","getSingleSelectionStats2D","getRaster","selectionStats","getChannelStats","domain","autoSliders","getSingleSelectionStats3D","lowResSource","sizeZ","raster0","rasterMid","rasterTop","stats0","statsMid","statsTop","layerName","compare","getSingleSelectionStats","getStats","getMultiSelectionStats","selections","stats","domains","stat","sliders","getBoundingCube","physicalSizeScalingMatrix","meta","physicalSizes","size","ratio","Matrix4","scale","identity","getPhysicalSizeScalingMatrix","buildDefaultSelection","globalSelection","globalIndices","dim","getDefaultGlobalSelection","firstNonGlobalDimension","isInterleaved","lastDimSize","initializeLayerChannels","result","defaultSelection","colors","channel","getMetaWithTransformMatrices","imageMeta","imageLoaders","sources","transform","translate","some","Boolean","every","minPhysicalSize","acc","hasZPhyscialSize","sizes","unit","replace","undefined","divide","newMeta","toArray","initializeRasterLayersAndChannels","rasterLayers","rasterRenderLayers","nextImageLoaders","nextImageMetaAndLayers","autoImageLayerDefPromises","layer","loaderCreator","loaders","globalIndicesOfRenderLayers","imageName","findIndex","image","layerIndex","autoImageLayerDefPromise","modelMatrix","autoImageLayerDefs","renderSubBitmaskLayers","tile","bbox","base","bounds","tileSize","channelData","cellColorData","cellColorHeight","cellColorWidth","tileId","initLoader","imageData","dimensions","isPyramid","field","metadataUrl","zarrMetadata","paths","metaKey","arrMetaKeys","chunks","yChunk","xChunk","log2","ZarrPixelSource","res","offsets","loadOmeTiff","Channels","Pixels","Name","RasterLoader","URL","createObjectURL","Blob","urls","imagesWithLoaderCreators","autoImageCache","autoImages","autoImageLayers","imageLayerLoaders","imageLayerMeta","hexToRgb","hex","exec","OmeZarrLoader","loadOmeZarr","omero","error","rdefs","defaultT","defaultZ","start","end","label","callbackOnKeyPress","event","callback","preventDefault","colorArrayToString","rgbArray","tinycolor","g","b","toHexString","colorStringToArray","colorString","colorObj","toRgb","getLevelTooltipText","repeat","isEqualOrPrefix","targetPath","testPath","tryRenamePath","nextTargetPath","pathToKey","nodeToSet","currNode","nodeToHeight","newLevel","childrenHeights","treeFindNodeByNamePath","currTree","targetNamePath","foundNodes","levelZeroNode","nodeFindNodeByNamePath","node","currLevelIndex","currNodeName","child","nodeTransform","predicate","transformedPaths","currPath","newPath","concat","nodeAppendChild","newChild","treeToUnion","checkedPaths","nodeSets","hEl","nodeToLevelDescendantNamePaths","prevPath","stopEarly","treeExport","treeExportLevelZeroNode","nodePath","cellSetColors","nodeWithColors","nodeTransformAll","newNode","nPath","nodeColor","treeToExport","nodeName","treeInitialize","colorMixWithUncertainty","originalColor","p","mixingColor","treeToSetSizesBySetNames","selectedNamePaths","setColor","setNamePath","nodeSet","filterNode","filterPath","treesConflict","testCellSets","testPaths","hasConflict","getPaths","lzn","initializeCellSetColor","nextCellSetColor","nodeCountPerTreePerLevel","fill","treeIndex","processNode","hierarchyLevel","getCellSetPolygons","cellSetPolygons","cellPositions","points","turfFeatureCollection","turfPoint","hullCoords","concaveman","Infinity","centroidCoords","centroid","geometry","coordinates","hull","treeToCellPolygonsBySetNames","tryUpgradeTreeToLatestSchema","itemId","handleImportJSON","importData","handleImportTabular","dsvFormat","row","obsId","predictionScore","isNil","treeToImport","Set","groupRows","setRows","levelOneNode","handleExportJSON","jsonString","encodeURIComponent","downloadForUser","dataString","fileName","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","CellSetsJsonLoader","rawData","upgradedData","newAutoSetSelectionParentName","newAutoSetSelections","newAutoSetColors","readFloat32FromUint8","bytes","Int32Array","buffer","parseVlenUtf8","decoder","dataEnd","output","l","BaseAnnDataLoader","cellSetZarrLocation","categories","getFlatArrDecompressed","categoriesValues","cellSetsArr","get","cellSetsValues","mappedCellSetValues","String","parseAndMergeTextBytes","dbytes","mergeBytes","tmp","byteLength","numRequests","ceil","requests","item","keyPrefix","compressor","filters","cellNames","_index","normalize","concatenateColumnVectors","numCols","numRows","BYTES_PER_ELEMENT","DataView","ArrayBuffer","TypedArray","constructor","CellSetsZarrLoader","cellSetsTree","loadCellNames","loadCellSetIds","cellSetIds","uniqueCellSetIds","sort","clusters","cluster","CellsZarrLoader","loadNumeric","poly","coordinationName","loadMappings","loadXy","loadPoly","loadFactors","factorsObj","split","geneNames","geneFilterZarr","_","filterZarr","loadGeneNames","genes","gene","sparseArrays","_getGeneIndices","indices","_openSparseArrays","indptrArr","indexArr","cellXGeneArr","_getNumCells","numCells","startRowIndex","endRowIndex","isColumnAllZeros","geneData","rowIndices","cellXGeneData","rowIndex","_getNumGenes","numGenes","_loadCSRSparseCellXGene","cellXGene","_sparseMatrix","cellXGeneMatrix","rowStart","rowEnd","colStart","colEnd","matrixGeneFilter","_matrixZattrs","encodingType","_loadCSCSparseCellXGene","_getFilteredGenes","filteredGenes","numGenesFiltered","cellXGeneMatrixFiltered","loadGeneSelection","shouldNormalize","_loadCSCGeneSelection","_loadCSRGeneSelection","loadCellXGene","matrixGeneFilterZarr","GenomicProfilesZarrLoader","fileTypeToLoader","RasterJsonLoader","AnnDataLoaders","useViewConfigStore","create","viewConfig","setViewConfig","setLoaders","setCoordinationValue","parameter","scope","removeComponent","splice","changeLayout","newProps","useAuxiliaryStore","auxiliaryStore","useHoverStore","componentHover","useWarnStore","warning","setWarning","useViewInfoStore","viewInfo","setComponentViewInfo","useGridSizeStore","resizeCount","incrementResizeCount","useCoordination","shallow","useMemo","AUXILIARY_COORDINATION_TYPES_MAP","useAuxiliaryCoordination","mappedCoordinationScopes","newCoordinationScopes","coordinationType","mapCoordinationScopes","mappedParameters","mapParameters","useLoaders","useComponentHover","useSetComponentHover","useWarning","useSetWarning","useComponentViewInfo","useCallback","useSetComponentViewInfo","setViewInfoRef","useRef","getState","current","useGridResize","useEmitGridResize","VitessceGrid","initialRowHeight","config","useState","containerHeight","setContainerHeight","setRowHeight","containerRef","useEffect","bottomY","len","getNumRows","newRowHeight","getRowHeight","containerRect","getBoundingClientRect","addEventListener","removeEventListener","useRowHeight","onResize","configDescription","datasetLoaders","matchingLoaderClass","createLoaders","ref","onResizeStop","COORDINATION_TYPES","DATASET","EMBEDDING_TYPE","EMBEDDING_ZOOM","EMBEDDING_ROTATION","EMBEDDING_TARGET_X","EMBEDDING_TARGET_Y","EMBEDDING_TARGET_Z","EMBEDDING_CELL_SET_POLYGONS_VISIBLE","EMBEDDING_CELL_SET_LABELS_VISIBLE","EMBEDDING_CELL_SET_LABEL_SIZE","EMBEDDING_CELL_RADIUS","SPATIAL_ZOOM","SPATIAL_ROTATION","SPATIAL_TARGET_X","SPATIAL_TARGET_Y","SPATIAL_TARGET_Z","SPATIAL_ROTATION_X","SPATIAL_ROTATION_Y","SPATIAL_ROTATION_Z","SPATIAL_ROTATION_ORBIT","SPATIAL_ORBIT_AXIS","SPATIAL_AXIS_FIXED","HEATMAP_ZOOM_X","HEATMAP_ZOOM_Y","HEATMAP_TARGET_X","HEATMAP_TARGET_Y","CELL_FILTER","CELL_HIGHLIGHT","CELL_SET_SELECTION","CELL_SET_HIGHLIGHT","CELL_SET_COLOR","GENE_FILTER","GENE_HIGHLIGHT","GENE_SELECTION","GENE_EXPRESSION_COLORMAP","GENE_EXPRESSION_TRANSFORM","GENE_EXPRESSION_COLORMAP_RANGE","CELL_COLOR_ENCODING","SPATIAL_RASTER_LAYERS","SPATIAL_CELLS_LAYER","SPATIAL_MOLECULES_LAYER","SPATIAL_NEIGHBORHOODS_LAYER","GENOMIC_ZOOM_X","GENOMIC_ZOOM_Y","GENOMIC_TARGET_X","GENOMIC_TARGET_Y","ADDITIONAL_CELL_SETS","MOLECULE_HIGHLIGHT","DEFAULT_COORDINATION_VALUES","AUTO_INDEPENDENT_COORDINATION_TYPES","COMPONENT_COORDINATION_TYPES","scatterplot","spatial","heatmap","cellSetSizes","cellSetExpression","status","expressionHistogram","layerController","higlass","genomicProfiles","upgradeReplaceViewProp","prevZScopes","prevTXScopes","prevTYScopes","nextZScope","nextTXScope","nextTYScope","targetX","targetY","SCHEMA_HANDLERS","configSchema0_1_0","datasetUid","embeddingTargetX","embeddingTargetY","componentDef","newComponentDef","newScopeValues","newDatasetUid","addSchema","configSchema1_0_0","replaceLayerType","layerType","isRaster","typedLayers","newLayer","newComponent","replaceCoordinationScope","configSchema1_0_1","globalDisable3d","newConfig","cloneDeep","configSchema1_0_2","CallbackPublisher","onWarn","onConfigChange","onLoaderChange","validateOnConfigChange","subscribe","e","validateViewConfig","getWindowDimensions","innerWidth","useGridItemSize","setHeight","setWidth","onResizeDebounced","debounce","trailing","useDeckCanvasSize","deckRef","canvasRect","deck","canvas","useReady","supportedItems","items","waiting","setWaiting","setItemIsReady","readyItem","waitingItems","nextWaitingItems","log","resetReadyItems","useUrls","setUrls","prev","warnInConsole","initCoordinationSpace","setters","initialValues","setterName","setterFunc","initialValue","equal","useCellsData","addUrl","isRequired","coordinationSetters","initialCoordinationValues","setCells","cellsCount","setCellsCount","load","useCellSetsData","setCellSets","useExpressionMatrixData","expressionMatrix","setExpressionMatrix","useGeneSelection","setGeneData","expressionDataForSelection","sel","geneIndex","expressionData","cellIndex","useExpressionAttrs","setAttrs","useMoleculesData","setMolecules","moleculesCount","setMoleculesCount","locationsCount","setLocationsCount","useRasterData","setRaster","setImageLayerLoaders","setImageLayerMeta","nextImageMeta","LoadingIndicator","CircularProgress","MuiPopper","classes","anchorEl","open","placement","Popper","MuiPaper","Paper","elevation","MuiSpan","PopperMenu","buttonIcon","toggle","buttonClassName","anchorRef","IconButton","onClick","ClickAwayListener","onClickAway","MenuList","useStyles","iconButton","border","marginLeft","background","borderRadius","marginRight","verticalAlign","downloadLink","SettingsIconWithArrow","PlotOptions","useReducer","CloudDownloadIconWithArrow","DownloadOptions","MenuItem","dense","Link","underline","href","rel","ClosePaneButton","TitleInfo","isScroll","isSpatial","isReady","childClassName","Description","metadataRecord","DESCRIPTION_DATA_TYPES","Status","messages","SelectableTable","hasColorEncoding","onChange","idKey","valueKey","allowMultiple","allowUncheck","showTableHead","showTableInputs","testHeight","testWidth","selectedRows","setSelectedRows","onSelectRow","checked","union","difference","handleInputChange","getDataFromIds","ids","isSelected","initialSelectedRows","selectedRowData","inputUuid","hiddenInputsClass","rowRenderer","role","htmlFor","column","headerRowRenderer","gridStyle","outline","rowCount","headerHeight","rowGetter","Genes","geneList","setGeneSelection","searchTerm","setSearchTerm","searchResults","setSearchResults","results","localeCompare","placeholder","GENES_DATA_TYPES","Tree","React","forwardRef","prefixCls","showIcon","blockNode","checkable","itemHeight","classNames","virtual","HelpTooltip","content","overlayClassName","spanRef","getTooltipContainer","closest","overlay","Popover","PopoverMenuListButton","subtitle","handler","handlerKey","confirm","isConfirming","setIsConfirming","handleOrRequireConfirm","titleWithConfirm","onKeyPress","PopoverMenuList","menuConfig","defaultPalette","disableAlpha","triangle","onChangeComplete","rgb","PopoverMenu","setVisible","onVisibleChange","_extends","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","trigger","mouseEnterDelay","mouseLeaveDelay","SvgMenu","_ref","svgRef","titleId","viewBox","ForwardRef","makeNodeViewMenuConfig","onCheckNode","onNodeRemove","onNodeSetIsEditing","onExportLevelZeroNodeJSON","onExportLevelZeroNodeTabular","onExportSetJSON","editable","exportable","NamedSetNodeStatic","tooltipText","nodeKey","checkbox","isChecking","isLeaf","onNodeSetColor","onNodeView","expanded","onCheckLevel","checkedLevelPath","checkedLevelIndex","disableTooltip","shouldCheckNextLevel","nextLevelToCheck","niceSize","Intl","NumberFormat","tooltipProps","popoverMenuConfig","NamedSetNodeEditing","onNodeSetName","onNodeCheckNewName","currentTitle","setCurrentTitle","hasConflicts","trySetName","autoFocus","onFocus","select","NamedSetNode","isEditing","isCurrentSet","LevelsButtons","onCheck","isChecked","clsx","SwitcherIcon","isOpen","hexColor","focusable","data-icon","aria-hidden","TreeNode","renderSelector","onDragStartProp","onDragStart","rcTree","prefixClass","draggable","wrapClass","isDraggable","setSelectHandle","getNodeState","aria-grabbed","renderCheckbox","renderLevels","renderSwitcher","onNodeExpand","onNodeExpandWrapper","switcherClass","tabIndex","loading","dragOver","dragOverGapTop","dragOverGapBottom","selected","halfChecked","onDragEndProp","onDragEnd","expandable","otherProps","filterTreeNode","disabled","isDisabled","dataAndAriaAttributeProps","getDataAndAria","onDragEnter","onDragOver","onDragLeave","onDrop","bind","renderChildren","RcTreeNode","SvgUnion","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","SvgIntersection","mask","SvgComplement","PlusButton","onError","onImportTree","onCreateLevelZeroNode","importable","onImport","importHandler","mimeType","uploadInputNode","File","FileReader","FileList","reader","readAsText","SetOperationButtons","onUnion","onIntersection","onComplement","operatable","hasCheckedSetsToUnion","hasCheckedSetsToIntersect","hasCheckedSetsToComplement","processSets","sets","SetsManager","additionalSets","checkedLevel","levelSelection","setSelection","setExpansion","onExpandNode","onDropNode","isDragging","setIsDragging","isEditingNodeName","setIsEditingNodeName","processedSets","processedAdditionalSets","additionalSetKeys","getAllKeys","allSetSelectionKeys","allSetExpansionKeys","setSelectionKeys","setExpansionKeys","additionalSetSelectionKeys","additionalSetExpansionKeys","renderTreeNodes","readOnly","nodeToRenderProps","levelZeroPath","levelIndex","checkedKeys","expandedKeys","autoExpandParent","onExpand","dropKey","eventKey","dragKey","dragNode","dropToGap","dropPosition","CELL_SETS_DATA_TYPES","spline","v1","v2","v0","v3","t1","t2","t3","innerBasis","interpolatePlasma","interpolateSequentialMulti","getCellColors","expressionDataAttrs","geneExpColormap","Map","cellColorsArray","prob","treeToCellColorsBySetNames","ClickableDrawRectangleMode","onEdit","editType","DrawRectangleMode","ClickableDrawPolygonByDraggingMode","DrawPolygonByDraggingMode","MODE_MAP","SELECTION_TYPE","RECTANGLE","POLYGON","selectionType","layerIds","onSelect","EMPTY_DATA","features","PASS_THROUGH_PROPS","SelectionLayer","getCellCoords","cellsQuadTree","flippedCoordinates","flipY","selectedPolygon","turfPolygon","pickingInfos","visit","x0","y0","x1","y1","nodePoints","nodePolygon","nodePolygonContainsSelectedPolygon","booleanContains","nodePolygonWithinSelectedPolygon","booleanWithin","nodePolygonOverlapsSelectedPolgyon","booleanOverlap","booleanPointInPolygon","ViewMode","inheritedProps","EditableGeoJsonLayer","getSubLayerProps","modeConfig","dragToDraw","selectedFeatureIndexes","updatedData","_selectPolygonObjects","CompositeLayer","getBaseLayerId","layerId","getSelectionLayers","tool","updateCellsSelection","cellBaseLayerId","editHandlePointRadius","cellIds","cellObj","getTentativeFillColor","getTentativeLineColor","getTentativeLineDashArray","lineWidthMinPixels","lineWidthMaxPixels","getEditHandlePointColor","getEditHandlePointRadius","editHandlePointRadiusScale","editHandlePointRadiusMinPixels","editHandlePointRadiusMaxPixels","overlayBaseProps","getColor","rest","getFillColor","getLineColor","getFilterValue","extensions","DataFilterExtension","filterSize","filterRange","SelectablePolygonLayer","PolygonLayer","SelectableScatterplotLayer","ScatterplotLayer","THEME_TO_TEXT_COLOR","AXIS_FONT_FAMILY","PIXELATED_TEXTURE_PARAMETERS","HeatmapBitmapLayer","shaders","extension","_mergeShaders","getShaders","args","loadTexture","_getShaders","bitmapTexture","aggSizeX","aggSizeY","colorScaleLo","colorScaleHi","uBitmapTexture","uTextureSize","uAggSize","uColorScaleRange","delete","BitmapLayer","async","desaturate","tintColor","PixelatedBitmapLayer","textureParameters","HeatmapCompositeTextLayer","axisTopLabelData","matrixLeft","matrixWidth","viewWidth","axisTopTitle","showAxisTopLabels","cellWidth","axisLabelTop","axisOffsetTop","scaleFactor","TextLayer","getText","getPosition","getTextAnchor","getSize","getAngle","fontFamily","updateTriggers","axisLeftLabelData","matrixTop","matrixHeight","viewHeight","axisLeftTitle","showAxisLeftLabels","cellHeight","axisLabelLeft","axisOffsetLeft","_renderAxisTopLayers","_renderAxisLeftLayers","createCellsQuadTree","cellsEntries","quadtree","addAll","SvgNearMe","SvgSelectionRectangle","SvgSelectionLasso","alt","isActive","inactive","active","ToolMenu","setActiveTool","activeTool","visibleTools","pan","selectRectangle","selectLasso","getCursorWithTool","getCursor","interactionState","AbstractSpatialOrScatterplot","viewport","onViewStateChange","onInitializeViewInfo","onWebGLInitialized","onToolChange","nextViewState","viewState","setViewState","spatialAxisFixed","onToolChangeProp","coordinate","sourceLayer","hasBitmask","layerZoomScale","round","dataCoords","coords","Number","updateViewInfo","project","positionX","positionY","layerProps","getLayers","showCellSelectionTools","cellsLayer","showPanTool","useDevicePixels","views","OrbitView","controller","orbitAxis","OrthographicView","glOptions","dragPan","PureComponent","constant","jiggle","random","makeDefaultGetCellPosition","cellEntry","available","s","mappedCell","makeDefaultGetCellCoords","Scatterplot","cellSetsForceSimulation","masses","strength","iterations","xCenter","vx","yCenter","vy","prepare","quad","force","nodeSize","nodeMass","xi","yi","visitAfter","xSize","ySize","xd","abs","yd","sqrt","m","iterate","initialize","forceCollideRects","cellSetsLabelPrevZoom","cellSetsLayers","onUpdateCellsData","onUpdateCellsLayer","onUpdateCellSetsLayers","getCellPosition","cellRadiusScale","cellOpacity","getCellIsSelected","makeDefaultGetCellIsSelected","cellColors","getCellColor","makeDefaultGetCellColors","onCellClick","filteredCellsEntries","radiusScale","radiusMinPixels","radiusMaxPixels","getLineWidth","cellSetPolygonsVisible","cellSetLabelsVisible","cellSetLabelSize","wireframe","getPolygon","collisionForce","forceSimulation","tick","getAlignmentBaseline","fontWeight","createSelectionLayers","createCellsLayer","onlyViewStateChange","createCellSetsLayers","viewInfoDidUpdate","shallowDiff","propName","forceUpdate","ScatterplotWrapper","Tooltip","parentWidth","parentHeight","isNarrow","el","offsetPercentage","translateX","translateY","whiteSpace","Tooltip2D","parentUuid","sourceUuid","isTooltipVisible","crosshairWidth","TooltipContent","ScatterplotTooltipSubscriber","getCellInfo","cellInfo","box","boxSizing","sliderValueLabel","tableContainer","labelCell","inputCell","OptionsContainer","Box","TableContainer","Table","table","TableBody","CellColorEncodingOption","observationsLabel","observationsLabelNice","TableRow","TableCell","Select","native","inputProps","ScatterplotOptions","setCellRadius","setCellSetLabelsVisible","setCellSetLabelSize","setCellSetPolygonsVisible","Checkbox","Slider","root","valueLabel","aria-labelledby","valueLabelDisplay","step","SCATTERPLOT_DATA_TYPES","defaultGetCellCoords","Spatial","moleculesEntries","moleculesLayer","neighborhoodsLayer","imageLayers","layerLoaderSelections","randomColorData","onUpdateMoleculesData","onUpdateMoleculesLayer","onUpdateNeighborhoodsData","onUpdateNeighborhoodsLayer","onUpdateImages","layerDef","getCellPolygon","makeDefaultGetCellPolygon","lineWidthScale","setMoleculeHighlight","getMoleculeColor","getMoleculePosition","getRadius","getNeighborhoodPolygon","neighborhoodsEntry","neighborhoodsEntries","ScaleBarLayer","rawLayerDef","loaderSelection","nextLoaderSelection","prevLoaderSelection","resolution","xSlice","ySlice","zSlice","visibilities","MultiscaleImageLayer","renderSubLayers","excludeBackground","onViewportLoad","VolumeLayer","ImageLayer","getLayerLoaderTuple","Layer","colorValues","sliderValues","rasterLayersCallbacks","use3dIndex","createImageLayer","createScaleBarLayer","molecule","createMoleculesLayer","createNeighborhoodsLayer","createImageLayers","onUpdateCellColors","SpatialWrapper","createStyles","cameraLabel","button","ToggleFixedAxisButton","setSpatialAxisFixed","SpatialOptions","SpatialTooltipSubscriber","SPATIAL_DATA_TYPES","position","transition","HeatmapControls","onColorScaleChange","orientation","layerFilter","startsWith","defaultPoolSize","navigator","hardwareConcurrency","HeatmapPool","Worker","waitForWorker","currentWorker","onmessage","finishTask","onerror","postMessage","workers","idleWorkers","waitQueue","idleWorker","pop","waiter","promise","terminate","Heatmap","componentName","rawViewState","setHeatmapControls","heatmapControls","expression","clearPleaseWait","hoverInfo","setGeneHighlight","createDefaultUpdateGenesHover","createDefaultUpdateViewInfo","setIsRendering","variablesTitle","observationsTitle","minZoom","workerPool","HeatmapWorkerPool","tilesRef","dataRef","axisLeftLabels","setAxisLeftLabels","axisTopLabels","setAxisTopLabels","setColorScaleLo","setColorScaleHi","newValue","tileIteration","incTileIteration","backlog","setBacklog","newBuffer","copyUint8Array","newCellOrdering","oldCellOrdering","cellLabelMaxLength","geneLabelMaxLength","clamp","getAxisSizes","offsetTop","offsetLeft","matrixRight","matrixBottom","xTiles","yTiles","tileWidth","tileHeight","colI","rowI","zoomedMouseY","zoomedMouseX","minY","minInViewY","maxInViewY","globalRowY","minX","minInViewX","maxInViewX","globalRowX","heatmapToMousePosition","nextZoom","nextScaleFactor","minTargetX","maxTargetX","minTargetY","maxTargetY","nextTarget","curr","promises","process","tileI","tileJ","cellOrdering","tiles","currWork","currIndex","heatmapLayers","getLayer","textLayers","cellColorsTiles","offset","colorBarTileWidthPx","colorBarTileHeightPx","tileData","Uint8ClampedArray","TILE_SIZE","tileY","rValue","gValue","bValue","ImageData","cellColorsLayers","COLOR_BAR_SIZE","offsetCenter","mouseX","mouseY","viewMouseX","viewMouseY","mouseToHeatmapPosition","obsI","varI","varId","HeatmapTooltipSubscriber","getGeneInfo","cellCoord","geneInfo","geneCoord","HEATMAP_DATA_TYPES","container","display","justifyContent","alignItems","flexWrap","icon","action","ColorPalette","handleChange","aria-label","menuButton","ChannelOptions","handlePropertyChange","handleChannelRemove","handleIQRUpdate","disableGutters","DOMAINS","needMin","DTYPE_VALUES","getDomains","ChannelSelectionDropdown","channelOptions","selectionIndex","opt","ChannelVisibilityCheckbox","abbreviateNumber","maxNaiveDigits","isInteger","naive","maximumSignificantDigits","useGrouping","toExponential","ChannelSlider","handleChangeDebounced","valueLabelFormat","getAriaLabel","marginTop","RasterChannelController","visibility","channelId","newDomainType","dimName","colormapOn","isLoading","newUse3d","setDomain","setDomainType","setUse3d","rgbColor","on","toRgbUIString","mounted","hasDomainChanged","has3dChanged","hasSelectionChanged","newDomain","Grid","direction","justify","xs","BitmaskChannelController","disableOptions","sharedControllerStyles","withStyles","flexDirection","useControllerSectionStyles","StyledExpansionPanelDetails","ExpansionPanelDetails","StyledExpansionPanelSummary","marginBottom","spacing","expandIcon","ExpansionPanelSummary","StyledInputLabel","InputLabel","OverflowEllipsisGrid","textOverflow","StyledSelectionSlider","markActive","VectorLayerController","handleLayerChange","isOn","Typography","handleCheckBoxChange","handleSliderChange","DOMAIN_OPTIONS","getStatsForResolution","depth","depthDownsampled","totalBytes","VolumeDropdown","loaderWithMeta","handleMultiPropertyChange","currResolution","disable3d","setRasterLayerCallback","setAreAllChannelsLoading","spatialHeight","spatialWidth","shouldUse3D","propertiesChanged","ch","defaultViewState","getDefaultInitialViewState","rotationX","rotationOrbit","newChannels","hasZStack","performance","memory","jsHeapSizeLimit","canLoadResolution","decimals","dm","parseFloat","pow","toFixed","formatBytes","ColormapSelect","inputId","TransparentColorCheckbox","float","OpacitySlider","SliderDomainSelector","GlobalSelectionSlider","possibleValues","onChangeCommitted","marks","LayerOption","LayerOptions","handleColormapChange","handleOpacityChange","handleTransparentColorChange","globalControlLabels","globalLabelValues","handleGlobalChannelsSelectionChange","handleDomainChange","shouldShowTransparentColor","shouldShowDomain","shouldShowColormap","hasDimensionsAndChannels","useSlicerStyles","enabled","Slicer","handleSlicerSetting","sliceValuesAndSetSliceFunctions","xSliceNew","ySliceNew","zSliceNew","Slicers","setVal","renderingOptions","RenderingModeSelect","handleRenderingModeChange","FormControl","fullWidth","ReCenterButton","Button","VolumeOptions","TabPanel","other","hidden","getDomainsAndSliders","buttonStyles","borderStyle","LayerController","handleLayerRemove","ChannelController","setAreLayerChannelsLoading","areLayerChannelsLoading","firstSelection","tab","setTab","isExpanded","setIsExpanded","o","setGlobalLabelValues","setOpacity","setChannels","setChannelsAndDomainType","setChannel","addChannel","newAreLayerChannelsLoading","handleChannelAdd","newChannelId","areLayerChannelsLoadingCallback","newChannelsWithSelection","channelControllers","channelLabel","setIsLoading","loaderData","q1","q3","property","update","removeChannel","controllerSectionClasses","Visibility","VisibilityIcon","VisibilityOffIcon","useVolumeTabs","FullController","MAX_SLIDERS_AND_CHANNELS","variant","startIcon","ExpansionPanel","attributes","TransitionProps","enter","aria-controls","stopPropagation","Tabs","newTab","Tab","addButton","ImageAddIcon","ImageAddButton","imageOptions","handleImageAdd","imgData","handleAdd","LAYER_CONTROLLER_DATA_TYPES","LayerControllerMemoized","memo","setMoleculesLayer","canShowCellVecmask","setCellsLayer","setRasterLayersCallbacks","areLoadingRasterChannnels","setAreLoadingRasterChannnels","handleRasterLayerChange","handleRasterLayerRemove","layerIs3DIndex","setZoom","setTargetX","setTargetY","setTargetZ","setRotationX","setRotationOrbit","componentHeight","componentWidth","spatialLayout","layerMeta","cb","newRasterLayersCallbacks","newZoom","newRotationX","newRotationOrbit","newAreLoadingRasterChannnels","LayerControllerSubscriber","setRasterLayers","setSpatialRasterLayers","setSpatialCellsLayer","setSpatialMoleculesLayer","setSpatialTargetX","setSpatialTargetY","setSpatialTargetZ","setSpatialRotationX","setSpatialRotationOrbit","setSpatialZoom","scopes","useComponentLayout","layerControllerRef","clientHeight","clientWidth","useClosestVitessceContainerSize","windowDimensions","setWindowDimensions","useWindowDimensions","windowHeight","windowWidth","newLayers","PIXI_BUNDLE_VERSION","packageJson","dependencies","HIGLASS_BUNDLE_VERSION","PIXI_BUNDLE_URL","HIGLASS_BUNDLE_URL","dynamicImportPolyfill","register","dataFetcher","ZarrMultivecDataFetcher","pluginType","HiGlassComponent","lazy","ReactDOM","handleImportError","__import__","hglib","HiGlassLazy","hgViewConfigProp","hgOptionsProp","hgOptions","genomeSize","setGenomicZoomX","setGenomicZoomY","setGenomicTargetX","setGenomicTargetY","hgInstance","setHgInstance","isActiveRef","centerX","genomesPerUnitX","unitX","initialXDomain","centerY","genomesPerUnitY","unitY","initialYDomain","zoomFixed","trackSourceServers","exportViewUrl","zoomLocks","locksByViewUid","locksDict","locationLocks","valueScaleLocks","handleMouseEnter","handleMouseLeave","api","viewConfigString","xDomain","yDomain","nextGenomicZoomX","nextGenomicZoomY","nextGenomicTargetX","nextGenomicTargetY","off","fallback","bounded","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","sizeMode","HIGLASS_DATA_TYPES","DATASET_NAME","isVega","$schema","VegaPlot","partialSpec","signalListeners","vegaComponent","tooltip","Handler","renderer","VEGA_THEMES","axis","domainColor","gridColor","tickColor","CellSetSizesPlot","keyLength","keyName","mark","encoding","labelExpr","legend","CELL_SET_SIZES_DATA_TYPES","GENOMIC_PROFILES_DATA_TYPES","REFERENCE_TILESETS","hg38","chromosomes","hg19","mm9","mm10","ExpressionHistogram","bin","maxbins","aggregate","EXPRESSION_HISTOGRAM_DATA_TYPES","useExpressionByCellSet","useGeneExpressionTransform","mergedCellSets","cellObjects","cellsArray","treeToObjectsBySetNames","firstGeneSelected","exprMax","cellIndices","normValue","transformedValue","expressionArr","expressionMax","CellSetExpressionPlotOptions","toggleGeneExpressionTransform","CellSetExpressionPlot","domainMax","maxCharactersForLabel","autoMarginBottom","colorScale","plotWidth","plotHeight","bandWidth","rectColor","axisBand","bandPosition","tickExtra","tickOffset","signals","groupby","bandwidth","fields","ops","as","scales","signal","reverse","axes","orient","zindex","tickCount","labelAngle","labelAlign","facet","encode","xc","band","expr","parent","y2","CELL_SET_EXPRESSION_DATA_TYPES","registry","descriptionOverride","setDescription","useDescription","variablesLabel","variablesPluralLabelOverride","variablesPluralLabel","setGeneFilter","resetUrls","newSelection","cellSetExpansion","setCellSetExpansion","upgradedCellSets","allCellIds","setCellSetColorEncoding","levelNodePaths","treeToExpectedCheckedLevel","targetKey","dropPath","dropNode","dropNodeIsLevelZero","dragPath","dropParentNode","dropParentPath","dropNodeCurrIndex","dragNodeName","newDragPath","insertIndex","newLevelZero","addChildFunction","checkPathFunction","newChildren","nodeInsertChild","newColors","newCellSetColor","levelZeroName","newCellSetSelection","prevNodeColor","nextNamePath","renameNode","nextCellSetSelection","nextCellSetExpansion","setsToView","viewNode","expandedPath","importAutoSetColors","exportData","csvString","json2csv","delimiter","handleExportTabular","setToExport","treeExportSet","treeToIntersection","primaryUnion","treeToComplement","observationsLabelOverride","observationsPluralLabelOverride","observationsPluralLabel","titleOverride","targetZ","embeddingTargetZ","setEmbeddingZoom","setEmbeddingTargetX","setEmbeddingTargetY","setEmbeddingTargetZ","setCellFilter","setEmbeddingCellSetPolygonsVisible","setEmbeddingCellSetLabelsVisible","setEmbeddingCellSetLabelSize","setEmbeddingCellRadius","setCellRadiusScale","setCellSelectionProp","cellSetPolygonCache","setCellSetPolygonCache","newCellSetPolygons","cacheGet","cellValues","cellCoordinates","xExtent","yExtent","xRange","yRange","diagonalLength","newScale","newTargetX","newTargetY","subobservationsLabelOverride","subobservationsLabel","subobservationsPluralLabelOverride","subobservationsPluralLabel","spatialRotationX","rotationY","spatialRotationY","rotationZ","spatialRotationZ","spatialRotationOrbit","spatialOrbitAxis","setOrbitAxis","setSpatialOrbitAxis","setNeighborhoodsLayer","setSpatialNeighborhoodsLayer","setNeighborhoods","useNeighborhoodsData","canPassInCellsLayer","useRaster","initialTargetX","initialTargetY","initialTargetZ","initialZoom","zoomBackoff","viewSize","newViewStateZoom","getViewExtentFromPolygonExtents","extents","getInitialSpatialTargets","observationsCount","subobservationsCount","parts","part","shortNumber","makeSpatialSubtitle","newOrbitAxis","zoomX","setZoomX","setHeatmapZoomX","setZoomY","setHeatmapZoomY","setHeatmapTargetX","setHeatmapTargetY","setGeneExpressionColormapRange","isRendering","genesCount","selectedCount","subarray","sum","profileTrackNameKey","higlassServer","assembly","genomicProfilesAttrs","setGenomicProfilesAttrs","useGenomicProfilesData","foregroundColor","dimColor","referenceTracks","referenceTracksHeightSum","profileTrackHeight","row_infos","profileTracks","rowInfo","trackUid","isPath","trackName","setInSelection","trackUidString","track","barFillColor","geneExpressionTransform","setGeneExpressionTransform","setArr","getExistingScopesForCoordinationType","spaceScopes","componentScopes","initializeAuto","scopeValue","newScopes","scopeName","coordinateComponentsIndependent","coordinateComponentsTogether","generateClassName","createGenerateClassName","disableGlobal","Vitessce","oldConfig","fromVersion","upgradeFunction","validateFunction","nextConfig","groupCollapsed","groupEnd","upgradeAndValidate","upgradedConfig","configOrWarning","success","StylesProvider","ThemeProvider","AwaitResponse","responseRef","preformattedDetails","statusText","redirected","react","render","getElementById","renderComponent","datasetId","URLSearchParams","location","search","responsePromise","replaceAll","checkResponse","createApp","module","exports","require"],"mappings":"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","file":"static/js/main.af2e9d5f.chunk.js","sourcesContent":["// Exported because used by the cypress tests: They route API requests to the fixtures instead.\nexport const urlPrefix = 'https://s3.amazonaws.com/vitessce-data/0.0.31/master_release';\n\nfunction makeLayerNameToConfig(datasetPrefix) {\n  return name => ({\n    name,\n    type: name.toUpperCase(),\n    fileType: `${name}.json`,\n    url: `${urlPrefix}/${datasetPrefix}/${datasetPrefix}.${name}.json`,\n  });\n}\n\nconst linnarssonLayerNames = [\n  'cells',\n  'cell-sets',\n  'raster',\n  'molecules',\n  'neighborhoods',\n];\nconst linnarssonDescription = 'Spatial organization of the somatosensory cortex revealed by cyclic smFISH';\nconst linnarssonBase = {\n  description: linnarssonDescription,\n  layers: [\n    ...linnarssonLayerNames.map(makeLayerNameToConfig('linnarsson')),\n    {\n      // TODO: remove this temporary override when the\n      // clusters.json file has been converted to expression-matrix.zarr format.\n      ...makeLayerNameToConfig('linnarsson')('clusters'),\n      type: 'EXPRESSION-MATRIX',\n    },\n  ],\n};\nconst linnarssonBaseNoClusters = {\n  description: linnarssonDescription,\n  layers: linnarssonLayerNames.filter(name => name !== 'clusters')\n    .map(makeLayerNameToConfig('linnarsson')),\n};\n\nconst driesDescription = 'Giotto, a pipeline for integrative analysis and visualization of single-cell spatial transcriptomic data';\nconst driesBase = {\n  description: driesDescription,\n  layers: [\n    'cells',\n    'cell-sets',\n  ].map(makeLayerNameToConfig('dries')),\n};\n\nconst wangDescription = 'Multiplexed imaging of high-density libraries of RNAs with MERFISH and expansion microscopy';\nconst wangBase = {\n  description: wangDescription,\n  layers: [\n    ...['cells', 'molecules'].map(makeLayerNameToConfig('wang')),\n    {\n      // TODO: remove this temporary override when the\n      // genes.json file has been converted to expression-matrix.zarr format.\n      ...makeLayerNameToConfig('wang')('genes'),\n      name: 'expression-matrix',\n      type: 'EXPRESSION-MATRIX',\n    },\n  ],\n};\n\nconst vanderbiltDescription = 'High Bit Depth (uint16) Multiplex Immunofluorescence Imaging';\nconst vanderbiltBase = {\n  description: vanderbiltDescription,\n  layers: [\n    'raster',\n  ].map(makeLayerNameToConfig('spraggins')),\n};\n\n/* eslint-disable object-property-newline */\n/* eslint-disable object-curly-newline */\n// Note that the ordering of the components in the staticLayout\n// can affect the z-index of plot tooltips due to the\n// resulting ordering of elements in the DOM.\nexport const configs = {\n  'just-scatter': {\n    version: '0.1.0',\n    public: false,\n    layers: [\n      {\n        name: 'cells',\n        type: 'CELLS',\n        fileType: 'cells.json',\n        url: `${urlPrefix}/linnarsson/linnarsson.cells.json`,\n        requestInit: {\n          // Where the client checks that the value is from an enumeration,\n          // I've chosen one of the allowed values,\n          // but nothing on our S3 actually needs any of these.\n          method: 'GET',\n          headers: { 'x-foo': 'FAKE' },\n          mode: 'cors',\n          credentials: 'omit',\n          cache: 'no-store',\n          redirect: 'error',\n          referrer: 'FAKE',\n          integrity: 'FAKE',\n        },\n      },\n    ],\n    name: 'Linnarsson, just scatterplot',\n    staticLayout: [\n      {\n        component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 0, w: 12, h: 2,\n      },\n    ],\n  },\n  'just-scatter-expression': {\n    version: '0.1.0',\n    public: false,\n    layers: [\n      {\n        name: 'cells',\n        type: 'CELLS',\n        url: 'https://s3.amazonaws.com/vitessce-data/0.0.20/master_release/linnarsson/linnarsson.cells.json',\n      },\n      {\n        name: 'genes',\n        type: 'GENES',\n        url: 'https://s3.amazonaws.com/vitessce-data/0.0.20/master_release/linnarsson/linnarsson.genes.json',\n      },\n    ],\n    name: 'Linnarsson, just scatterplot and expression',\n    staticLayout: [\n      {\n        component: 'scatterplot',\n        props: {\n          mapping: 't-SNE',\n          view: {\n            zoom: 0.75,\n            target: [0, 0, 0],\n          },\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      {\n        component: 'genes',\n        x: 8, y: 2, w: 4, h: 2,\n      },\n    ],\n  },\n  'linnarsson-2018': {\n    name: 'Linnarsson',\n    version: '1.0.0',\n    description: linnarssonDescription,\n    public: true,\n    datasets: [\n      {\n        uid: 'linnarsson-2018',\n        name: 'Linnarsson 2018',\n        description: `Linnarsson: ${linnarssonDescription}`,\n        files: linnarssonBase.layers.map(file => ({\n          type: file.type.toLowerCase(),\n          fileType: file.fileType,\n          url: file.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace: {\n      embeddingZoom: {\n        PCA: 0,\n        TSNE: 0.75,\n      },\n      embeddingType: {\n        PCA: 'PCA',\n        TSNE: 't-SNE',\n      },\n      spatialZoom: {\n        A: -5.5,\n      },\n      spatialTargetX: {\n        A: 16000,\n      },\n      spatialTargetY: {\n        A: 20000,\n      },\n    },\n    layout: [\n      { component: 'description',\n        x: 0, y: 0, w: 2, h: 1 },\n      { component: 'layerController',\n        x: 0, y: 1, w: 2, h: 4,\n      },\n      { component: 'status',\n        x: 0, y: 5, w: 2, h: 1 },\n      { component: 'spatial',\n        coordinationScopes: {\n          spatialZoom: 'A',\n          spatialTargetX: 'A',\n          spatialTargetY: 'A',\n        },\n        x: 2, y: 0, w: 4, h: 4 },\n      { component: 'genes',\n        x: 9, y: 0, w: 3, h: 2 },\n      { component: 'cellSets',\n        x: 9, y: 3, w: 3, h: 2 },\n      { component: 'heatmap',\n        props: {\n          transpose: true,\n        },\n        x: 2, y: 4, w: 5, h: 2 },\n      { component: 'cellSetExpression',\n        x: 7, y: 4, w: 3, h: 2 },\n      { component: 'expressionHistogram',\n        x: 10, y: 4, w: 2, h: 2 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'PCA',\n          embeddingZoom: 'PCA',\n        },\n        x: 6, y: 0, w: 3, h: 2 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'TSNE',\n          embeddingZoom: 'TSNE',\n        },\n        x: 6, y: 2, w: 3, h: 2 },\n    ],\n  },\n  'linnarsson-2018-two-spatial': {\n    ...linnarssonBase,\n    version: '0.1.0',\n    name: 'Linnarsson (two spatial)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -8,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 5, h: 2 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 5, y: 0, w: 5, h: 2 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 5, y: 2, w: 5, h: 2 },\n      { component: 'genes',\n        x: 10, y: 2, w: 2, h: 2 },\n      { component: 'heatmap',\n        x: 0, y: 4, w: 12 },\n    ],\n  },\n  'linnarsson-2018-just-spatial': {\n    ...linnarssonBaseNoClusters,\n    version: '0.1.0',\n    name: 'Linnarsson (just spatial)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 10, h: 2 },\n      { component: 'genes',\n        x: 10, y: 1, w: 2, h: 1 },\n    ],\n  },\n  'linnarsson-2018-static': {\n    ...linnarssonBase,\n    version: '0.1.0',\n    name: 'Linnarsson (static layout)',\n    staticLayout: [\n      { component: 'description',\n        props: {\n          description: `Linnarsson (static layout): ${linnarssonDescription}`,\n        },\n        x: 0, y: 0, w: 3, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 3, h: 2 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 3, y: 0, w: 6, h: 4 },\n      { component: 'genes',\n        x: 9, y: 2, w: 3, h: 2 },\n      { component: 'heatmap',\n        x: 0, y: 4, w: 12, h: 1 },\n    ],\n  },\n  'linnarsson-2018-dozen': {\n    ...linnarssonBase,\n    version: '0.1.0',\n    name: 'Linnarsson (static layout, redundant components for performance testing)',\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 0, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 0, y: 1, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 4, y: 0, w: 4, h: 1 },\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [18000, 18000, 0],\n          },\n        },\n        x: 4, y: 1, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 2, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 3, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 4, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 't-SNE' },\n        x: 0, y: 5, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 2, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 3, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 4, w: 4, h: 1 },\n      { component: 'scatterplot',\n        props: { mapping: 'PCA' },\n        x: 4, y: 5, w: 4, h: 1 },\n      { component: 'genes',\n        x: 8, y: 2, w: 4, h: 2 },\n      { component: 'heatmap',\n        x: 8, y: 4, w: 4, h: 2 },\n    ],\n  },\n  'dries-2019': {\n    name: 'Dries',\n    version: '1.0.0',\n    description: driesDescription,\n    public: true,\n    datasets: [\n      {\n        uid: 'dries-2019',\n        name: 'Dries 2019',\n        files: driesBase.layers.map(file => ({\n          type: file.type.toLowerCase(),\n          fileType: file.fileType,\n          url: file.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace: {\n      embeddingType: {\n        TSNE: 't-SNE',\n        UMAP: 'UMAP',\n      },\n      embeddingCellSetPolygonsVisible: {\n        A: false,\n      },\n      embeddingCellSetLabelsVisible: {\n        A: true,\n      },\n      embeddingCellSetLabelSize: {\n        A: 16,\n      },\n      embeddingCellRadius: {\n        A: 1,\n      },\n      embeddingZoom: {\n        TSNE: 3,\n        UMAP: 3,\n      },\n      spatialZoom: {\n        A: -4.4,\n      },\n      spatialTargetX: {\n        A: 3800,\n      },\n      spatialTargetY: {\n        A: -900,\n      },\n    },\n    layout: [\n      { component: 'description',\n        x: 9, y: 0, w: 3, h: 2 },\n      { component: 'status',\n        x: 9, y: 2, w: 3, h: 2 },\n      { component: 'cellSets',\n        x: 9, y: 4, w: 3, h: 4 },\n      { component: 'cellSetSizes',\n        x: 5, y: 4, w: 4, h: 4 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'TSNE',\n          embeddingZoom: 'TSNE',\n          embeddingCellSetLabelsVisible: 'A',\n          embeddingCellSetLabelSize: 'A',\n          embeddingCellSetPolygonsVisible: 'A',\n          embeddingCellRadius: 'A',\n        },\n        x: 0, y: 2, w: 5, h: 4 },\n      { component: 'spatial',\n        props: {\n          cellRadius: 50,\n        },\n        coordinationScopes: {\n          spatialZoom: 'A',\n          spatialTargetX: 'A',\n          spatialTargetY: 'A',\n        },\n        x: 5, y: 0, w: 4, h: 4 },\n      { component: 'scatterplot',\n        coordinationScopes: {\n          embeddingType: 'UMAP',\n          embeddingZoom: 'UMAP',\n          embeddingCellSetLabelsVisible: 'A',\n          embeddingCellSetLabelSize: 'A',\n          embeddingCellSetPolygonsVisible: 'A',\n          embeddingCellRadius: 'A',\n        },\n        x: 0, y: 0, w: 5, h: 4 },\n    ],\n  },\n  'wang-2019': {\n    name: 'Wang',\n    version: '1.0.0',\n    description: wangDescription,\n    public: true,\n    datasets: [\n      {\n        uid: 'wang-2019',\n        name: 'Wang 2019',\n        files: wangBase.layers.map(file => ({\n          type: file.type.toLowerCase(),\n          fileType: file.fileType,\n          url: file.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace: {\n      spatialZoom: {\n        A: -1,\n      },\n      spatialLayers: {\n        A: [\n          {\n            type: 'molecules', radius: 2, opacity: 1, visible: true,\n          },\n          {\n            type: 'cells', opacity: 1, radius: 50, visible: true, stroked: false,\n          },\n        ],\n      },\n    },\n    layout: [\n      { component: 'spatial',\n        coordinationScopes: {\n          spatialZoom: 'A',\n          spatialLayers: 'A',\n        },\n        props: {},\n        x: 0, y: 0, w: 10, h: 2 },\n      { component: 'genes',\n        x: 10, y: 0, w: 2, h: 4 },\n      { component: 'expressionHistogram',\n        x: 0, y: 2, w: 10, h: 2 },\n    ],\n  },\n\n  vanderbilt: {\n    ...vanderbiltBase,\n    version: '0.1.0',\n    name: 'Spraggins',\n    public: true,\n    staticLayout: [\n      { component: 'spatial',\n        props: {\n          view: {\n            zoom: -6.5,\n            target: [20000, 20000, 0],\n          },\n        },\n        x: 0, y: 0, w: 9, h: 2 },\n      { component: 'layerController',\n        x: 9, y: 0, w: 3, h: 2 },\n    ],\n  },\n  'just-higlass': {\n    public: false,\n    initStrategy: 'auto',\n    version: '1.0.0',\n    datasets: [\n      {\n        uid: 'higlass-dataset',\n        name: 'HiGlass Dataset',\n        files: [],\n      },\n    ],\n    name: 'HiGlass demo',\n    coordinationSpace: {\n      genomicZoomX: {\n        A: 0,\n      },\n      genomicZoomY: {\n        A: 0,\n      },\n      genomicTargetX: {\n        A: 1549999999.5,\n      },\n      genomicTargetY: {\n        A: 1549999999.5,\n      },\n    },\n    layout: [\n      {\n        component: 'higlass',\n        coordinationScopes: {\n          genomicZoomX: 'A',\n          genomicZoomY: 'A',\n          genomicTargetX: 'A',\n          genomicTargetY: 'A',\n        },\n        props: {\n          hgViewConfig: {\n            uid: 'aa',\n            autocompleteSource: '/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA&',\n            genomePositionSearchBox: {\n              autocompleteServer: '//higlass.io/api/v1',\n              autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n              chromInfoServer: '//higlass.io/api/v1',\n              chromInfoId: 'hg19',\n              visible: true,\n            },\n            chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n            tracks: {\n              top: [\n                {\n                  type: 'horizontal-gene-annotations',\n                  height: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  uid: 'OHJakQICQD6gTD7skx4EWA',\n                  options: {\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelPosition: 'hidden',\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minHeight: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'horizontal-chromosome-labels',\n                  height: 30,\n                  uid: 'X4e_1DKiQHmyghDa6lLMVA',\n                  options: {\n                    color: '#808080',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              left: [\n                {\n                  type: 'vertical-gene-annotations',\n                  width: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  options: {\n                    labelPosition: 'bottomRight',\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minWidth: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                  uid: 'dqBTMH78Rn6DeSyDBoAEXw',\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'vertical-chromosome-labels',\n                  width: 30,\n                  uid: 'RHdQK4IRQ7yJeDmKWb7Pcg',\n                  options: {\n                    color: '#777777',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    minWidth: 35,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              center: [\n                {\n                  uid: 'c1',\n                  type: 'combined',\n                  height: 600,\n                  contents: [\n                    {\n                      server: '//higlass.io/api/v1',\n                      tilesetUid: 'CQMd6V_cRw6iCI_-Unl3PQ',\n                      type: 'heatmap',\n                      options: {\n                        maxZoom: null,\n                        labelPosition: 'bottomRight',\n                        name: 'Rao et al. (2014) GM12878 MboI (allreps) 1kb',\n                        backgroundColor: 'black',\n                        labelLeftMargin: 0,\n                        labelRightMargin: 0,\n                        labelTopMargin: 0,\n                        labelBottomMargin: 0,\n                        labelShowResolution: true,\n                        labelShowAssembly: true,\n                        labelColor: '#ffffff',\n                        labelTextOpacity: 0.5,\n                        labelBackgroundColor: 'black',\n                        labelBackgroundOpacity: 0.01,\n                        colorRange: [\n                          '#000000',\n                          '#222e54',\n                          '#448db2',\n                          '#68bf30',\n                          '#fdff54',\n                          '#FFFFFF',\n                        ],\n                        colorbarBackgroundColor: 'black',\n                        colorbarBackgroundOpacity: 0.01,\n                        colorbarPosition: 'topRight',\n                        trackBorderWidth: 0,\n                        trackBorderColor: 'black',\n                        heatmapValueScaling: 'log',\n                        showMousePosition: true,\n                        mousePositionColor: '#ff00ff',\n                        showTooltip: false,\n                        extent: 'full',\n                        zeroValueColor: null,\n                        scaleStartPercent: '0.00000',\n                        scaleEndPercent: '1.00000',\n                      },\n                      height: 500,\n                      uid: 'GjuZed1ySGW1IzZZqFB9BA',\n                      transforms: [\n                        {\n                          name: 'ICE',\n                          value: 'weight',\n                        },\n                      ],\n                    },\n                  ],\n                  options: {},\n                },\n              ],\n              right: [],\n              bottom: [],\n              whole: [],\n              gallery: [],\n            },\n            layout: {\n              w: 12,\n              h: 12,\n              x: 0,\n              y: 0,\n              moved: false,\n              static: false,\n            },\n          },\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      {\n        component: 'higlass',\n        coordinationScopes: {\n          genomicZoomX: 'A',\n          genomicZoomY: 'A',\n          genomicTargetX: 'A',\n          genomicTargetY: 'A',\n        },\n        props: {\n          hgViewConfig: {\n            uid: 'aa',\n            autocompleteSource: '/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA&',\n            genomePositionSearchBox: {\n              autocompleteServer: '//higlass.io/api/v1',\n              autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n              chromInfoServer: '//higlass.io/api/v1',\n              chromInfoId: 'hg19',\n              visible: true,\n            },\n            chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n            tracks: {\n              top: [\n                {\n                  type: 'horizontal-gene-annotations',\n                  height: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  uid: 'OHJakQICQD6gTD7skx4EWA',\n                  options: {\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelPosition: 'hidden',\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minHeight: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'horizontal-chromosome-labels',\n                  height: 30,\n                  uid: 'X4e_1DKiQHmyghDa6lLMVA',\n                  options: {\n                    color: '#808080',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              left: [\n                {\n                  type: 'vertical-gene-annotations',\n                  width: 60,\n                  tilesetUid: 'OHJakQICQD6gTD7skx4EWA',\n                  server: '//higlass.io/api/v1',\n                  options: {\n                    labelPosition: 'bottomRight',\n                    name: 'Gene Annotations (hg19)',\n                    fontSize: 10,\n                    labelLeftMargin: 0,\n                    labelRightMargin: 0,\n                    labelTopMargin: 0,\n                    labelBottomMargin: 0,\n                    minWidth: 24,\n                    geneAnnotationHeight: 16,\n                    geneLabelPosition: 'outside',\n                    geneStrandSpacing: 4,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                    plusStrandColor: '#fdff54',\n                    minusStrandColor: '#68bf30',\n                    labelColor: 'black',\n                    trackBorderWidth: 0,\n                    trackBorderColor: 'black',\n                  },\n                  uid: 'dqBTMH78Rn6DeSyDBoAEXw',\n                },\n                {\n                  chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n                  type: 'vertical-chromosome-labels',\n                  width: 30,\n                  uid: 'RHdQK4IRQ7yJeDmKWb7Pcg',\n                  options: {\n                    color: '#777777',\n                    stroke: 'black',\n                    fontSize: 12,\n                    fontIsLeftAligned: false,\n                    minWidth: 35,\n                    showMousePosition: true,\n                    mousePositionColor: '#ff00ff',\n                  },\n                },\n              ],\n              center: [\n                {\n                  uid: 'c1',\n                  type: 'combined',\n                  height: 600,\n                  contents: [\n                    {\n                      server: '//higlass.io/api/v1',\n                      tilesetUid: 'CQMd6V_cRw6iCI_-Unl3PQ',\n                      type: 'heatmap',\n                      options: {\n                        maxZoom: null,\n                        labelPosition: 'bottomRight',\n                        name: 'Rao et al. (2014) GM12878 MboI (allreps) 1kb',\n                        backgroundColor: 'black',\n                        labelLeftMargin: 0,\n                        labelRightMargin: 0,\n                        labelTopMargin: 0,\n                        labelBottomMargin: 0,\n                        labelShowResolution: true,\n                        labelShowAssembly: true,\n                        labelColor: '#ffffff',\n                        labelTextOpacity: 0.5,\n                        labelBackgroundColor: 'black',\n                        labelBackgroundOpacity: 0.01,\n                        colorRange: [\n                          '#000000',\n                          '#222e54',\n                          '#448db2',\n                          '#68bf30',\n                          '#fdff54',\n                          '#FFFFFF',\n                        ],\n                        colorbarBackgroundColor: 'black',\n                        colorbarBackgroundOpacity: 0.01,\n                        colorbarPosition: 'topRight',\n                        trackBorderWidth: 0,\n                        trackBorderColor: 'black',\n                        heatmapValueScaling: 'log',\n                        showMousePosition: true,\n                        mousePositionColor: '#ff00ff',\n                        showTooltip: false,\n                        extent: 'full',\n                        zeroValueColor: null,\n                        scaleStartPercent: '0.00000',\n                        scaleEndPercent: '1.00000',\n                      },\n                      height: 500,\n                      uid: 'GjuZed1ySGW1IzZZqFB9BA',\n                      transforms: [\n                        {\n                          name: 'ICE',\n                          value: 'weight',\n                        },\n                      ],\n                    },\n                  ],\n                  options: {},\n                },\n              ],\n              right: [],\n              bottom: [],\n              whole: [],\n              gallery: [],\n            },\n            layout: {\n              w: 12,\n              h: 12,\n              x: 0,\n              y: 0,\n              moved: false,\n              static: false,\n            },\n          },\n        },\n        x: 8, y: 0, w: 4, h: 2,\n      },\n    ],\n  },\n  'sc-atac-seq-10x-genomics-pbmc': {\n    version: '1.0.0',\n    name: 'HiGlass serverless demo with 10x Genomics scATAC-seq 5k PBMC dataset',\n    datasets: [\n      {\n        uid: '10x-genomics-pbmc',\n        name: '10x Genomics PBMC',\n        files: [\n          {\n            type: 'genomic-profiles',\n            fileType: 'genomic-profiles.zarr',\n            url: 'http://higlass-serverless.s3.amazonaws.com/multivec/pbmc_10x_peaks_by_cluster.zarr',\n          },\n        ],\n      },\n    ],\n    layout: [\n      { component: 'genomicProfiles',\n        props: {\n          profileTrackUidKey: 'file',\n        },\n        x: 0, y: 0, w: 8, h: 2,\n      },\n      { component: 'description',\n        props: {\n          description: '10x Genomics scATAC-seq of 5k PBMCs. Note: the Zarr HiGlass Plugin Datafetcher is not yet optimized. Please be patient while the HiGlass tracks load.',\n        },\n        x: 8, y: 0, w: 4, h: 2 },\n    ],\n    initStrategy: 'auto',\n  },\n  'portal-ui-featured': {\n    coordinationSpace: {\n      dataset: {\n        A: 'A',\n      },\n      spatialZoom: {\n        A: 0.6219962674826599,\n      },\n      spatialRotation: {\n        A: 0,\n      },\n      spatialTargetX: {\n        A: 550.9755273834661,\n      },\n      spatialTargetY: {\n        A: 418.2987491735642,\n      },\n      spatialTargetZ: {\n        A: 6.252776074688882e-13,\n      },\n      heatmapZoomX: {\n        A: 0,\n      },\n      heatmapZoomY: {\n        A: 0,\n      },\n      heatmapTargetX: {\n        A: 0,\n      },\n      heatmapTargetY: {\n        A: 0,\n      },\n      cellFilter: {\n        A: null,\n      },\n      cellHighlight: {\n        A: '761',\n      },\n      cellSetSelection: {\n        A: [\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 1',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 2',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 3',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 4',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 5',\n          ],\n          [\n            'K-Means [Mean] Expression',\n            'Cluster 6',\n          ],\n        ],\n      },\n      cellSetHighlight: {\n        A: null,\n      },\n      cellSetColor: {\n        A: [\n          {\n            path: [\n              'K-Means [Mean] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Covariance] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Total] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 4',\n            ],\n            color: [\n              17,\n              119,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 5',\n            ],\n            color: [\n              153,\n              153,\n              51,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Mean-All-SubRegions] Expression',\n              'Cluster 6',\n            ],\n            color: [\n              221,\n              204,\n              119,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n              'Cluster 1',\n            ],\n            color: [\n              68,\n              119,\n              170,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n              'Cluster 2',\n            ],\n            color: [\n              136,\n              204,\n              238,\n              255,\n            ],\n          },\n          {\n            path: [\n              'K-Means [Shape-Vectors]',\n              'Cluster 3',\n            ],\n            color: [\n              68,\n              170,\n              153,\n              255,\n            ],\n          },\n        ],\n      },\n      geneFilter: {\n        A: null,\n      },\n      geneHighlight: {\n        A: null,\n      },\n      geneSelection: {\n        A: null,\n      },\n      geneExpressionColormap: {\n        A: 'plasma',\n      },\n      geneExpressionColormapRange: {\n        A: [\n          0.065,\n          0.435,\n        ],\n      },\n      cellColorEncoding: {\n        A: 'cellSetSelection',\n      },\n      spatialRasterLayers: {\n        A: [\n          {\n            type: 't',\n            index: 0,\n            colormap: null,\n            opacity: 1,\n            domainType: 'Min/Max',\n            transparentColor: null,\n            channels: [\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 10,\n                },\n                color: [\n                  0,\n                  0,\n                  255,\n                ],\n                visible: true,\n                slider: [\n                  1,\n                  14906,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 15,\n                },\n                color: [\n                  0,\n                  255,\n                  0,\n                ],\n                visible: true,\n                slider: [\n                  2313,\n                  31611,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 45,\n                },\n                color: [\n                  255,\n                  0,\n                  255,\n                ],\n                visible: true,\n                slider: [\n                  2570,\n                  21074,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 20,\n                },\n                color: [\n                  255,\n                  255,\n                  0,\n                ],\n                visible: true,\n                slider: [\n                  2827,\n                  11565,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 31,\n                },\n                slider: [\n                  5658,\n                  17479,\n                ],\n                visible: true,\n                color: [\n                  255,\n                  128,\n                  0,\n                ],\n              },\n              {\n                selection: {\n                  z: 5,\n                  t: 0,\n                  c: 39,\n                },\n                slider: [\n                  1767,\n                  11735,\n                ],\n                visible: true,\n                color: [\n                  255,\n                  255,\n                  255,\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      spatialCellsLayer: {\n        A: {\n          opacity: 0,\n          radius: 50,\n          visible: true,\n          stroked: true,\n        },\n      },\n      spatialMoleculesLayer: {\n        A: null,\n      },\n      spatialNeighborhoodsLayer: {\n        A: null,\n      },\n      additionalCellSets: {\n        A: null,\n      },\n      moleculeHighlight: {\n        A: null,\n      },\n    },\n    datasets: [\n      {\n        files: [\n          {\n            fileType: 'cells.json',\n            type: 'cells',\n            url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_json/R002_X002_Y007.cells.json?token=',\n          },\n          {\n            fileType: 'cell-sets.json',\n            type: 'cell-sets',\n            url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_json/R002_X002_Y007.cell-sets.json?token=',\n          },\n          {\n            fileType: 'clusters.json',\n            type: 'expression-matrix',\n            url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_json/R002_X002_Y007.clusters.json?token=',\n          },\n          {\n            fileType: 'raster.json',\n            options: {\n              images: [\n                {\n                  metadata: {\n                    omeTiffOffsetsUrl: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output_offsets/R002_X002_Y007.offsets.json?token=',\n                  },\n                  name: 'R002_X002_Y007',\n                  type: 'ome-tiff',\n                  url: 'https://assets.hubmapconsortium.org/ca3016d836d8ee50bef1b93f339c9679/output/extract/expressions/ome-tiff/R002_X002_Y007.ome.tiff?token=',\n                },\n              ],\n              schemaVersion: '0.0.2',\n            },\n            type: 'raster',\n          },\n        ],\n        name: 'SPRM',\n        uid: 'A',\n      },\n    ],\n    description: '',\n    initStrategy: 'auto',\n    layout: [\n      {\n        component: 'spatial',\n        coordinationScopes: {\n          dataset: 'A',\n          spatialZoom: 'A',\n          spatialRotation: 'A',\n          spatialTargetX: 'A',\n          spatialTargetY: 'A',\n          spatialTargetZ: 'A',\n          cellFilter: 'A',\n          cellHighlight: 'A',\n          cellSetSelection: 'A',\n          cellSetHighlight: 'A',\n          cellSetColor: 'A',\n          geneHighlight: 'A',\n          geneSelection: 'A',\n          geneExpressionColormap: 'A',\n          geneExpressionColormapRange: 'A',\n          cellColorEncoding: 'A',\n          spatialRasterLayers: 'A',\n          spatialCellsLayer: 'A',\n          spatialMoleculesLayer: 'A',\n          spatialNeighborhoodsLayer: 'A',\n          additionalCellSets: 'A',\n          moleculeHighlight: 'A',\n        },\n        h: 8,\n        w: 7,\n        x: 3,\n        y: 0,\n      },\n      {\n        component: 'description',\n        coordinationScopes: {\n          dataset: 'A',\n          spatialRasterLayers: 'A',\n        },\n        h: 2,\n        w: 2,\n        x: 10,\n        y: 10,\n      },\n      {\n        component: 'layerController',\n        coordinationScopes: {\n          dataset: 'A',\n          spatialRasterLayers: 'A',\n          spatialCellsLayer: 'A',\n          spatialMoleculesLayer: 'A',\n          spatialNeighborhoodsLayer: 'A',\n        },\n        h: 8,\n        w: 3,\n        x: 0,\n        y: 0,\n      },\n      {\n        component: 'cellSets',\n        coordinationScopes: {\n          dataset: 'A',\n          cellSetSelection: 'A',\n          cellSetHighlight: 'A',\n          cellSetColor: 'A',\n          cellColorEncoding: 'A',\n          additionalCellSets: 'A',\n        },\n        h: 5,\n        w: 2,\n        x: 10,\n        y: 5,\n      },\n      {\n        component: 'genes',\n        coordinationScopes: {\n          dataset: 'A',\n          geneFilter: 'A',\n          geneHighlight: 'A',\n          geneSelection: 'A',\n          cellColorEncoding: 'A',\n        },\n        h: 5,\n        props: {\n          variablesLabelOverride: 'antigen',\n        },\n        w: 2,\n        x: 10,\n        y: 0,\n      },\n      {\n        component: 'heatmap',\n        coordinationScopes: {\n          dataset: 'A',\n          heatmapZoomX: 'A',\n          heatmapZoomY: 'A',\n          heatmapTargetX: 'A',\n          heatmapTargetY: 'A',\n          cellFilter: 'A',\n          cellHighlight: 'A',\n          cellSetSelection: 'A',\n          cellSetHighlight: 'A',\n          cellSetColor: 'A',\n          geneFilter: 'A',\n          geneHighlight: 'A',\n          geneSelection: 'A',\n          geneExpressionColormap: 'A',\n          geneExpressionColormapRange: 'A',\n          cellColorEncoding: 'A',\n          additionalCellSets: 'A',\n        },\n        h: 4,\n        props: {\n          transpose: true,\n          variablesLabelOverride: 'antigen',\n        },\n        w: 10,\n        x: 0,\n        y: 8,\n      },\n    ],\n    name: 'R002_X002_Y007',\n    version: '1.0.1',\n  },\n  bems973: {\n    version: '1.0.0',\n    name: 'BEMS973',\n    description: 'Description of BEMS973',\n    datasets: [\n      {\n        uid: 'A',\n        name: '',\n        files: [\n          {\n            type: 'raster',\n            fileType: 'raster.json',\n            options: {\n              schemaVersion: '0.0.2',\n              usePhysicalSizeScaling: false,\n              images: [\n                {\n                  name: 'OMETIFF',\n                  type: 'ome-tiff',\n                  url: 'http://10.96.11.244/datasets/4b187121143038ff/display/A/0/image01.ome.tiff',\n                  metadata: {\n                    omeTiffOffsetsUrl: 'http://10.96.11.244/datasets/4b187121143038ff/display/A/0/image01.offsets.json',\n                    isBitmask: false,\n                  },\n                },\n              ],\n              renderLayers: [\n                'OMETIFF',\n              ],\n            },\n          },\n          {\n            type: 'cells',\n            fileType: 'anndata-cells.zarr',\n            url: 'http://10.96.11.244/datasets/4b187121143038ff/display/A/1/anndata.zarr',\n            options: {\n              xy: 'obsm/XY_centroid',\n              mappings: {\n                UMAP: {\n                  key: 'obsm/X_umap',\n                  dims: [\n                    0,\n                    1,\n                  ],\n                },\n              },\n            },\n          },\n          {\n            type: 'cell-sets',\n            fileType: 'anndata-cell-sets.zarr',\n            url: 'http://10.96.11.244/datasets/4b187121143038ff/display/A/1/anndata.zarr',\n            options: [\n              {\n                groupName: 'Leiden',\n                setName: 'obs/leiden',\n              },\n              {\n                groupName: 'Phenotype',\n                setName: 'obs/phenotype',\n              },\n            ],\n          },\n          {\n            type: 'expression-matrix',\n            fileType: 'anndata-expression-matrix.zarr',\n            url: 'http://10.96.11.244/datasets/4b187121143038ff/display/A/1/anndata.zarr',\n            options: {\n              matrix: 'X',\n            },\n          },\n        ],\n      },\n    ],\n    coordinationSpace: {\n      dataset: {\n        A: 'A',\n      },\n      embeddingType: {\n        A: 'UMAP',\n      },\n    },\n    layout: [\n      {\n        component: 'spatial',\n        coordinationScopes: {\n          dataset: 'A',\n        },\n        x: 0.0,\n        y: 0,\n        w: 6.0,\n        h: 12,\n      },\n      {\n        component: 'cellSets',\n        coordinationScopes: {\n          dataset: 'A',\n        },\n        x: 6.0,\n        y: 3.0,\n        w: 6.0,\n        h: 3.0,\n      },\n      {\n        component: 'scatterplot',\n        coordinationScopes: {\n          dataset: 'A',\n          embeddingType: 'A',\n        },\n        x: 6.0,\n        y: 6.0,\n        w: 6.0,\n        h: 6.0,\n      },\n      {\n        component: 'status',\n        coordinationScopes: {\n          dataset: 'A',\n        },\n        x: 0,\n        y: 0,\n        w: 1,\n        h: 1,\n      },\n      {\n        component: 'layerController',\n        coordinationScopes: {\n          dataset: 'A',\n        },\n        x: 6.0,\n        y: 0.0,\n        w: 6.0,\n        h: 3.0,\n      },\n    ],\n    initStrategy: 'auto',\n  },\n};\n/* eslint-enable */\n\nexport function listConfigs(showAll) {\n  return Object.entries(configs).filter(\n    entry => showAll || entry[1].public,\n  ).map(\n    ([id, config]) => ({\n      id,\n      name: config.name,\n      description: config.description,\n    }),\n  );\n}\n\nexport function getConfig(id) {\n  return configs[id];\n}\n","export const TOOLTIP_ANCESTOR = 'tooltip-ancestor';\nconst CARD = `card card-body my-2 ${TOOLTIP_ANCESTOR}`;\nexport const PRIMARY_CARD = `${CARD} bg-primary`;\nexport const SECONDARY_CARD = `${CARD} bg-secondary`;\nexport const BLACK_CARD = `${CARD} bg-black`;\nexport const TITLE_CARD = 'title';\nexport const SCROLL_CARD = `${PRIMARY_CARD} scroll`;\n","import React from 'react';\nimport { PRIMARY_CARD } from '../components/classNames';\n\nexport default function Warning(props) {\n  const {\n    title,\n    preformatted,\n    unformatted,\n    theme,\n  } = props;\n  return (\n    <div className={`vitessce-container vitessce-theme-${theme}`}>\n      <div className=\"warning-layout container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className={PRIMARY_CARD}>\n              <h1>{title}</h1>\n              <pre>{preformatted}</pre>\n              <div>{unformatted}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\nexport const styles = makeStyles(() => ({\n  paper: {\n    maxHeight: 200,\n    overflow: 'auto',\n    zIndex: 1500,\n  },\n  span: {\n    width: '70px',\n    textAlign: 'center',\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  popper: {\n    zIndex: 4,\n  },\n}));\n\nexport const muiTheme = {\n  dark: createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: grey,\n      secondary: grey,\n      primaryBackground: '#222222',\n      primaryBackgroundHighlight: '#000000',\n      primaryBackgroundInput: '#D3D3D3',\n      primaryBackgroundDim: '#333333',\n      primaryBackgroundLight: '#757575',\n      primaryForeground: '#D3D3D3',\n      primaryForegroundDim: '#000000',\n      primaryForegroundActive: '#9bb7d6',\n      secondaryBackground: '#000000',\n      secondaryBackgroundDim: '#444444',\n      secondaryForeground: '#D3D3D3',\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  }),\n  light: createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: grey,\n      secondary: grey,\n      primaryBackground: '#F1F1F1',\n      primaryBackgroundHighlight: '#FFFFFF',\n      primaryBackgroundInput: '#FFFFFF',\n      primaryBackgroundDim: '#8A8A8A',\n      primaryBackgroundLight: '#e0e0e0',\n      primaryForeground: '#333333',\n      primaryForegroundDim: '#808080',\n      primaryForegroundActive: '#0074D9',\n      secondaryBackground: '#F1F1F1',\n      secondaryBackgroundDim: '#C0C0C0',\n      secondaryForeground: '#222222',\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  }),\n};\n","/* eslint-disable no-plusplus */\n\n// Adapted from https://github.com/feross/fromentries/blob/29b52a850bb3a47c390937631c2638edf3443942/index.js\nexport function fromEntries(iterable) {\n  return [...iterable]\n    .reduce((obj, { 0: key, 1: val }) => Object.assign(obj, { [key]: val }), {});\n}\n\nexport function range(length) {\n  return [...Array(length).keys()];\n}\n\n/**\n * Select between a singular and plural version of a word,\n * based on an item count.\n * @param {string} singular The singular version of the word.\n * @param {string} plural The plural version of the word.\n * @param {number} count The number of items.\n * @returns {string} Singular if count is one, else plural.\n */\nexport function pluralize(singular, plural, count) {\n  return (count === 1 ? singular : plural);\n}\n\n/**\n * Capitalize a the first letter of a string.\n * @param {string} word A string to capitalize.\n * @returns {string} The word parameter with the first letter capitalized.\n */\nexport function capitalize(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\n/**\n * Generate a new scope name which does not\n * conflict / overlap with a previous scope name.\n * Really these just need to be unique within the coordination object.\n * So in theory they could be String(Math.random()) or uuidv4() or something.\n * However it may be good to make them more human-readable and memorable\n * since eventually we will want to expose a UI to update the coordination.\n * @param {string[]} prevScopes Previous scope names.\n * @returns {string} The new scope name.\n */\nexport function getNextScope(prevScopes) {\n  // Keep an ordered list of valid characters.\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  // Store the value of the next character for each position\n  // in the new string.\n  // For example, [0] -> \"A\", [1] -> \"B\", [0, 1] -> \"AB\"\n  const nextCharIndices = [0];\n\n  // Generate a new scope name,\n  // potentially conflicting with an existing name.\n  // Reference: https://stackoverflow.com/a/12504061\n  function next() {\n    const r = [];\n    nextCharIndices.forEach((charIndex) => {\n      r.unshift(chars[charIndex]);\n    });\n    let increment = true;\n    for (let i = 0; i < nextCharIndices.length; i++) {\n      const val = ++nextCharIndices[i];\n      if (val >= chars.length) {\n        nextCharIndices[i] = 0;\n      } else {\n        increment = false;\n        break;\n      }\n    }\n    if (increment) {\n      nextCharIndices.push(0);\n    }\n    return r.join('');\n  }\n\n  let nextScope;\n  do {\n    nextScope = next();\n  } while (prevScopes.includes(nextScope));\n  return nextScope;\n}\n\n/**\n * Get a representative PixelSource from a loader object returned from\n * the Vitessce imaging loaders\n * @param {object} loader { data: (PixelSource[]|PixelSource), metadata, channels } object\n * @param {number=} level Level of the multiscale loader from which to get a PixelSource\n * @returns {object} PixelSource object\n */\nexport function getSourceFromLoader(loader, level) {\n  const { data } = loader;\n  const source = Array.isArray(data) ? data[(level || data.length - 1)] : data;\n  return source;\n}\n\n/*\n * Helper method to determine whether pixel data is interleaved and rgb or not.\n * @param {object} loader\n */\nexport function isRgb(loader) {\n  const source = getSourceFromLoader(loader);\n  const { shape, dtype, labels } = source;\n  const channelSize = shape[labels.indexOf('c')];\n  return (channelSize === 3) && dtype === 'Uint8';\n}\n","import { range } from '../../utils';\n\nexport const COMPONENT_ID_PREFIX = 'i';\n\nfunction sum(a) {\n  return a.reduce((x, y) => x + y, 0);\n}\n\nexport function makeGridLayout(colXs, colLayout) {\n  const colWs = [];\n  for (let i = 0; i < colXs.length; i++) { // eslint-disable-line no-plusplus\n    colWs.push(colXs[i + 1] - colXs[i]);\n  }\n  return Object.entries(colLayout).map(([id, spec]) => ({\n    i: id,\n    y: spec.y,\n    h: spec.h || 1,\n    x: colXs[spec.x],\n    w: sum(colWs.slice(spec.x, spec.x + (spec.w || 1))),\n  }));\n}\n\nexport function getMaxRows(layouts) {\n  return Math.max(\n    ...Object.values(layouts).map(\n      layout => Math.max(\n        ...layout.map(xywh => xywh.y + xywh.h),\n      ),\n    ),\n  );\n}\n\nexport function resolveLayout(layout) {\n  const cols = {};\n  const layouts = {};\n  const breakpoints = {};\n  const components = {};\n  const positions = {};\n\n  (('components' in layout) ? layout.components : layout).forEach(\n    (def, i) => {\n      const id = `${COMPONENT_ID_PREFIX}${i}`;\n      components[id] = {\n        component: def.component,\n        props: def.props || {},\n        coordinationScopes: def.coordinationScopes || {},\n      };\n      positions[id] = {\n        id, x: def.x, y: def.y, w: def.w, h: def.h,\n      };\n    },\n  );\n\n  if ('components' in layout) {\n    Object.entries(layout.columns).forEach(\n      ([width, columnXs]) => {\n        cols[width] = columnXs[columnXs.length - 1];\n        layouts[width] = makeGridLayout(columnXs, positions);\n        breakpoints[width] = width;\n      },\n    );\n  } else {\n    // static layout\n    const id = 'ID';\n    const columnCount = 12;\n    cols[id] = columnCount;\n    layouts[id] = makeGridLayout(range(columnCount + 1), positions);\n    breakpoints[id] = 1000;\n    // Default has different numbers of columns at different widths,\n    // so we do need to override that to ensure the same number of columns,\n    // regardless of window width.\n  }\n  return {\n    cols, layouts, breakpoints, components,\n  };\n}\n","import React from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport isEqual from 'lodash/isEqual';\nimport { getMaxRows, resolveLayout, COMPONENT_ID_PREFIX } from './layout-utils';\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nclass ResponsiveHeightGridLayout extends ResponsiveGridLayout {\n  componentDidUpdate(prevProps) {\n    if (this.props.height !== prevProps.height) {\n      this.onWindowResize();\n    }\n  }\n}\n\nexport default function VitessceGridLayout(props) {\n  const {\n    layout,\n    getComponent, padding, margin, draggableHandle,\n    reactGridLayoutProps, rowHeight, theme, height,\n    onRemoveComponent, onLayoutChange: onLayoutChangeProp,\n  } = props;\n\n  // If layout changes, update grid components.\n  const {\n    cols: gridCols, layouts: gridLayouts, breakpoints: gridBreakpoints, components: gridComponents,\n  } = resolveLayout(layout);\n\n  const maxRows = getMaxRows(gridLayouts);\n\n  // Inline CSS is generally avoided, but this saves the end-user a little work,\n  // and prevents class names from getting out of sync.\n  const style = (\n    <style>\n      {`\n        ${draggableHandle} {\n          cursor: grab;\n        }\n        ${draggableHandle}:active {\n          cursor: grabbing;\n        }\n     `}\n    </style>\n  );\n\n  const onLayoutChange = (newLayout) => {\n    if (newLayout.length === Object.entries(gridComponents).length) {\n      const newComponentProps = [];\n      newLayout.forEach((nextC) => {\n        const id = nextC.i;\n        const prevC = gridComponents[id];\n        if (prevC) {\n          const i = parseInt(id.substring(id.indexOf(COMPONENT_ID_PREFIX) + 1), 10);\n          const nextProps = {\n            x: nextC.x, y: nextC.y, w: nextC.w, h: nextC.h,\n          };\n          const prevProps = {\n            x: prevC.x, y: prevC.y, w: prevC.w, h: prevC.h,\n          };\n          if (!isEqual(nextProps, prevProps)) {\n            newComponentProps.push([i, nextProps]);\n          }\n        }\n      });\n      if (newComponentProps.length > 0) {\n        onLayoutChangeProp(newComponentProps);\n      }\n    }\n  };\n\n  const layoutChildren = Object.entries(gridComponents).map(([k, v], i) => {\n    const Component = getComponent(v.component);\n\n    const removeGridComponent = () => {\n      onRemoveComponent(i);\n    };\n\n    return (\n      <div key={k}>\n        <Component\n          {... v.props}\n          uuid={i}\n          coordinationScopes={v.coordinationScopes}\n          theme={theme}\n          removeGridComponent={removeGridComponent}\n        />\n      </div>\n    );\n  });\n  return (gridLayouts && gridComponents && gridBreakpoints && gridCols) && (\n    <>\n      {style}\n      <ResponsiveHeightGridLayout\n        className=\"layout\"\n        cols={gridCols}\n        layouts={gridLayouts}\n        breakpoints={gridBreakpoints}\n        height={height}\n        rowHeight={\n          rowHeight\n          || (\n            (window.innerHeight - 2 * padding - (maxRows - 1) * margin)\n            / maxRows\n          )}\n        containerPadding={[padding, padding]}\n        margin={[margin, margin]}\n        draggableHandle={draggableHandle}\n        onLayoutChange={onLayoutChange}\n        {... reactGridLayoutProps}\n      >\n        {layoutChildren}\n      </ResponsiveHeightGridLayout>\n    </>\n  );\n}\n\nVitessceGridLayout.defaultProps = {\n  padding: 10,\n  margin: 10,\n};\n","import uuidv4 from 'uuid/v4';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class AbstractLoader {\n  constructor({\n    type, url, requestInit, options,\n  }) {\n    this.type = type;\n    this.url = url;\n    this.requestInit = requestInit;\n    this.options = options;\n\n    this.subscriptions = {};\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  load() {\n    throw new Error('The load() method has not been implemented.');\n  }\n\n  subscribe(subscriber) {\n    const token = uuidv4();\n    this.subscriptions[token] = subscriber;\n    return token;\n  }\n\n  unsubscribe(token) {\n    delete this.subscriptions[token];\n  }\n\n  publish(data) {\n    Object.values(this.subscriptions).forEach((subscriber) => {\n      subscriber(data);\n    });\n  }\n}\n","/**\n * A loader error ancestor class containing a default constructor\n * and a stub for the required warnInConsole() method.\n */\nexport default class AbstractLoaderError {\n  constructor(message) {\n    this.message = message;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  warnInConsole() {\n    throw new Error('The warnInConsole() method has not been implemented.');\n  }\n}\n","import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderFetchError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl, responseHeaders) {\n    super(`Error HTTP status fetching ${datasetType}.`);\n    this.name = 'LoaderFetchError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n    this.responseHeaders = responseHeaders;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetUrl, responseHeaders,\n    } = this;\n    console.warn(\n      `${datasetType} from ${datasetUrl}: fetch failed`,\n      responseHeaders,\n    );\n  }\n}\n","import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderValidationError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl, reason) {\n    super(`Error while validating ${datasetType}.`);\n    this.name = 'LoaderValidationError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n    this.reason = reason;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetUrl, reason,\n    } = this;\n    console.warn(\n      `${datasetType} from ${datasetUrl}: validation failed`,\n      JSON.stringify(reason, null, 2),\n    );\n  }\n}\n","import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderNotFoundError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl) {\n    super(`Error finding loader for ${datasetType}.`);\n    this.name = 'LoaderNotFoundError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetFileType, datasetUrl,\n    } = this;\n    if (datasetFileType && datasetUrl) {\n      console.warn(\n        `${datasetType} from ${datasetUrl}: unable to find loader for fileType ${datasetFileType}`,\n      );\n    } else {\n      console.warn(\n        `${datasetType}: unable to find loader`,\n      );\n    }\n  }\n}\n","\n\nexport default class LoaderResult {\n  constructor(data, url, coordinationValues = null) {\n    this.data = data;\n    this.url = url;\n    this.coordinationValues = coordinationValues;\n  }\n}\n","import Ajv from 'ajv';\nimport AbstractLoader from './AbstractLoader';\nimport { LoaderFetchError, LoaderValidationError, AbstractLoaderError } from './errors/index';\nimport LoaderResult from './LoaderResult';\n\nimport cellsSchema from '../schemas/cells.schema.json';\nimport moleculesSchema from '../schemas/molecules.schema.json';\nimport neighborhoodsSchema from '../schemas/neighborhoods.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\n\nconst typeToSchema = {\n  cells: cellsSchema,\n  molecules: moleculesSchema,\n  neighborhoods: neighborhoodsSchema,\n  raster: rasterSchema,\n  'cell-sets': cellSetsSchema,\n};\n\nexport default class JsonLoader extends AbstractLoader {\n  constructor(params) {\n    super(params);\n\n    const { type } = params;\n    this.schema = typeToSchema[type];\n  }\n\n  load() {\n    const {\n      url, requestInit, type, fileType,\n    } = this;\n    if (this.data) {\n      return this.data;\n    }\n    this.data = fetch(url, requestInit)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new LoaderFetchError(type, fileType, url, response.headers));\n      })\n      .catch(reason => Promise.resolve(reason))\n      .then((data) => {\n        if (data instanceof AbstractLoaderError) {\n          return Promise.reject(data);\n        }\n        const [valid, reason] = this.validate(data);\n        if (valid) {\n          return Promise.resolve(new LoaderResult(data, url));\n        }\n        return Promise.reject(new LoaderValidationError(type, fileType, url, reason));\n      });\n    return this.data;\n  }\n\n  validate(data) {\n    const { schema, type } = this;\n    if (!schema) {\n      throw Error(`No schema for ${type}`);\n    }\n    const validate = new Ajv().compile(schema);\n    const valid = validate(data);\n    let failureReason;\n    if (!valid) {\n      failureReason = validate.errors;\n    }\n    return [valid, failureReason];\n  }\n}\n","import { HTTPStore, KeyError } from 'zarr';\nimport AbstractLoader from './AbstractLoader';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class AbstractZarrLoader extends AbstractLoader {\n  constructor(params) {\n    super(params);\n\n    // eslint-disable-next-line no-unused-vars\n    const { url, requestInit } = this;\n    // TODO: We should probably add a way of allowing HEAD requests as well:\n    // https://github.com/gzuidhof/zarr.js/blob/375ce0c299469a970da6bb5653513564e25806bb/docs/getting-started/remote-data.md#stores\n    const supportedMethods = ['GET'];\n    this.store = new HTTPStore(url, {\n      supportedMethods, fetchOptions: requestInit,\n    });\n  }\n\n  /**\n   * Class method for decoding json from the store.\n   * @param {string} key A path to the item.\n   * @returns {Promise} This async function returns a promise\n   * that resolves to the parsed JSON if successful.\n   * @throws This may throw an error.\n   */\n  async getJson(key) {\n    try {\n      const buf = await this.store.getItem(key);\n      const text = new TextDecoder('utf-8').decode(buf);\n      return JSON.parse(text);\n    } catch (err) {\n      if (err instanceof KeyError) {\n        return {};\n      }\n      throw err;\n    }\n  }\n}\n","import { openArray } from 'zarr';\nimport AbstractZarrLoader from './AbstractZarrLoader';\nimport LoaderResult from './LoaderResult';\n\nexport default class MatrixZarrLoader extends AbstractZarrLoader {\n  loadAttrs() {\n    if (this.attrs) {\n      return this.attrs;\n    }\n    this.attrs = this.getJson('.zattrs');\n    return this.attrs;\n  }\n\n  loadArr() {\n    const { store } = this;\n    if (this.arr) {\n      return this.arr;\n    }\n    this.arr = openArray({ store, path: '/', mode: 'r' }).then(z => new Promise((resolve) => {\n      z.getRaw([null, null])\n        .then(resolve);\n    }));\n    return this.arr;\n  }\n\n  load() {\n    return Promise\n      .all([this.loadAttrs(), this.loadArr()])\n      .then(data => Promise.resolve(new LoaderResult(data, null)));\n  }\n}\n","import genesSchema from '../schemas/genes.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nexport default class GenesJsonAsMatrixZarrLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n\n    this.schema = genesSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data, url } = payload;\n    const cols = Object.keys(data);\n    const rows = (cols.length > 0 ? Object.keys(data[cols[0]].cells) : []);\n    const attrs = { rows, cols };\n\n    const normalizedFlatMatrix = rows\n      .flatMap(cellId => cols.map(\n        geneId => (data[geneId].cells[cellId] / data[geneId].max) * 255,\n      ));\n    // Need to wrap the NestedArray to mock the HTTPStore-based array\n    // which returns promises.\n    const arr = { data: Uint8Array.from(normalizedFlatMatrix) };\n    return Promise.resolve(new LoaderResult([attrs, arr], url));\n  }\n}\n","import { extent } from 'd3-array';\nimport range from 'lodash/range';\nimport clustersSchema from '../schemas/clusters.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nexport default class ClustersJsonAsMatrixZarrLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n\n    this.schema = clustersSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data, url } = payload;\n    const { rows, cols, matrix } = data;\n    const attrs = {\n      rows: cols,\n      cols: rows,\n    };\n    const shape = [attrs.rows.length, attrs.cols.length];\n    // Normalize values by converting to one-byte integers.\n    // Normalize for each gene (column) independently.\n    const normalizedMatrix = matrix.map((col) => {\n      const [min, max] = extent(col);\n      const normalize = d => Math.floor(((d - min) / (max - min)) * 255);\n      return col.map(normalize);\n    });\n    // Transpose the normalized matrix.\n    const tNormalizedMatrix = range(shape[0])\n      .map(i => range(shape[1]).map(j => normalizedMatrix[j][i]));\n    // Flatten the transposed matrix.\n    const normalizedFlatMatrix = tNormalizedMatrix.flat();\n    // Need to wrap the NestedArray to mock the HTTPStore-based array\n    // which returns promises.\n    const arr = { data: Uint8Array.from(normalizedFlatMatrix) };\n    return Promise.resolve(new LoaderResult([attrs, arr], url));\n  }\n}\n","import cellSetsSchema from '../../schemas/cell-sets.schema.json';\nimport cellSetsTabularSchema from '../../schemas/cell-sets-tabular.schema.json';\n\nexport const FILE_EXTENSION_JSON = 'json';\nexport const MIME_TYPE_JSON = 'application/json';\n\nexport const FILE_EXTENSION_TABULAR = 'csv';\nexport const MIME_TYPE_TABULAR = 'text/csv';\nexport const SEPARATOR_TABULAR = ',';\n// The NA value below corresponds to the allowed string enum\n// value \"NA\" in the cell-sets-tabular JSON schema.\nexport const NA_VALUE_TABULAR = 'NA';\n\nexport const SETS_DATATYPE_CELL = 'cell';\nexport const HIERARCHICAL_SCHEMAS = {\n  cell: {\n    latestVersion: '0.1.3',\n    schema: cellSetsSchema,\n  },\n};\n\nexport const TABULAR_SCHEMAS = {\n  cell: {\n    schema: cellSetsTabularSchema,\n  },\n};\n","import React from 'react';\nimport { COORDINATE_SYSTEM } from 'deck.gl';\nimport {\n  SETS_DATATYPE_CELL,\n  HIERARCHICAL_SCHEMAS,\n} from './sets/constants';\nimport { PRIMARY_CARD } from './classNames';\n\nexport function makeCellStatusMessage(cellInfoFactors) {\n  return Object.entries(cellInfoFactors).map(\n    ([factor, value]) => `${factor}: ${value}`,\n  ).join('; ');\n}\n\nexport function cellLayerDefaultProps(cells, updateStatus, setCellHighlight, setComponentHover) {\n  return {\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    data: cells,\n    pickable: true,\n    autoHighlight: true,\n    stroked: true,\n    filled: true,\n    getElevation: 0,\n    onHover: (info) => {\n      // Notify the parent component that its child component is\n      // the \"hover source\".\n      if (setComponentHover) {\n        setComponentHover();\n      }\n      if (info.object) {\n        const [cellId, cellInfo] = info.object;\n        const { factors = {} } = cellInfo;\n        if (updateStatus) {\n          updateStatus(makeCellStatusMessage(factors));\n        }\n        if (setCellHighlight) {\n          setCellHighlight(cellId);\n        }\n      } else if (setCellHighlight) {\n        // Clear the currently-hovered cell info by passing null.\n        setCellHighlight('');\n      }\n    },\n  };\n}\n\nexport const DEFAULT_COLOR = [128, 128, 128];\n\n// From https://personal.sron.nl/~pault/#sec:qualitative\nexport const PALETTE = [\n  [68, 119, 170],\n  [136, 204, 238],\n  [68, 170, 153],\n  [17, 119, 51],\n  [153, 153, 51],\n  [221, 204, 119],\n  [204, 102, 119],\n  [136, 34, 85],\n  [170, 68, 153],\n];\n\nexport const VIEWER_PALETTE = [\n  [0, 0, 255],\n  [0, 255, 0],\n  [255, 0, 255],\n  [255, 255, 0],\n  [0, 255, 255],\n  [255, 255, 255],\n  [255, 128, 0],\n  [255, 0, 0],\n];\n\nexport const COLORMAP_OPTIONS = [\n  'viridis',\n  'greys',\n  'magma',\n  'jet',\n  'hot',\n  'bone',\n  'copper',\n  'summer',\n  'density',\n  'inferno',\n];\n\nexport const DEFAULT_GL_OPTIONS = { webgl2: true };\n\nexport function createDefaultUpdateStatus(componentName) {\n  return message => console.warn(`${componentName} updateStatus: ${message}`);\n}\n\nexport function createDefaultUpdateCellsSelection(componentName) {\n  return cellsSelection => console.warn(`${componentName} updateCellsSelection: ${cellsSelection}`);\n}\n\nexport function createDefaultUpdateCellsHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateCellsHover: ${hoverInfo.cellId}`);\n}\n\nexport function createDefaultUpdateGenesHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateGenesHover: ${hoverInfo.geneId}`);\n}\n\nexport function createDefaultUpdateViewInfo(componentName) {\n  return viewInfo => console.warn(`${componentName} updateViewInfo: ${viewInfo}`);\n}\n\nexport function createDefaultClearPleaseWait() {\n  return () => {};\n}\n\n\n/**\n * Copy a typed array into a new array buffer.\n * @param {Uint8Array} arr The typed array to be copied.\n * @returns {Uint8Array} The copied array.\n */\nexport function copyUint8Array(arr) {\n  const newBuffer = new ArrayBuffer(arr.buffer.byteLength);\n  const newArr = new Uint8Array(newBuffer);\n  newArr.set(arr);\n  return newArr;\n}\n\nexport function getNextNumberedNodeName(nodes, prefix) {\n  let i = 1;\n  if (nodes) {\n    // eslint-disable-next-line no-loop-func\n    while (nodes.find(n => n.name === `${prefix}${i}`)) {\n      // eslint-disable-next-line no-plusplus\n      i++;\n    }\n  }\n  return `${prefix}${i}`;\n}\n\n/**\n * Create a new selected cell set based on a cell selection.\n * @param {string[]} cellSelection An array of cell IDs.\n * @param {object[]} additionalCellSets The previous array of user-defined cell sets.\n * @param {function} setCellSetSelection The setter function for cell set selections.\n * @param {function} setAdditionalCellSets The setter function for user-defined cell sets.\n */\nexport function setCellSelection(cellSelection, additionalCellSets, cellSetColor, setCellSetSelection, setAdditionalCellSets, setCellSetColor, setCellColorEncoding, prefix = 'Selection ') {\n  const CELL_SELECTIONS_LEVEL_ZERO_NAME = 'My Selections';\n\n  const selectionsLevelZeroNode = additionalCellSets?.tree.find(\n    n => n.name === CELL_SELECTIONS_LEVEL_ZERO_NAME,\n  );\n  const nextAdditionalCellSets = {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [...(additionalCellSets ? additionalCellSets.tree : [])],\n  };\n\n  const nextName = getNextNumberedNodeName(selectionsLevelZeroNode?.children, prefix);\n  let colorIndex = 0;\n  if (selectionsLevelZeroNode) {\n    colorIndex = selectionsLevelZeroNode.children.length;\n    selectionsLevelZeroNode.children.push({\n      name: nextName,\n      set: cellSelection.map(d => [d, null]),\n    });\n  } else {\n    nextAdditionalCellSets.tree.push({\n      name: CELL_SELECTIONS_LEVEL_ZERO_NAME,\n      children: [\n        {\n          name: nextName,\n          set: cellSelection.map(d => [d, null]),\n        },\n      ],\n    });\n  }\n  setAdditionalCellSets(nextAdditionalCellSets);\n  const nextPath = ['My Selections', nextName];\n  setCellSetColor([\n    ...(cellSetColor || []),\n    {\n      path: nextPath,\n      color: PALETTE[colorIndex % PALETTE.length],\n    },\n  ]);\n  setCellSetSelection([nextPath]);\n  setCellColorEncoding('cellSetSelection');\n}\n\nexport function mergeCellSets(cellSets, additionalCellSets) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [\n      ...(cellSets ? cellSets.tree : []),\n      ...(additionalCellSets ? additionalCellSets.tree : []),\n    ],\n  };\n}\n\nexport function createWarningComponent(props) {\n  return () => {\n    const {\n      title,\n      message,\n    } = props;\n    return (\n      <div className={PRIMARY_CARD}>\n        <h1>{title}</h1>\n        <div>{message}</div>\n      </div>\n    );\n  };\n}\n\nexport function asEsModule(component) {\n  return {\n    __esModule: true,\n    default: component,\n  };\n}\n","import { RENDERING_MODES } from '@hms-dbmi/viv';\n\nexport const GLOBAL_LABELS = ['z', 't'];\n\nexport const DEFAULT_RASTER_DOMAIN_TYPE = 'Min/Max';\n\nexport const DEFAULT_RASTER_LAYER_PROPS = {\n  visible: true,\n  colormap: null,\n  opacity: 1,\n  domainType: DEFAULT_RASTER_DOMAIN_TYPE,\n  transparentColor: [0, 0, 0],\n  renderingMode: RENDERING_MODES.ADDITIVE,\n  use3d: false,\n};\n\nexport const DEFAULT_MOLECULES_LAYER = {\n  opacity: 1, radius: 20, visible: true,\n};\nexport const DEFAULT_CELLS_LAYER = {\n  opacity: 1, radius: 50, visible: true, stroked: false,\n};\nexport const DEFAULT_NEIGHBORHOODS_LAYER = {\n  visible: false,\n};\n\nexport const DEFAULT_LAYER_TYPE_ORDERING = [\n  'molecules',\n  'cells',\n  'neighborhoods',\n  'raster',\n];\n","import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\nimport { project32, picking } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Texture2D, isWebGL2 } from '@luma.gl/core';\nimport { XRLayer } from '@hms-dbmi/viv';\nimport { fs, vs } from './bitmask-layer-shaders';\n\nfunction padWithDefault(arr, defaultValue, padWidth) {\n  const newArr = [...arr];\n  for (let i = 0; i < padWidth; i += 1) {\n    newArr.push(defaultValue);\n  }\n  return newArr;\n}\n\nconst defaultProps = {\n  hoveredCell: { type: 'number', value: null, compare: true },\n  cellColor: { type: 'object', value: null, compare: true },\n};\n\n/**\n * A BitmapLayer that performs aggregation in the fragment shader,\n * and renders its texture from a Uint8Array rather than an ImageData.\n */\nexport default class BitmaskLayer extends XRLayer {\n  // eslint-disable-next-line class-methods-use-this\n  getShaders() {\n    return {\n      fs,\n      vs,\n      modules: [project32, picking],\n    };\n  }\n\n  updateState({ props, oldProps, changeFlags }) {\n    super.updateState({ props, oldProps, changeFlags });\n    if (props.cellColor?.data !== oldProps.cellColor?.data) {\n      this.setColorTexture();\n    }\n  }\n\n  setColorTexture() {\n    const { height, width, data } = this.props.cellColor;\n    const colorTex = new Texture2D(this.context.gl, {\n      width,\n      height,\n      // Only use Float32 so we don't have to write two shaders\n      data,\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n      },\n      format: GL.RGB,\n      dataFormat: GL.RGB,\n      type: GL.UNSIGNED_BYTE,\n    });\n    this.setState({ colorTex });\n  }\n\n  draw(opts) {\n    const { uniforms } = opts;\n    const { channelIsOn, hoveredCell } = this.props;\n    const { textures, model, colorTex } = this.state;\n    // Render the image\n    if (textures && model && colorTex) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            hovered: hoveredCell || 0,\n            colorTex,\n            colorTexHeight: colorTex.height,\n            colorTexWidth: colorTex.width,\n            channelIsOn: padWithDefault(\n              channelIsOn,\n              false,\n              // There are six texture entries on the shaders\n              6 - channelIsOn.length,\n            ),\n            ...textures,\n          }),\n        )\n        .draw();\n    }\n  }\n\n  /**\n   * This function creates textures from the data\n   */\n  dataToTexture(data, width, height) {\n    const isWebGL2On = isWebGL2(this.context.gl);\n    return new Texture2D(this.context.gl, {\n      width,\n      height,\n      // Only use Float32 so we don't have to write two shaders\n      data: new Float32Array(data),\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n      },\n      format: isWebGL2On ? GL.R32F : GL.LUMINANCE,\n      dataFormat: isWebGL2On ? GL.RED : GL.LUMINANCE,\n      type: GL.FLOAT,\n    });\n  }\n}\nBitmaskLayer.layerName = 'BitmaskLayer';\nBitmaskLayer.defaultProps = defaultProps;\n","export const vs = `\n#define SHADER_NAME bitmask-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute vec3 instancePickingColors;\n\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = instancePickingColors;\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vTexCoord = texCoords;\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n`;\n\nexport const fs = `\n#define SHADER_NAME bitmask-layer-fragment-shader\nprecision highp float;\n\n// Data (mask) texture\nuniform sampler2D channel0;\nuniform sampler2D channel1;\nuniform sampler2D channel2;\nuniform sampler2D channel3;\nuniform sampler2D channel4;\nuniform sampler2D channel5;\n\n// Color texture\nuniform sampler2D colorTex;\nuniform float colorTexHeight;\nuniform float colorTexWidth;\nuniform float hovered;\n// range\nuniform bool channelIsOn[6];\n\n// opacity\nuniform float opacity;\n\nvarying vec2 vTexCoord;\n\nvec4 sampleAndGetColor(sampler2D dataTex, vec2 coord, bool isOn){\n  float sampledData = texture(dataTex, coord).r;\n  vec4 hoveredColor = float(sampledData == hovered && sampledData > 0. && hovered > 0.) * vec4(0., 0., 1., 1.);\n  // Colors are laid out corresponding to ids in row-major order in the texture.  So if width of the texture is 10, and you want ID 25,\n  // you need coordinate (1, 4) (i.e 2 rows down, and 5 columns over indexed from 0 for a total of 25 units covered in row major order).\n  vec2 colorTexCoord = vec2(mod(sampledData, colorTexWidth) / colorTexWidth, floor(sampledData / colorTexWidth) / (colorTexHeight - 1.));\n  vec4 sampledColor = vec4(texture(colorTex, colorTexCoord).rgb, 1.);\n  // Only return a color if the data is non-zero.\n  return max(0., min(sampledData, 1.)) * float(isOn) * (sampledColor + hoveredColor);\n}\n\nvoid main() {\n\n  gl_FragColor = sampleAndGetColor(channel0, vTexCoord, channelIsOn[0]);\n\n  // If the sampled color and the currently stored color (gl_FragColor) are identical, don't blend and use the sampled color,\n  // otherwise just use the currently stored color.  Repeat this for all channels.\n  vec4 sampledColor = sampleAndGetColor(channel1, vTexCoord, channelIsOn[1]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel2, vTexCoord, channelIsOn[2]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel3, vTexCoord, channelIsOn[3]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel4, vTexCoord, channelIsOn[4]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel5, vTexCoord, channelIsOn[5]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  // Apply the opacity if there is pixel data, and if the pixel data is empty i.e no segmentation, use 0 opacity.\n  gl_FragColor = vec4(gl_FragColor.rgb, (gl_FragColor.rgb == vec3(0., 0., 0.)) ? 0.0 : opacity);\n\n  geometry.uv = vTexCoord;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","import { getChannelStats } from '@hms-dbmi/viv';\nimport { Matrix4 } from 'math.gl';\n\nasync function getSingleSelectionStats2D({ loader, selection }) {\n  const data = Array.isArray(loader) ? loader[loader.length - 1] : loader;\n  const raster = await data.getRaster({ selection });\n  const selectionStats = getChannelStats(raster.data);\n  const { domain, autoSliders: slider } = selectionStats;\n  return { domain, slider };\n}\n\nasync function getSingleSelectionStats3D({ loader, selection }) {\n  const lowResSource = loader[loader.length - 1];\n  const { shape, labels } = lowResSource;\n  // eslint-disable-next-line no-bitwise\n  const sizeZ = shape[labels.indexOf('z')] >> (loader.length - 1);\n  const raster0 = await lowResSource.getRaster({\n    selection: { ...selection, z: 0 },\n  });\n  const rasterMid = await lowResSource.getRaster({\n    selection: { ...selection, z: Math.floor(sizeZ / 2) },\n  });\n  const rasterTop = await lowResSource.getRaster({\n    selection: { ...selection, z: sizeZ - 1 },\n  });\n  const stats0 = getChannelStats(raster0.data);\n  const statsMid = getChannelStats(rasterMid.data);\n  const statsTop = getChannelStats(rasterTop.data);\n  return {\n    domain: [\n      Math.min(stats0.domain[0], statsMid.domain[0], statsTop.domain[0]),\n      Math.max(stats0.domain[1], statsMid.domain[1], statsTop.domain[1]),\n    ],\n    slider: [\n      Math.min(\n        stats0.autoSliders[0],\n        statsMid.autoSliders[0],\n        statsTop.autoSliders[0],\n      ),\n      Math.max(\n        stats0.autoSliders[1],\n        statsMid.autoSliders[1],\n        statsTop.autoSliders[1],\n      ),\n    ],\n  };\n}\n\n\n/**\n * Get bounding cube for a given loader i.e [[0, width], [0, height], [0, depth]]\n * @param {Object} loader PixelSource|PixelSource[]\n * @param {[]} selection Selection for stats.\n * @param {boolean} use3d Whether or not to get 3d stats.\n * @returns {Object} { domains, sliders }\n */\nexport const getSingleSelectionStats = async ({ loader, selection, use3d }) => {\n  const getStats = use3d\n    ? getSingleSelectionStats3D\n    : getSingleSelectionStats2D;\n  return getStats({ loader, selection });\n};\n\nexport const getMultiSelectionStats = async ({ loader, selections, use3d }) => {\n  const stats = await Promise.all(\n    selections.map(selection => getSingleSelectionStats({ loader, selection, use3d })),\n  );\n  const domains = stats.map(stat => stat.domain);\n  const sliders = stats.map(stat => stat.slider);\n  return { domains, sliders };\n};\n\n/**\n * Get physical size scaling Matrix4\n * @param {Object} loader PixelSource\n * @returns {Object} matrix\n */\nexport function getPhysicalSizeScalingMatrix(loader) {\n  const { x, y, z } = loader?.meta?.physicalSizes ?? {};\n  if (x?.size && y?.size && z?.size) {\n    const min = Math.min(z.size, x.size, y.size);\n    const ratio = [x.size / min, y.size / min, z.size / min];\n    return new Matrix4().scale(ratio);\n  }\n  return new Matrix4().identity();\n}\n\n/**\n * Get bounding cube for a given loader\n * @param {Object} loader PixelSource|PixelSource[]\n * @returns {Array} [0, width], [0, height], [0, depth]]\n */\nexport function getBoundingCube(loader) {\n  const source = Array.isArray(loader) ? loader[0] : loader;\n  const { shape, labels } = source;\n  const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(source);\n  const xSlice = [0, physicalSizeScalingMatrix[0] * shape[labels.indexOf('x')]];\n  const ySlice = [0, physicalSizeScalingMatrix[5] * shape[labels.indexOf('y')]];\n  const zSlice = [\n    0,\n    physicalSizeScalingMatrix[10] * shape[labels.indexOf('z')],\n  ];\n  return [xSlice, ySlice, zSlice];\n}\n\n\nexport function abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) { --maxNaiveDigits; } // Wasted on \".\"\n  if (value < 1) { --maxNaiveDigits; } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n\n  const naive = Intl.NumberFormat(\n    'en-US',\n    {\n      maximumSignificantDigits: maxNaiveDigits,\n      useGrouping: false,\n    },\n  ).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n","/* eslint-disable no-plusplus */\nimport shortNumber from 'short-number';\nimport isEqual from 'lodash/isEqual';\nimport {\n  getDefaultInitialViewState,\n  MultiscaleImageLayer,\n  ImageLayer,\n  VolumeLayer,\n} from '@hms-dbmi/viv';\nimport { extent } from 'd3-array';\nimport { Matrix4 } from 'math.gl';\nimport { divide, compare, unit } from 'mathjs';\nimport { pluralize, getSourceFromLoader, isRgb } from '../../utils';\nimport { VIEWER_PALETTE } from '../utils';\nimport {\n  GLOBAL_LABELS,\n  DEFAULT_RASTER_LAYER_PROPS,\n  DEFAULT_LAYER_TYPE_ORDERING,\n} from './constants';\nimport BitmaskLayer from '../../layers/BitmaskLayer';\nimport { getMultiSelectionStats } from '../layer-controller/utils';\n\nexport function square(x, y, r) {\n  return [[x, y + r], [x + r, y], [x, y - r], [x - r, y]];\n}\n\n/**\n * Sort spatial layer definition array,\n * to keep the ordering in the layer controller\n * consistent.\n * Intended to be used with auto-initialized layer\n * definition arrays only, as a pre-defined layer array\n * should not be re-ordered.\n * @param {object[]} layers Array of layer definition objects.\n * Object must have a .type property.\n */\nexport function sortLayers(layers) {\n  return layers.sort((a, b) => (\n    DEFAULT_LAYER_TYPE_ORDERING.indexOf(a.type) - DEFAULT_LAYER_TYPE_ORDERING.indexOf(b.type)\n  ));\n}\n\n/**\n * Return the midpoint of the global dimensions.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction getDefaultGlobalSelection(source) {\n  const globalIndices = source.labels\n    .filter(dim => GLOBAL_LABELS.includes(dim));\n  const selection = {};\n  globalIndices.forEach((dim) => {\n    selection[dim] = Math.floor(\n      (source.shape[source.labels.indexOf(dim)] || 0) / 2,\n    );\n  });\n  return selection;\n}\n\n/**\n * Create a default selection using the midpoint of the available global dimensions,\n * and then the first four available selections from the first selectable channel.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction buildDefaultSelection(source) {\n  const selection = [];\n  const globalSelection = getDefaultGlobalSelection(source);\n  // First non-global dimension with some sort of selectable values\n  const firstNonGlobalDimension = source.labels.filter(\n    dim => !GLOBAL_LABELS.includes(dim)\n      && source.shape[source.labels.indexOf(dim)],\n  )[0];\n  for (let i = 0; i < Math.min(4, source.shape[\n    source.labels.indexOf(firstNonGlobalDimension)\n  ]); i += 1) {\n    selection.push(\n      {\n        [firstNonGlobalDimension]: i,\n        ...globalSelection,\n      },\n    );\n  }\n  return selection;\n}\n\n/**\n * @param {Array.<number>} shape loader shape\n */\nexport function isInterleaved(shape) {\n  const lastDimSize = shape[shape.length - 1];\n  return lastDimSize === 3 || lastDimSize === 4;\n}\n\n/**\n * Initialize the channel selections for an individual layer.\n * @param {object} loader A viv loader instance with channel names appended by Vitessce loaders\n * of the form { data: (PixelSource[]|PixelSource), metadata: Object, channels }\n * @returns {object[]} An array of selected channels with default\n * domain/slider settings.\n */\nexport async function initializeLayerChannels(loader, use3d) {\n  const result = [];\n  const source = getSourceFromLoader(loader);\n  // Add channel automatically as the first avaialable value for each dimension.\n  let defaultSelection = buildDefaultSelection(source);\n  defaultSelection = isInterleaved(source.shape)\n    ? [{ ...defaultSelection[0], c: 0 }] : defaultSelection;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data, selections: defaultSelection, use3d,\n  });\n\n  const domains = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.domains;\n  const colors = isRgb(loader)\n    ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]]\n    : null;\n  const sliders = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.sliders;\n\n  defaultSelection.forEach((selection, i) => {\n    const domain = domains[i];\n    const slider = sliders[i];\n    const channel = {\n      selection,\n      // eslint-disable-next-line no-nested-ternary\n      color: colors ? colors[i]\n        : defaultSelection.length !== 1\n          ? VIEWER_PALETTE[i] : [255, 255, 255],\n      visible: true,\n      slider: slider || domain,\n    };\n    result.push(channel);\n  });\n  return result;\n}\n\nfunction getMetaWithTransformMatrices(imageMeta, imageLoaders) {\n  // Do not fill in transformation matrices if any of the layers specify one.\n  const sources = imageLoaders.map(loader => getSourceFromLoader(loader));\n  if (\n    imageMeta.map(meta => meta?.metadata?.transform?.matrix\n      || meta?.metadata?.transform?.scale\n      || meta?.metadata?.transform?.translate).some(Boolean)\n    || sources.every(\n      source => !source.meta?.physicalSizes?.x || !source.meta?.physicalSizes?.y,\n    )\n  ) {\n    return imageMeta;\n  }\n  // Get the minimum physical among all the current images.\n  const minPhysicalSize = sources.reduce((acc, source) => {\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('µ', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('µ', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('µ', 'u')));\n    }\n    acc[0] = (acc[0] === undefined || compare(sizes[0], acc[0]) === -1) ? sizes[0] : acc[0];\n    acc[1] = (acc[1] === undefined || compare(sizes[1], acc[1]) === -1) ? sizes[1] : acc[1];\n    acc[2] = (acc[2] === undefined || compare(sizes[2], acc[2]) === -1) ? sizes[2] : acc[2];\n    return acc;\n  }, []);\n  const imageMetaWithTransform = imageMeta.map((meta, j) => {\n    const source = sources[j];\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('µ', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('µ', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('µ', 'u')));\n    }\n    // Find the ratio of the sizes to get the scaling factor.\n    const scale = sizes.map((i, k) => divide(i, minPhysicalSize[k]));\n    // Add in z dimension needed for Matrix4 scale API.\n    if (!scale[2]) {\n      scale[2] = 1;\n    }\n    // no need to store/use identity scaling\n    if (isEqual(scale, [1, 1, 1])) {\n      return meta;\n    }\n    // Make sure to scale the z direction by one.\n    const matrix = new Matrix4().scale([...scale]);\n    const newMeta = { ...meta };\n    newMeta.metadata = {\n      ...newMeta.metadata,\n      // We don't want to store matrix objects in the view config.\n      transform: { matrix: matrix.toArray() },\n    };\n    return newMeta;\n  });\n  return imageMetaWithTransform;\n}\n\n/**\n * Given a set of image layer loader creator functions,\n * create loader objects for an initial layer or set of layers,\n * which will be selected based on default values predefined in\n * the image data file or otherwise by a heuristic\n * (the midpoint of the layers array).\n * @param {object[]} rasterLayers A list of layer metadata objects with\n * shape { name, type, url, createLoader }.\n * @param {(string[]|null)} rasterRenderLayers A list of default raster layers. Optional.\n */\nexport async function initializeRasterLayersAndChannels(\n  rasterLayers,\n  rasterRenderLayers,\n  usePhysicalSizeScaling,\n) {\n  const nextImageLoaders = [];\n  let nextImageMetaAndLayers = [];\n  const autoImageLayerDefPromises = [];\n\n  // Start all loader creators immediately.\n  // Reference: https://eslint.org/docs/rules/no-await-in-loop\n  const loaders = await Promise.all(rasterLayers.map(layer => layer.loaderCreator()));\n\n  for (let i = 0; i < rasterLayers.length; i++) {\n    const layer = rasterLayers[i];\n    const loader = loaders[i];\n    nextImageLoaders[i] = loader;\n    nextImageMetaAndLayers[i] = layer;\n  }\n  if (usePhysicalSizeScaling) {\n    nextImageMetaAndLayers = getMetaWithTransformMatrices(nextImageMetaAndLayers, nextImageLoaders);\n  }\n  // No layers were pre-defined so set up the default image layers.\n  if (!rasterRenderLayers) {\n    // Midpoint of images list as default image to show.\n    const layerIndex = Math.floor(rasterLayers.length / 2);\n    const loader = nextImageLoaders[layerIndex];\n    const autoImageLayerDefPromise = initializeLayerChannels(loader)\n      .then(channels => Promise.resolve({\n        type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n        index: layerIndex,\n        ...DEFAULT_RASTER_LAYER_PROPS,\n        channels: channels.map((channel, j) => ({\n          ...channel,\n          ...(nextImageMetaAndLayers[layerIndex].channels\n            ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n        })),\n        modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n        transparentColor: layerIndex > 0 ? [0, 0, 0] : null,\n      }));\n    autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n  } else {\n    // The renderLayers parameter is a list of layer names to show by default.\n    const globalIndicesOfRenderLayers = rasterRenderLayers\n      .map(imageName => rasterLayers.findIndex(image => image.name === imageName));\n    for (let i = 0; i < globalIndicesOfRenderLayers.length; i++) {\n      const layerIndex = globalIndicesOfRenderLayers[i];\n      const loader = nextImageLoaders[layerIndex];\n      const autoImageLayerDefPromise = initializeLayerChannels(loader)\n        // eslint-disable-next-line no-loop-func\n        .then(channels => Promise.resolve({\n          type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n          index: layerIndex,\n          ...DEFAULT_RASTER_LAYER_PROPS,\n          channels: channels.map((channel, j) => ({\n            ...channel,\n            ...(nextImageMetaAndLayers[layerIndex].channels\n              ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n          })),\n          domainType: 'Min/Max',\n          modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n          transparentColor: i > 0 ? [0, 0, 0] : null,\n        }));\n      autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n    }\n  }\n\n  const autoImageLayerDefs = await Promise.all(autoImageLayerDefPromises);\n  return [autoImageLayerDefs, nextImageLoaders, nextImageMetaAndLayers];\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} params\n * @param {number} params.observationsCount\n * @param {string} params.observationsLabel\n * @param {string} params.observationsPluralLabel\n * @param {number} params.subobservationsCount\n * @param {string} params.subobservationsLabel\n * @param {string} params.subobservationsPluralLabel\n * @param {number} params.locationsCount\n * @returns {string} The subtitle string,\n * with info about items with zero counts omitted.\n */\nexport function makeSpatialSubtitle({\n  observationsCount, observationsLabel, observationsPluralLabel,\n  subobservationsCount, subobservationsLabel, subobservationsPluralLabel,\n  locationsCount,\n}) {\n  const parts = [];\n  if (subobservationsCount > 0) {\n    let part = `${subobservationsCount} ${pluralize(subobservationsLabel, subobservationsPluralLabel, subobservationsCount)}`;\n    if (locationsCount > 0) {\n      part += ` at ${shortNumber(locationsCount)} locations`;\n    }\n    parts.push(part);\n  }\n  if (observationsCount > 0) {\n    parts.push(`${observationsCount} ${pluralize(observationsLabel, observationsPluralLabel, observationsCount)}`);\n  }\n  return parts.join(', ');\n}\n\nexport function getInitialSpatialTargets({\n  width,\n  height,\n  cells,\n  imageLayerLoaders,\n  useRaster,\n  use3d,\n}) {\n  let initialTargetX = -Infinity;\n  let initialTargetY = -Infinity;\n  let initialTargetZ = -Infinity;\n  let initialZoom = -Infinity;\n  // Some backoff from completely filling the screen.\n  const zoomBackoff = use3d ? 1.5 : 0.1;\n  const cellValues = Object.values(cells);\n  if (imageLayerLoaders.length > 0 && useRaster) {\n    for (let i = 0; i < imageLayerLoaders.length; i += 1) {\n      const viewSize = { height, width };\n      const { target, zoom: newViewStateZoom } = getDefaultInitialViewState(\n        imageLayerLoaders[i].data,\n        viewSize,\n        zoomBackoff,\n        use3d,\n      );\n      if (target[0] > initialTargetX) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetX = target[0];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[1] > initialTargetY) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetY = target[1];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[2] > initialTargetZ) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetZ = target[2];\n        initialZoom = newViewStateZoom;\n      } else {\n        initialTargetZ = null;\n      }\n    }\n  } else if (cellValues.length > 0\n    // Only use cellValues in quadtree calculation if there is\n    // centroid data in the cells (i.e not just ids).\n    && cellValues[0].xy\n    && !useRaster) {\n    const cellCoordinates = cellValues.map(c => c.xy);\n    let xExtent = extent(cellCoordinates, c => c[0]);\n    let yExtent = extent(cellCoordinates, c => c[1]);\n    let xRange = xExtent[1] - xExtent[0];\n    let yRange = yExtent[1] - yExtent[0];\n    const getViewExtentFromPolygonExtents = extents => [\n      Math.min(...extents.map(i => i[0])),\n      Math.max(...extents.map(i => i[1])),\n    ];\n    if (xRange === 0) {\n      // The fall back is the cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsX = cellValues.map(cell => extent(cell.poly, i => i[0]));\n      xExtent = getViewExtentFromPolygonExtents(polygonExtentsX);\n      xRange = xExtent[1] - xExtent[0];\n    }\n    if (yRange === 0) {\n      // The fall back is the first cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsY = cellValues.map(cell => extent(cell.poly, i => i[1]));\n      yExtent = getViewExtentFromPolygonExtents(polygonExtentsY);\n      yRange = yExtent[1] - yExtent[0];\n    }\n    initialTargetX = xExtent[0] + xRange / 2;\n    initialTargetY = yExtent[0] + yRange / 2;\n    initialTargetZ = null;\n    initialZoom = Math.log2(Math.min(width / xRange, height / yRange)) - zoomBackoff;\n  } else {\n    return {\n      initialTargetX: null, initialTargetY: null, initialTargetZ: null, initialZoom: null,\n    };\n  }\n  return {\n    initialTargetX, initialTargetY, initialZoom, initialTargetZ,\n  };\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} data PixelSource | PixelSource[]\n * @returns {Array} [Layer, PixelSource | PixelSource[]] tuple.\n */\nexport function getLayerLoaderTuple(data, use3d) {\n  const loader = ((Array.isArray(data) && data.length > 1) || !Array.isArray(data))\n    ? data : data[0];\n  if (use3d) {\n    return [VolumeLayer, Array.isArray(loader) ? loader : [loader]];\n  }\n  const Layer = (Array.isArray(data) && data.length > 1) ? MultiscaleImageLayer : ImageLayer;\n  return [Layer, loader];\n}\n\n\nexport function renderSubBitmaskLayers(props) {\n  const {\n    bbox: {\n      left, top, right, bottom,\n    },\n    x,\n    y,\n    z,\n  } = props.tile;\n  const { data, id, loader } = props;\n  // Only render in positive coorinate system\n  if ([left, bottom, right, top].some(v => v < 0) || !data) {\n    return null;\n  }\n  const base = loader[0];\n  const [height, width] = loader[0].shape.slice(-2);\n  // Tiles are exactly fitted to have height and width such that their bounds\n  // match that of the actual image (not some padded version).\n  // Thus the right/bottom given by deck.gl are incorrect since\n  // they assume tiles are of uniform sizes, which is not the case for us.\n  const bounds = [\n    left,\n    data.height < base.tileSize ? height : bottom,\n    data.width < base.tileSize ? width : right,\n    top,\n  ];\n  return new BitmaskLayer(props, {\n    channelData: data,\n    cellColor: {\n      data: props.cellColorData,\n      height: props.cellColorHeight,\n      width: props.cellColorWidth,\n    },\n    // Uncomment to help debugging - shades the tile being hovered over.\n    // autoHighlight: true,\n    // highlightColor: [80, 80, 80, 50],\n    // Shared props with BitmapLayer:\n    bounds,\n    id: `sub-layer-${bounds}-${id}`,\n    tileId: { x, y, z },\n  });\n}\n","import { ZarrPixelSource, loadOmeTiff } from '@hms-dbmi/viv';\nimport { openArray } from 'zarr';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeRasterLayersAndChannels } from '../components/spatial/utils';\n\nasync function initLoader(imageData) {\n  const {\n    type, url, metadata, requestInit,\n  } = imageData;\n  switch (type) {\n    case ('zarr'): {\n      const {\n        dimensions, isPyramid, transform,\n      } = metadata || {};\n      const labels = dimensions.map(d => d.field);\n      let source;\n      if (isPyramid) {\n        const metadataUrl = `${url}${\n          url.slice(-1) === '/' ? '' : '/'\n        }.zmetadata`;\n        const response = await fetch(metadataUrl);\n        const { metadata: zarrMetadata } = await response.json();\n        const paths = Object.keys(zarrMetadata)\n          .filter(metaKey => metaKey.includes('.zarray'))\n          .map(arrMetaKeys => arrMetaKeys.slice(0, -7));\n        const data = await Promise.all(\n          paths.map(path => openArray({ store: url, path })),\n        );\n        const [yChunk, xChunk] = data[0].chunks.slice(-2);\n        const size = Math.min(yChunk, xChunk);\n        // deck.gl requirement for power-of-two tile size.\n        const tileSize = 2 ** Math.floor(Math.log2(size));\n        source = data.map(d => new ZarrPixelSource(d, labels, tileSize));\n      } else {\n        const data = await openArray({ store: url });\n        source = new ZarrPixelSource(data, labels);\n      }\n      return { data: source, metadata: { dimensions, transform }, channels: (dimensions.find(d => d.field === 'channel') || dimensions[0]).values };\n    }\n    case ('ome-tiff'): {\n      let loader;\n      // Fetch offsets for ome-tiff if needed.\n      if (metadata && 'omeTiffOffsetsUrl' in metadata) {\n        const { omeTiffOffsetsUrl } = metadata;\n        const res = await fetch(omeTiffOffsetsUrl, (requestInit || {}));\n        if (res.ok) {\n          const offsets = await res.json();\n          loader = await loadOmeTiff(\n            url,\n            {\n              offsets,\n              headers: requestInit?.headers,\n            },\n          );\n        } else {\n          throw new Error('Offsets not found but provided.');\n        }\n      } else {\n        loader = await loadOmeTiff(url, { headers: requestInit?.headers });\n      }\n      const { Pixels: { Channels } } = loader.metadata;\n      const channels = Array.isArray(Channels)\n        ? Channels.map((channel, i) => channel.Name || `Channel ${i}`)\n        : [Channels.Name || `Channel ${0}`];\n      return { ...loader, channels };\n    }\n    default: {\n      throw Error(`Image type (${type}) is not supported`);\n    }\n  }\n}\n\nexport default class RasterLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n    const { url, options } = params;\n    if (!url && options) {\n      this.url = URL.createObjectURL(new Blob([JSON.stringify(options)]));\n      this.options = undefined;\n    }\n    this.schema = rasterSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data: raster } = payload;\n    const { images, renderLayers, usePhysicalSizeScaling = false } = raster;\n\n    // Get image name and URL tuples.\n    const urls = images\n      .filter(image => !image.url.includes('zarr'))\n      .map(image => ([image.url, image.name]));\n\n    // Add a loaderCreator function for each image layer.\n    const imagesWithLoaderCreators = images.map(image => ({\n      ...image,\n      loaderCreator: async () => initLoader(image),\n    }));\n\n    // TODO: use options for initial selection of channels\n    // which omit domain/slider ranges.\n    if (!this.autoImageCache) {\n      this.autoImageCache = initializeRasterLayersAndChannels(\n        imagesWithLoaderCreators,\n        renderLayers,\n        usePhysicalSizeScaling,\n      );\n    }\n\n    return this.autoImageCache.then((autoImages) => {\n      const [autoImageLayers, imageLayerLoaders, imageLayerMeta] = autoImages;\n\n      const coordinationValues = {\n        spatialRasterLayers: autoImageLayers,\n      };\n      return new LoaderResult(\n        { loaders: imageLayerLoaders, meta: imageLayerMeta },\n        urls,\n        coordinationValues,\n      );\n    });\n  }\n}\n","import { loadOmeZarr } from '@hms-dbmi/viv';\nimport AbstractZarrLoader from './AbstractZarrLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeRasterLayersAndChannels } from '../components/spatial/utils';\n\nfunction hexToRgb(hex) {\n  const result = /^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})$/i.exec(hex);\n  return [\n    parseInt(result[1].toLowerCase(), 16),\n    parseInt(result[2].toLowerCase(), 16),\n    parseInt(result[3].toLowerCase(), 16),\n  ];\n}\n\nexport default class OmeZarrLoader extends AbstractZarrLoader {\n  async load() {\n    const payload = await this.getJson('.zattrs').catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n\n    const loader = await loadOmeZarr(this.url, { fetchOptions: this.requestInit, type: 'multiscales' });\n    const { metadata } = loader;\n\n    const { omero } = metadata;\n\n    if (!omero) {\n      console.error('Path for image not valid');\n      return Promise.reject(payload);\n    }\n\n    const { rdefs, channels } = omero;\n\n    const t = rdefs.defaultT ?? 0;\n    const z = rdefs.defaultZ ?? 0;\n\n    const imagesWithLoaderCreators = [\n      {\n        name: omero.name,\n        channels: channels.map((channel, i) => ({\n          selection: { z, t, c: i },\n          slider: [channel.window.start, channel.window.end],\n          color: hexToRgb(channel.color),\n        })),\n        loaderCreator: async () => ({ ...loader, channels: channels.map(c => c.label) }),\n      },\n    ];\n\n    // TODO: use options for initial selection of channels\n    // which omit domain/slider ranges.\n    const [\n      autoImageLayers, imageLayerLoaders, imageLayerMeta,\n    ] = await initializeRasterLayersAndChannels(\n      imagesWithLoaderCreators, undefined,\n    );\n\n    const coordinationValues = {\n      spatialRasterLayers: autoImageLayers,\n    };\n    return Promise.resolve(new LoaderResult(\n      { loaders: imageLayerLoaders, meta: imageLayerMeta },\n      [],\n      coordinationValues,\n    ));\n  }\n}\n","import tinycolor from 'tinycolor2';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Execute a callback function based on a keypress event.\n * @param {object} event The event from onKeyPress\n * @param {string} key The key identifier to match.\n * @param {Function} callback The function to execute.\n */\nexport function callbackOnKeyPress(event, key, callback) {\n  if (event.key === key) {\n    event.preventDefault();\n    callback();\n  }\n}\n\n/**\n * Convert an array of [r, g, b] numbers to a hex color.\n * @param {number[]} rgbArray The color [r, g, b] array.\n * @returns {string} The hex color as a string.\n */\nexport function colorArrayToString(rgbArray) {\n  return tinycolor({ r: rgbArray[0], g: rgbArray[1], b: rgbArray[2] }).toHexString();\n}\n\n/**\n * Convert a string color representation to an array of [r,g,b].\n * @param {string} colorString The color as a string.\n * @returns {number[]} The color as an array.\n */\nexport function colorStringToArray(colorString) {\n  const colorObj = tinycolor(colorString).toRgb();\n  return [colorObj.r, colorObj.g, colorObj.b];\n}\n\n/**\n * Get a string of help text for coloring a particular hierarchy level.\n * @param {integer} i The level. 1 for cluster, 2 for subcluster, etc.\n * @returns {string} The tooltip text for coloring the level.\n */\nexport function getLevelTooltipText(i) {\n  if (i === 0) return 'Color by hierarchy';\n  if (i <= 2) {\n    const subs = j => ('sub'.repeat(j));\n    return `Color by ${subs(i - 1)}cluster`;\n  }\n  return `Color by cluster level ${i}`;\n}\n\nexport function isEqualOrPrefix(targetPath, testPath) {\n  if (targetPath.length <= testPath.length) {\n    return isEqual(targetPath, testPath.slice(0, targetPath.length));\n  }\n  return false;\n}\n\nexport function tryRenamePath(targetPath, testPath, nextTargetPath) {\n  if (isEqualOrPrefix(targetPath, testPath)) {\n    return [...nextTargetPath, ...testPath.slice(nextTargetPath.length)];\n  }\n  return testPath;\n}\n\nexport const PATH_SEP = '___';\n\nexport function pathToKey(path) {\n  return path.join(PATH_SEP);\n}\n","/* eslint-disable no-underscore-dangle */\nimport uuidv4 from 'uuid/v4';\nimport isNil from 'lodash/isNil';\nimport isEqual from 'lodash/isEqual';\nimport range from 'lodash/range';\nimport { featureCollection as turfFeatureCollection, point as turfPoint } from '@turf/helpers';\nimport centroid from '@turf/centroid';\nimport concaveman from 'concaveman';\nimport {\n  HIERARCHICAL_SCHEMAS,\n} from './constants';\nimport { DEFAULT_COLOR, PALETTE } from '../utils';\nimport { pathToKey } from './utils';\n\n/**\n * Alias for the uuidv4 function to make code more readable.\n * @returns {string} UUID.\n */\nfunction generateKey() {\n  return uuidv4();\n}\n\n/**\n * Get the set associated with a particular node.\n * Recursive.\n * @param {object} currNode A node object.\n * @returns {array} The array representing the set associated with the node.\n */\nexport function nodeToSet(currNode) {\n  if (!currNode) {\n    return [];\n  }\n  if (!currNode.children) {\n    return (currNode.set || []);\n  }\n  return currNode.children.flatMap(c => nodeToSet(c));\n}\n\n/**\n * Get the height of a node (the number of levels to reach a leaf).\n * @param {object} currNode A node object.\n * @param {number} level The level that the height will be computed relative to. By default, 0.\n * @returns {number} The height. If the node has a .children property,\n * then the minimum value returned is 1.\n */\nexport function nodeToHeight(currNode, level = 0) {\n  if (!currNode.children) {\n    return level;\n  }\n  const newLevel = level + 1;\n  const childrenHeights = currNode.children.map(c => nodeToHeight(c, newLevel));\n  return Math.max(...childrenHeights, newLevel);\n}\n\n/**\n * Find a node with a matching name path, relative to a particular node.\n * @param {object} node A node object.\n * @param {string[]} path The name path for the node of interest.\n * @param {number} currLevelIndex The index of the current hierarchy level.\n * @returns {object|null} A matching node object, or null if none is found.\n */\nfunction nodeFindNodeByNamePath(node, path, currLevelIndex) {\n  const currNodeName = path[currLevelIndex];\n  if (node.name === currNodeName) {\n    if (currLevelIndex === path.length - 1) {\n      return node;\n    }\n    if (node.children) {\n      const foundNodes = node.children\n        .map(child => nodeFindNodeByNamePath(child, path, currLevelIndex + 1))\n        .filter(Boolean);\n      if (foundNodes.length === 1) {\n        return foundNodes[0];\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Find a node with a matching name path, relative to the whole tree.\n * @param {object} currTree A tree object.\n * @param {string[]} targetNamePath The name path for the node of interest.\n * @returns {object|null} A matching node object, or null if none is found.\n */\nexport function treeFindNodeByNamePath(currTree, targetNamePath) {\n  const foundNodes = currTree.tree\n    .map(levelZeroNode => nodeFindNodeByNamePath(levelZeroNode, targetNamePath, 0))\n    .filter(Boolean);\n  if (foundNodes.length === 1) {\n    return foundNodes[0];\n  }\n  return null;\n}\n\n/**\n * Transform a node object using a transform function.\n * @param {object} node A node object.\n * @param {function} predicate Returns true if a node matches a condition of interest.\n * @param {function} transform Takes the node matching the predicate as input, returns\n * a transformed version of the node.\n * @param {array} transformedPaths This array parameter is mutated. The path of\n * each transformed node is appended to this array.\n * @param {string[]} The current path of the node being updated, used internally\n * during recursion.\n * @returns {object} The updated node.\n */\nexport function nodeTransform(node, predicate, transform, transformedPaths, currPath) {\n  let newPath;\n  if (!currPath) {\n    newPath = [node.name];\n  } else {\n    newPath = [...currPath];\n  }\n  if (predicate(node, newPath)) {\n    transformedPaths.push(newPath);\n    return transform(node, newPath);\n  }\n  if (node.children) {\n    return {\n      ...node,\n      children: node.children.map(\n        child => nodeTransform(\n          child, predicate, transform, transformedPaths, newPath.concat([child.name]),\n        ),\n      ),\n    };\n  }\n  return node;\n}\n\n/**\n * Transform many node objects using a transform function.\n * @param {object} node A node object.\n * @param {function} predicate Returns true if a node matches a condition of interest.\n * @param {function} transform Takes the node matching the predicate as input, returns\n * a transformed version of the node.\n * @param {array} transformedPaths This array parameter is mutated. The path of\n * each transformed node is appended to this array.\n * @param {string[]} The current path of the node being updated, used internally\n * during recursion.\n * @returns {object} The updated node.\n */\nexport function nodeTransformAll(node, predicate, transform, transformedPaths, currPath) {\n  let newPath;\n  if (!currPath) {\n    newPath = [node.name];\n  } else {\n    newPath = [...currPath];\n  }\n  let newNode = node;\n  if (predicate(node, newPath)) {\n    transformedPaths.push(newPath);\n    newNode = transform(node, newPath);\n  }\n  if (node.children) {\n    return {\n      ...newNode,\n      children: newNode.children.map(\n        child => nodeTransformAll(\n          child, predicate, transform, transformedPaths, newPath.concat([child.name]),\n        ),\n      ),\n    };\n  }\n  return newNode;\n}\n\n/**\n * Append a child to a parent node.\n * @param {object} currNode A node object.\n * @param {object} newChild The child node object.\n * @returns {object} The updated node.\n */\nexport function nodeAppendChild(currNode, newChild) {\n  return {\n    ...currNode,\n    children: [...currNode.children, newChild],\n  };\n}\n\n/**\n * Prepend a child to a parent node.\n * @param {object} currNode A node object.\n * @param {object} newChild The child node object.\n * @returns {object} The updated node.\n */\nexport function nodePrependChild(currNode, newChild) {\n  return {\n    ...currNode,\n    children: [newChild, ...currNode.children],\n  };\n}\n\n/**\n * Insert a child to a parent node.\n * @param {object} currNode A node object.\n * @param {*} newChild The child node object.\n * @param {*} insertIndex The index at which to insert the child.\n * @returns {object} The updated node.\n */\nexport function nodeInsertChild(currNode, newChild, insertIndex) {\n  const newChildren = Array.from(currNode.children);\n  newChildren.splice(insertIndex, 0, newChild);\n  return {\n    ...currNode,\n    children: newChildren,\n  };\n}\n\n/**\n * Get an array representing the union of the sets of checked nodes.\n * @param {object} currTree A tree object.\n * @returns {array} An array representing the union of the sets of checked nodes.\n */\nexport function treeToUnion(currTree, checkedPaths) {\n  const nodes = checkedPaths.map(path => treeFindNodeByNamePath(currTree, path));\n  const nodeSets = nodes.map(node => nodeToSet(node).map(([cellId]) => cellId));\n  return nodeSets\n    .reduce((a, h) => a.concat(h.filter(hEl => !a.includes(hEl))), nodeSets[0] || []);\n}\n\n/**\n * Get an array representing the intersection of the sets of checked nodes.\n * @param {object} currTree A tree object.\n * @returns {array} An array representing the intersection of the sets of checked nodes.\n */\nexport function treeToIntersection(currTree, checkedPaths) {\n  const nodes = checkedPaths.map(path => treeFindNodeByNamePath(currTree, path));\n  const nodeSets = nodes.map(node => nodeToSet(node).map(([cellId]) => cellId));\n  return nodeSets\n    .reduce((a, h) => h.filter(hEl => a.includes(hEl)), nodeSets[0] || []);\n}\n\n/**\n * Get an array representing the complement of the union of the sets of checked nodes.\n * @param {object} currTree\n * @returns {array} An array representing the complement of the\n * union of the sets of checked nodes.\n */\nexport function treeToComplement(currTree, checkedPaths, items) {\n  const primaryUnion = treeToUnion(currTree, checkedPaths);\n  return items.filter(el => !primaryUnion.includes(el));\n}\n\n/**\n * Get an flattened array of descendants at a particular relative\n * level of interest.\n * @param {object} node A node object.\n * @param {number} level The relative level of interest.\n * 0 for this node's children, 1 for grandchildren, etc.\n * @param {boolean} stopEarly Should a node be returned early if no children exist?\n * @returns {object[]} An array of descendants at the specified level,\n * where the level is relative to the node.\n */\nexport function nodeToLevelDescendantNamePaths(node, level, prevPath, stopEarly = false) {\n  if (!node.children) {\n    if (!stopEarly) {\n      return null;\n    }\n    return [[...prevPath, node.name]];\n  }\n  if (level === 0) {\n    return [[...prevPath, node.name]];\n  }\n  return node.children\n    .flatMap(c => nodeToLevelDescendantNamePaths(c, level - 1, [...prevPath, node.name], stopEarly))\n    .filter(Boolean);\n}\n\n/**\n * Export the tree by clearing tree state and all node states.\n * @param {object} currTree A tree object.\n * @returns {object} Tree object with tree and node state removed.\n */\nexport function treeExport(currTree, datatype) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n    datatype,\n    tree: currTree.tree,\n  };\n}\n\n/**\n * Export the tree by clearing tree state and all node states,\n * and filter so that only the level zero node of interest is included.\n * @param {object} currTree A tree object.\n * @param {string} nodeKey The key of the node of interest.\n * @returns {object} { treeToExport, nodeName }\n * Tree with one level zero node, and with state removed.\n */\nexport function treeExportLevelZeroNode(currTree, nodePath, datatype, cellSetColors) {\n  const node = treeFindNodeByNamePath(currTree, nodePath);\n  const nodeWithColors = nodeTransformAll(node, () => true, (n, nPath) => {\n    const nodeColor = cellSetColors?.find(c => isEqual(c.path, nPath))?.color ?? DEFAULT_COLOR;\n    return {\n      ...n,\n      color: nodeColor.slice(0, 3),\n    };\n  }, []);\n  const treeWithOneLevelZeroNode = {\n    ...currTree,\n    tree: [nodeWithColors],\n  };\n  return {\n    treeToExport: treeExport(treeWithOneLevelZeroNode, datatype),\n    nodeName: node.name,\n  };\n}\n\n/**\n * Prepare the set of a node of interest for export.\n * @param {object} currTree A tree object.\n * @param {string} nodeKey The key of the node of interest.\n * @returns {object} { setToExport, nodeName } The set as an array.\n */\nexport function treeExportSet(currTree, nodePath) {\n  const node = treeFindNodeByNamePath(currTree, nodePath);\n  return { setToExport: nodeToSet(node), nodeName: node.name };\n}\n\n/**\n * Get an empty tree, with a default tree state.\n * @param {string} datatype The type of sets that this tree contains.\n * @returns {object} Empty tree.\n */\nexport function treeInitialize(datatype) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n    datatype,\n    tree: [],\n  };\n}\n\n/**\n * For convenience, get an object with information required\n * to render a node as a component.\n * @param {object} node A node to be rendered.\n * @returns {object} An object containing properties required\n * by the TreeNode render functions.\n */\nexport function nodeToRenderProps(node, path, cellSetColor) {\n  const level = path.length - 1;\n  return {\n    title: node.name,\n    nodeKey: pathToKey(path),\n    path,\n    size: nodeToSet(node).length,\n    color: cellSetColor?.find(d => isEqual(d.path, path))?.color,\n    level,\n    isLeaf: (!node.children || node.children.length === 0) && Boolean(node.set),\n    height: nodeToHeight(node),\n  };\n}\n\n/**\n * Using a color and a probability, mix the color with an \"uncertainty\" color,\n * for example, gray.\n * Reference: https://github.com/bgrins/TinyColor/blob/80f7225029c428c0de0757f7d98ac15f497bee57/tinycolor.js#L701\n * @param {number[]} originalColor The color assignment for the class.\n * @param {number} p The mixing amount, or level certainty in the originalColor classification,\n * between 0 and 1.\n * @param {number[]} mixingColor The color with which to mix. By default, [128, 128, 128] gray.\n * @returns {number[]} Returns the color after mixing.\n */\nfunction colorMixWithUncertainty(originalColor, p, mixingColor = [128, 128, 128]) {\n  return [\n    ((originalColor[0] - mixingColor[0]) * p) + mixingColor[0],\n    ((originalColor[1] - mixingColor[1]) * p) + mixingColor[1],\n    ((originalColor[2] - mixingColor[2]) * p) + mixingColor[2],\n  ];\n}\n\n/**\n * Given a tree with state, get the cellIds and cellColors,\n * based on the nodes currently marked as \"visible\".\n * @param {object} currTree A tree object.\n *  @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} cellSetColor Array of objects with the\n * properties `path` and `color`.\n * @returns {array} Tuple of [cellIds, cellColors]\n * where cellIds is an array of strings,\n * and cellColors is an object mapping cellIds to color [r,g,b] arrays.\n */\nexport function treeToCellColorsBySetNames(currTree, selectedNamePaths, cellSetColor) {\n  let cellColorsArray = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        cellSetColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || DEFAULT_COLOR\n      );\n      cellColorsArray = [\n        ...cellColorsArray,\n        ...nodeSet.map(([cellId, prob]) => [\n          cellId,\n          (isNil(prob) ? nodeColor : colorMixWithUncertainty(nodeColor, prob)),\n        ]),\n      ];\n    }\n  });\n  return new Map(cellColorsArray);\n}\n\n/**\n * Given a tree with state, get an array of\n * objects with cellIds and cellColors,\n * based on the nodes currently marked as \"visible\".\n * @param {object} currTree A tree object.\n * @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} setColor Array of objects with the\n * properties `path` and `color`.\n * @returns {object[]} Array of objects with properties\n * `obsId`, `name`, and `color`.\n */\nexport function treeToObjectsBySetNames(currTree, selectedNamePaths, setColor) {\n  let cellsArray = [];\n  for (let i = 0; i < selectedNamePaths.length; i += 1) {\n    const setNamePath = selectedNamePaths[i];\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        setColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || DEFAULT_COLOR\n      );\n      cellsArray = cellsArray.concat(nodeSet.map(([cellId]) => ({\n        obsId: cellId,\n        name: node.name,\n        color: nodeColor,\n      })));\n    }\n  }\n  return cellsArray;\n}\n\nexport function treeToCellPolygonsBySetNames(\n  currTree, cells, mapping, selectedNamePaths, cellSetColor,\n) {\n  const cellSetPolygons = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        cellSetColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || DEFAULT_COLOR\n      );\n      const cellPositions = nodeSet\n        .map(([cellId]) => ([\n          cells[cellId]?.mappings[mapping][0],\n          -cells[cellId]?.mappings[mapping][1],\n        ]))\n        .filter(cell => cell.every(i => typeof i === 'number'));\n\n      if (cellPositions.length > 2) {\n        const points = turfFeatureCollection(\n          cellPositions.map(turfPoint),\n        );\n        const concavity = Infinity;\n        const hullCoords = concaveman(cellPositions, concavity);\n        if (hullCoords) {\n          const centroidCoords = centroid(points).geometry.coordinates;\n          cellSetPolygons.push({\n            path: setNamePath,\n            name: setNamePath[setNamePath.length - 1],\n            hull: hullCoords,\n            color: nodeColor,\n            centroid: centroidCoords,\n          });\n        }\n      }\n    }\n  });\n  return cellSetPolygons;\n}\n\n/**\n * Given a tree with state, get the sizes of the\n * sets currently marked as \"visible\".\n * @param {object} currTree A tree object.\n * @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} setColor Array of objects with the\n * properties `path` and `color`.\n * @returns {object[]} Array of objects\n * with the properties `name`, `size`, `key`,\n * and `color`.\n */\nexport function treeToSetSizesBySetNames(currTree, selectedNamePaths, setColor) {\n  const sizes = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = setColor.find(d => isEqual(d.path, setNamePath))?.color || DEFAULT_COLOR;\n      sizes.push({\n        key: generateKey(),\n        name: node.name,\n        size: nodeSet.length,\n        color: nodeColor,\n      });\n    }\n  });\n  return sizes;\n}\n\n/**\n * Find and remove a node from the descendants of the current node.\n * @param {object} node A node to search on.\n * @param {array} prevPath Path of the current node to be searched.\n * @param {array} filterPath The path sought.\n * @returns {object} A new node without a node at filterPath.\n */\nexport function filterNode(node, prevPath, filterPath) {\n  if (isEqual([...prevPath, node.name], filterPath)) {\n    return null;\n  }\n  if (!node.children) {\n    return node;\n  }\n  return {\n    ...node,\n    children: node.children.map(\n      c => filterNode(c, [...prevPath, node.name], filterPath),\n    ).filter(Boolean),\n  };\n}\n\nexport function treeToExpectedCheckedLevel(currTree, checkedPaths) {\n  let result = null;\n  if (currTree) {\n    currTree.tree.forEach((lzn) => {\n      const levelZeroPath = [lzn.name];\n      const height = nodeToHeight(lzn);\n      range(height).forEach((i) => {\n        const levelIndex = i + 1;\n        const levelNodePaths = nodeToLevelDescendantNamePaths(lzn, levelIndex, [], true);\n        if (isEqual(levelNodePaths, checkedPaths)) {\n          result = { levelZeroPath, levelIndex };\n        }\n      });\n    });\n  }\n  return result;\n}\n\nexport function treesConflict(cellSets, testCellSets) {\n  const paths = [];\n  const testPaths = [];\n  let hasConflict = false;\n\n  function getPaths(node, prevPath) {\n    paths.push([...prevPath, node.name]);\n    if (node.children) {\n      node.children.forEach(c => getPaths(c, [...prevPath, node.name]));\n    }\n  }\n  cellSets.tree.forEach(lzn => getPaths(lzn, []));\n\n  function getTestPaths(node, prevPath) {\n    testPaths.push([...prevPath, node.name]);\n    if (node.children) {\n      node.children.forEach(c => getPaths(c, [...prevPath, node.name]));\n    }\n  }\n  testCellSets.tree.forEach(lzn => getTestPaths(lzn, []));\n\n  testPaths.forEach((testPath) => {\n    if (paths.find(p => isEqual(p, testPath))) {\n      hasConflict = true;\n    }\n  });\n  return hasConflict;\n}\n\nexport function initializeCellSetColor(cellSets, cellSetColor) {\n  const nextCellSetColor = [...(cellSetColor || [])];\n  const nodeCountPerTreePerLevel = cellSets.tree.map(tree => Array\n    .from({\n      length: nodeToHeight(tree) + 1, // Need to add one because its an array.\n    }).fill(0));\n\n  function processNode(node, prevPath, hierarchyLevel, treeIndex) {\n    const index = nodeCountPerTreePerLevel[treeIndex][hierarchyLevel];\n    const nodePath = [...prevPath, node.name];\n\n    const nodeColor = nextCellSetColor.find(d => isEqual(d.path, nodePath));\n    if (!nodeColor) {\n      nextCellSetColor.push({\n        path: nodePath,\n        color: PALETTE[index % PALETTE.length],\n      });\n    }\n    nodeCountPerTreePerLevel[treeIndex][hierarchyLevel] += 1;\n    if (node.children) {\n      node.children.forEach(c => processNode(c, nodePath, hierarchyLevel + 1, treeIndex));\n    }\n  }\n\n  cellSets.tree.forEach((lzn, treeIndex) => processNode(lzn, [], 0, treeIndex));\n  return nextCellSetColor;\n}\n\nexport function getCellSetPolygons(params) {\n  const {\n    cells,\n    mapping,\n    cellSets,\n    cellSetSelection,\n    cellSetColor,\n  } = params;\n  if (cellSetSelection && cellSetSelection.length > 0 && cellSets && cells) {\n    return treeToCellPolygonsBySetNames(cellSets, cells, mapping, cellSetSelection, cellSetColor);\n  }\n  return [];\n}\n","import Ajv from 'ajv';\nimport isNil from 'lodash/isNil';\nimport { dsvFormat } from 'd3-dsv';\nimport { parse as json2csv } from 'json2csv';\nimport { colorArrayToString, colorStringToArray } from './utils';\nimport { nodeTransform } from './cell-set-utils';\nimport { DEFAULT_COLOR } from '../utils';\nimport {\n  HIERARCHICAL_SCHEMAS, TABULAR_SCHEMAS,\n  MIME_TYPE_JSON, MIME_TYPE_TABULAR,\n  SEPARATOR_TABULAR, NA_VALUE_TABULAR,\n} from './constants';\n\n/**\n * Check if an imported tree has an old schema version that we know how to\n * \"upgrade\" to the latest schema version.  Validate against the schema.\n * @param {object} currTree A hierarchical tree object with a .version property,\n * which has already passed schema validation, but may not have the latest schema version.\n * @param {string} datatype The data type of the items in the schema.\n */\nexport function tryUpgradeTreeToLatestSchema(currTree, datatype) {\n  const validate = new Ajv().compile(HIERARCHICAL_SCHEMAS[datatype].schema);\n  const valid = validate(currTree);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    throw new Error(`Tree validation failed: ${failureReason}`);\n  } else if (currTree.datatype !== datatype) {\n    throw new Error(\n      `The data type does not match the expected data type of '${datatype}'.`,\n    );\n  }\n  if (currTree.version === '0.1.2') {\n    // To upgrade from cell-sets schema 0.1.2 to 0.1.3,\n    // add a confidence value of null for each cell ID.\n    return {\n      ...currTree,\n      version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n      tree: currTree.tree.map(levelZeroNode => nodeTransform(\n        levelZeroNode,\n        n => !n.children && Array.isArray(n.set),\n        n => ({ ...n, set: n.set.map(itemId => ([itemId, null])) }), [],\n      )),\n    };\n  }\n  return currTree;\n}\n\n/**\n * Handler for JSON imports. Validates and upgrades against the hierarchical sets schema.\n * @param {string} result The data passed from the FileReader as a string.\n * @param {string} datatype The data type to validate against.\n * @returns {object} The imported tree object.\n * @throws {Error} Throws error if validation fails or if the datatype does not match.\n */\nexport function handleImportJSON(result, datatype) {\n  let importData = JSON.parse(result);\n  // Validate the imported file.\n  importData = tryUpgradeTreeToLatestSchema(importData, datatype);\n  return importData;\n}\n\n/**\n * Handler for tabular imports. Validates against the tabular sets schema.\n * @param {string} result The data passed from the FileReader as a string.\n * @param {string} datatype The data type to validate against.\n * @returns {object} The imported tree object.\n * @throws {Error} Throws error if validation fails or if the datatype does not match.\n */\nexport function handleImportTabular(result, datatype) {\n  const dsvParser = dsvFormat(SEPARATOR_TABULAR);\n  const importData = dsvParser.parse(result, row => ({\n    groupName: row.groupName,\n    setName: row.setName,\n    setColor: (row.setColor ? colorStringToArray(row.setColor) : DEFAULT_COLOR),\n    obsId: row.obsId,\n    predictionScore: (\n      (\n        isNil(row.predictionScore)\n        || row.predictionScore === NA_VALUE_TABULAR\n      )\n        ? null\n        : +row.predictionScore\n    ),\n  }));\n  // Validate the imported file.\n  const validate = new Ajv().compile(TABULAR_SCHEMAS[datatype].schema);\n  const valid = validate(importData);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    throw new Error(`Import validation failed: ${failureReason}`);\n  } else {\n    // Convert the validated array to a tree representation.\n    const treeToImport = {\n      version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n      datatype,\n      tree: [],\n    };\n    const uniqueGroupNames = Array.from(new Set(importData.map(d => d.groupName)));\n    uniqueGroupNames.forEach((groupName) => {\n      const levelZeroNode = {\n        name: groupName,\n        children: [],\n      };\n      const groupRows = importData.filter(d => d.groupName === groupName);\n      const uniqueSetNames = Array.from(new Set(groupRows.map(d => d.setName)));\n      uniqueSetNames.forEach((setName) => {\n        const setRows = groupRows.filter(d => d.setName === setName);\n        const { setColor } = setRows[0];\n        const levelOneNode = {\n          name: setName,\n          color: setColor,\n          set: setRows.map(d => ([d.obsId, d.predictionScore])),\n        };\n        levelZeroNode.children.push(levelOneNode);\n      });\n      treeToImport.tree.push(levelZeroNode);\n    });\n    return treeToImport;\n  }\n}\n\n/**\n * Convert a tree object to a JSON representation.\n * @param {object} result The object to export.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportJSON(result) {\n  const jsonString = JSON.stringify(result);\n  const dataString = `data:${MIME_TYPE_JSON};charset=utf-8,${encodeURIComponent(jsonString)}`;\n  return dataString;\n}\n\n/**\n * Convert a tree object with one level (height === 1) to a tabular representation.\n * @param {object} result The object to export.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportTabular(result) {\n  // Convert a tree object to an array of JSON objects.\n  const exportData = [];\n  result.tree.forEach((levelZeroNode) => {\n    levelZeroNode.children.forEach((levelOneNode) => {\n      if (levelOneNode.set) {\n        levelOneNode.set.forEach(([obsId, prob]) => {\n          exportData.push({\n            groupName: levelZeroNode.name,\n            setName: levelOneNode.name,\n            setColor: colorArrayToString(levelOneNode.color),\n            obsId,\n            predictionScore: isNil(prob) ? NA_VALUE_TABULAR : prob,\n          });\n        });\n      }\n    });\n  });\n  const csvString = json2csv(exportData, {\n    fields: ['groupName', 'setName', 'setColor', 'obsId', 'predictionScore'],\n    delimiter: SEPARATOR_TABULAR,\n  });\n  const dataString = `data:${MIME_TYPE_TABULAR};charset=utf-8,${encodeURIComponent(csvString)}`;\n  return dataString;\n}\n\n/**\n * Download a file. Appends and removes an anchor node in the DOM.\n * @param {string} dataString The function that converts the data to a string.\n * @param {string} fileName The name of the file to be downloaded.\n */\nexport function downloadForUser(dataString, fileName) {\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataString);\n  downloadAnchorNode.setAttribute('download', fileName);\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n","import cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { tryUpgradeTreeToLatestSchema } from '../components/sets/io';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeCellSetColor } from '../components/sets/cell-set-utils';\n\nexport default class CellSetsJsonLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n\n    this.schema = cellSetsSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data: rawData, url } = payload;\n    const upgradedData = tryUpgradeTreeToLatestSchema(rawData, 'cell');\n\n    const coordinationValues = {\n      cellSetSelection: [],\n      cellSetColor: [],\n    };\n\n    // Set up the initial coordination values.\n    if (upgradedData && upgradedData.tree.length >= 1) {\n      const { tree } = upgradedData;\n      const newAutoSetSelectionParentName = tree[0].name;\n      // Create a list of set paths to initally select.\n      const newAutoSetSelections = tree[0].children\n        .map(node => ([newAutoSetSelectionParentName, node.name]));\n      // Create a list of cell set objects with color mappings.\n      const newAutoSetColors = initializeCellSetColor(upgradedData, []);\n      coordinationValues.cellSetSelection = newAutoSetSelections;\n      coordinationValues.cellSetColor = newAutoSetColors;\n    }\n    return Promise.resolve(new LoaderResult(upgradedData, url, coordinationValues));\n  }\n}\n","import { openArray } from 'zarr';\nimport range from 'lodash/range';\nimport AbstractZarrLoader from '../AbstractZarrLoader';\n\nconst readFloat32FromUint8 = (bytes) => {\n  if (bytes.length !== 4) {\n    throw new Error('readFloat32 only takes in length 4 byte buffers');\n  }\n  return new Int32Array(bytes.buffer)[0];\n};\n\nconst HEADER_LENGTH = 4;\n\n/**\n   * Method for decoding text arrays from zarr.\n   * Largerly a port of https://github.com/zarr-developers/numcodecs/blob/2c1aff98e965c3c4747d9881d8b8d4aad91adb3a/numcodecs/vlen.pyx#L135-L178\n   * @returns {string[]} An array of strings.\n   */\nfunction parseVlenUtf8(buffer) {\n  const decoder = new TextDecoder();\n  let data = 0;\n  const dataEnd = data + buffer.length;\n  const length = readFloat32FromUint8(buffer.slice(data, HEADER_LENGTH));\n  if (buffer.length < HEADER_LENGTH) {\n    throw new Error('corrupt buffer, missing or truncated header');\n  }\n  data += HEADER_LENGTH;\n  const output = new Array(length);\n  for (let i = 0; i < length; i += 1) {\n    if (data + 4 > dataEnd) {\n      throw new Error('corrupt buffer, data seem truncated');\n    }\n    const l = readFloat32FromUint8(buffer.slice(data, data + 4));\n    data += 4;\n    if (data + l > dataEnd) {\n      throw new Error('corrupt buffer, data seem truncated');\n    }\n    output[i] = decoder.decode(buffer.slice(data, data + l));\n    data += l;\n  }\n  return output;\n}\n\n/**\n * A base AnnData loader which has all shared methods for more comlpex laoders,\n * like loading cell names and ids. It inherits from AbstractLoader.\n */\nexport default class BaseAnnDataLoader extends AbstractZarrLoader {\n  /**\n   * Class method for loading cell set ids.\n   * Takes the location as an argument because this is shared across objects,\n   * which have different ways of specifying location.\n   * @param {Array} cellSetZarrLocation An array of strings like obs.leiden or obs.bulk_labels.\n   * @returns {Promise} A promise for an array of ids with one per cell.\n   */\n  loadCellSetIds(cellSetZarrLocation) {\n    const { store } = this;\n    if (this.cellSets) {\n      return this.cellSets;\n    }\n    this.cellSets = Promise.all(\n      cellSetZarrLocation.map(async (setName) => {\n        const { categories } = await this.getJson(`${setName}/.zattrs`);\n        let categoriesValues;\n        if (categories) {\n          const { dtype } = await this.getJson(`/obs/${categories}/.zarray`);\n          if (dtype === '|O') {\n            categoriesValues = await this.getFlatArrDecompressed(`/obs/${categories}`);\n          }\n        }\n        const cellSetsArr = await openArray({\n          store,\n          path: setName,\n          mode: 'r',\n        });\n        const cellSetsValues = await cellSetsArr.get();\n        const { data } = cellSetsValues;\n        const mappedCellSetValues = Array.from(data).map(\n          i => (!categoriesValues ? String(i) : categoriesValues[i]),\n        );\n        return mappedCellSetValues;\n      }),\n    );\n    return this.cellSets;\n  }\n\n  /**\n   * Class method for loading general numeric arrays.\n   * @param {string} path A string like obsm.X_pca.\n   * @returns {Promise} A promise for a zarr array containing the data.\n   */\n  loadNumeric(path) {\n    const { store } = this;\n    return openArray({\n      store,\n      path,\n      mode: 'r',\n    }).then(arr => arr.get());\n  }\n\n  getFlatArrDecompressed(path) {\n    const { store } = this;\n    return openArray({\n      store,\n      path,\n      mode: 'r',\n    }).then(async (z) => {\n      let data;\n      const parseAndMergeTextBytes = (dbytes) => {\n        const text = parseVlenUtf8(dbytes);\n        if (!data) {\n          data = text;\n        } else {\n          data = data.concat(text);\n        }\n      };\n      const mergeBytes = (dbytes) => {\n        if (!data) {\n          data = dbytes;\n        } else {\n          const tmp = new Uint8Array(dbytes.buffer.byteLength + data.buffer.byteLength);\n          tmp.set(new Uint8Array(data.buffer), 0);\n          tmp.set(dbytes, data.buffer.byteLength);\n          data = tmp;\n        }\n      };\n      const numRequests = Math.ceil(z.meta.shape[0] / z.meta.chunks[0]);\n      const requests = range(numRequests).map(async item => store.getItem(`${z.keyPrefix}${String(item)}`)\n        .then(buf => z.compressor.then(compressor => compressor.decode(buf))));\n      const dbytesArr = await Promise.all(requests);\n      dbytesArr.forEach((dbytes) => {\n        // Use vlenutf-8 decoding if necessary and merge `data` as a normal array.\n        if (Array.isArray(z.meta.filters) && z.meta.filters[0].id === 'vlen-utf8') {\n          parseAndMergeTextBytes(dbytes);\n          // Otherwise just merge the bytes as a typed array.\n        } else {\n          mergeBytes(dbytes);\n        }\n      });\n      const {\n        meta: {\n          shape: [length],\n        },\n      } = z;\n      // truncate the filled in values\n      return data.slice(0, length);\n    });\n  }\n\n  /**\n   * Class method for loading the cell names from obs.\n   * @returns {Promise} An promise for a zarr array containing the names.\n   */\n  loadCellNames() {\n    if (this.cellNames) {\n      return this.cellNames;\n    }\n    this.cellNames = this.getJson('obs/.zattrs')\n      .then(({ _index }) => this.getFlatArrDecompressed(`/obs/${_index}`));\n    return this.cellNames;\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { openArray, slice } from 'zarr';\nimport { extent } from 'd3-array';\nimport BaseAnnDataLoader from './BaseAnnDataLoader';\nimport LoaderResult from '../LoaderResult';\n\nconst normalize = (arr) => {\n  const [min, max] = extent(arr);\n  const ratio = 255 / (max - min);\n  const data = new Uint8Array(\n    arr.map(i => Math.floor((i - min) * ratio)),\n  );\n  return { data };\n};\n\nconst concatenateColumnVectors = (arr) => {\n  const numCols = arr.length;\n  const numRows = arr[0].length;\n  const { BYTES_PER_ELEMENT } = arr[0];\n  const view = new DataView(new ArrayBuffer(numCols * numRows * BYTES_PER_ELEMENT));\n  const TypedArray = arr[0].constructor;\n  const dtype = TypedArray.name.replace('Array', '');\n  for (let i = 0; i < numCols; i += 1) {\n    for (let j = 0; j < numRows; j += 1) {\n      view[`set${dtype}`](BYTES_PER_ELEMENT * (j * numCols + i), arr[i][j], true);\n    }\n  }\n  return new TypedArray(view.buffer);\n};\n\n/**\n * Loader for converting zarr into the a cell x gene matrix for use in Genes/Heatmap components.\n */\nexport default class MatrixZarrLoader extends BaseAnnDataLoader {\n  /**\n   * Class method for loading the genes list from AnnData.var.\n   * @returns {Promise} A promise for the zarr array contianing the gene names.\n   */\n  async loadGeneNames() {\n    if (this.geneNames) {\n      return this.geneNames;\n    }\n    const { geneFilter: geneFilterZarr } = this.options;\n    let geneFilter;\n    if (geneFilterZarr) {\n      geneFilter = await this.getFlatArrDecompressed(geneFilterZarr);\n    }\n    const { _index } = await this.getJson('var/.zattrs');\n    if (this.geneNames) {\n      return this.geneNames;\n    }\n    this.geneNames = this.getFlatArrDecompressed(`var/${_index}`).then(data => data.filter((_, j) => !geneFilter || geneFilter[j]));\n    return this.geneNames;\n  }\n\n  /**\n   * Class method for loading a filtered subset of the genes list\n   * @param {String} filterZarr A location in the zarr store to fetch a boolean array from.\n   * @returns {Array} A list of filtered genes.\n   */\n  async _getFilteredGenes(filterZarr) {\n    const filter = await this.getFlatArrDecompressed(filterZarr);\n    const geneNames = await this.loadGeneNames();\n    const genes = geneNames.filter((_, i) => filter[i]);\n    return genes;\n  }\n\n  /**\n   * Class method for getting the integer indices of a selection of genes within a list.\n   * @param {Array} selection A list of gene names.\n   * @returns {Array} A list of integer indices.\n   */\n  async _getGeneIndices(selection) {\n    const geneNames = await this.loadGeneNames();\n    return selection.map(gene => geneNames.indexOf(gene));\n  }\n\n  /**\n   * Class method for getting the number of cells i.e entries in `obs`.\n   * @returns {Number} The number of cells.\n   */\n  async _getNumCells() {\n    const cells = await this.loadCellNames();\n    return cells.length;\n  }\n\n  /**\n   * Class method for getting the number of genes i.e entries in `var`,\n   * potentially filtered by `genesFilter`.\n   * @returns {Number} The number of genes.\n   */\n  async _getNumGenes() {\n    const cells = await this.loadGeneNames();\n    return cells.length;\n  }\n\n  /**\n   * Class method for opening the sparse matrix arrays in zarr.\n   * @returns {Array} A list of promises pointing to the indptr, indices, and data of the matrix.\n   */\n  async _openSparseArrays() {\n    const {\n      options: { matrix },\n      store,\n    } = this;\n    if (this.sparseArrays) {\n      return this.sparseArrays;\n    }\n    this.sparseArrays = Promise.all(\n      ['indptr', 'indices', 'data'].map(name => openArray({ store, path: `${matrix}/${name}`, mode: 'r' })),\n    );\n    return this.sparseArrays;\n  }\n\n  /**\n   * Class method for loading a gene selection from a CSC matrix.\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Promise} A Promise.all array of promises containing Uint8Arrays, one per selection.\n   */\n  async _loadCSCGeneSelection(selection) {\n    const indices = await this._getGeneIndices(selection);\n    const [indptrArr, indexArr, cellXGeneArr] = await this._openSparseArrays();\n    const numCells = await this._getNumCells();\n    const { data: cols } = await indptrArr.getRaw(null);\n    // If there is not change in the column indexer, then the data is all zeros\n    return Promise.all(\n      indices.map(async (index) => {\n        const startRowIndex = cols[index];\n        const endRowIndex = cols[index + 1];\n        const isColumnAllZeros = startRowIndex === endRowIndex;\n        const geneData = new Float32Array(numCells).fill(0);\n        if (isColumnAllZeros) {\n          return geneData;\n        }\n        const { data: rowIndices } = await indexArr.get([\n          slice(startRowIndex, endRowIndex),\n        ]);\n        const { data: cellXGeneData } = await cellXGeneArr.get([\n          slice(startRowIndex, endRowIndex),\n        ]);\n        for (let rowIndex = 0; rowIndex < rowIndices.length; rowIndex += 1) {\n          geneData[rowIndices[rowIndex]] = cellXGeneData[rowIndex];\n        }\n        return geneData;\n      }),\n    );\n  }\n\n  /**\n   * Class method for loading a gene selection from a CSR matrix.\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Promise} A Promise.all array of promises containing Uint8Arrays, one per selection.\n   */\n  async _loadCSRGeneSelection(selection) {\n    const indices = await this._getGeneIndices(selection);\n    const numGenes = await this._getNumGenes();\n    const numCells = await this._getNumCells();\n    const cellXGene = await this._loadCSRSparseCellXGene();\n    return indices.map((index) => {\n      const geneData = new Float32Array(numCells).fill(0);\n      for (let i = 0; i < numCells; i += 1) {\n        geneData[i] = cellXGene[i * numGenes + index];\n      }\n      return geneData;\n    });\n  }\n\n  /**\n   * Class method for loading row oriented (CSR) sparse data from zarr.\n   * @returns {Object} A { data: Float32Array } contianing the CellXGene matrix.\n   */\n  async _loadCSRSparseCellXGene() {\n    if (this._sparseMatrix) {\n      return this._sparseMatrix;\n    }\n    this._sparseMatrix = this._openSparseArrays().then(async (sparseArrays) => {\n      const {\n        options: { matrix },\n      } = this;\n      const { shape } = await this.getJson(`${matrix}/.zattrs`);\n      const [rows, cols, cellXGene] = await Promise.all(\n        sparseArrays.map(async (arr) => {\n          const { data } = await arr.getRaw(null);\n          return data;\n        }),\n      );\n      const cellXGeneMatrix = new Float32Array(shape[0] * shape[1]).fill(0);\n      let row = 0;\n      rows.forEach((_, index) => {\n        const rowStart = rows[index];\n        const rowEnd = rows[index + 1];\n        for (let i = rowStart; i < rowEnd; i += 1) {\n          const val = cellXGene[i];\n          const col = cols[i];\n          cellXGeneMatrix[row * shape[1] + col] = val;\n        }\n        row += 1;\n      });\n      return cellXGeneMatrix;\n    });\n    return this._sparseMatrix;\n  }\n\n  /**\n   * Class method for loading column oriented (CSC) sparse data from zarr.\n   * @returns {Object} A { data: Float32Array } contianing the CellXGene matrix.\n   */\n  async _loadCSCSparseCellXGene() {\n    if (this._sparseMatrix) {\n      return this._sparseMatrix;\n    }\n    this._sparseMatrix = this._openSparseArrays().then(async (sparseArrays) => {\n      const {\n        options: { matrix },\n      } = this;\n      const { shape } = await this.getJson(`${matrix}/.zattrs`);\n      const [cols, rows, cellXGene] = await Promise.all(\n        sparseArrays.map(async (arr) => {\n          const { data } = await arr.getRaw(null);\n          return data;\n        }),\n      );\n      const cellXGeneMatrix = new Float32Array(shape[0] * shape[1]).fill(0);\n      let col = 0;\n      cols.forEach((_, index) => {\n        const colStart = cols[index];\n        const colEnd = cols[index + 1];\n        for (let i = colStart; i < colEnd; i += 1) {\n          const val = cellXGene[i];\n          const row = rows[i];\n          cellXGeneMatrix[row * shape[1] + col] = val;\n        }\n        col += 1;\n      });\n      return cellXGeneMatrix;\n    });\n    return this._sparseMatrix;\n  }\n\n  /**\n   * Class method for loading the cell x gene matrix.\n   * @returns {Promise} A promise for the zarr array contianing the cell x gene data.\n   */\n  async loadCellXGene() {\n    const { store } = this;\n    if (this.cellXGene) {\n      return this.cellXGene;\n    }\n    const {\n      options: { matrix, matrixGeneFilter },\n    } = this;\n    if (!this._matrixZattrs) {\n      this._matrixZattrs = await this.getJson(`${matrix}/.zattrs`);\n    }\n    const encodingType = this._matrixZattrs['encoding-type'];\n    if (!matrixGeneFilter) {\n      if (encodingType === 'csr_matrix') {\n        this.cellXGene = this._loadCSRSparseCellXGene().then(data => normalize(data));\n      } else if (encodingType === 'csc_matrix') {\n        this.cellXGene = this._loadCSCSparseCellXGene().then(data => normalize(data));\n      } else {\n        if (!this.arr) {\n          this.arr = openArray({ store, path: matrix, mode: 'r' });\n        }\n        this.cellXGene = this.arr.then(z => z.getRaw(null).then(({ data }) => normalize(data)));\n      }\n    } else if (encodingType === 'csr_matrix') {\n      this.cellXGene = this._loadCSRSparseCellXGene().then(\n        async (cellXGene) => {\n          const filteredGenes = await this._getFilteredGenes(matrixGeneFilter);\n          const numGenesFiltered = filteredGenes.length;\n          const geneNames = await this.loadGeneNames();\n          const numGenes = geneNames.length;\n          const numCells = await this._getNumCells();\n          const cellXGeneMatrixFiltered = new Float32Array(\n            numCells * numGenesFiltered,\n          ).fill(0);\n          for (let i = 0; i < numGenesFiltered; i += 1) {\n            const index = geneNames.indexOf(filteredGenes[i]);\n            for (let j = 0; j < numCells; j += 1) {\n              cellXGeneMatrixFiltered[j * numGenesFiltered + i] = cellXGene[j * numGenes + index];\n            }\n          }\n          return normalize(cellXGeneMatrixFiltered);\n        },\n      );\n    } else {\n      const genes = await this._getFilteredGenes(matrixGeneFilter);\n      this.cellXGene = this.loadGeneSelection({ selection: genes, shouldNormalize: false })\n        .then(({ data }) => (normalize(concatenateColumnVectors(data))));\n    }\n    return this.cellXGene;\n  }\n\n  /**\n   * Class method for loading a gene selection.\n   * @param {Object} args\n   * @param {Array} args.selection A list of gene names whose data should be fetched.\n   * @param {Boolean} args.shouldNormalize A list of gene names whose data should be fetched.\n   * @returns {Object} { data } containing an array of gene expression data.\n   */\n  async loadGeneSelection({ selection, shouldNormalize = true }) {\n    const {\n      options: { matrix },\n      store,\n    } = this;\n    if (!this._matrixZattrs) {\n      this._matrixZattrs = await this.getJson(`${matrix}/.zattrs`);\n    }\n    const encodingType = this._matrixZattrs['encoding-type'];\n    let genes;\n    if (encodingType === 'csc_matrix') {\n      genes = await this._loadCSCGeneSelection(selection);\n    } else if (encodingType === 'csr_matrix') {\n      genes = await this._loadCSRGeneSelection(selection);\n    } else {\n      if (!this.arr) {\n        this.arr = openArray({ store, path: matrix, mode: 'r' });\n      }\n      const indices = await this._getGeneIndices(selection);\n      // We can index directly into a normal dense array zarr store via `get`.\n      genes = await Promise.all(\n        indices.map(index => this.arr.then(z => z.get([null, index])).then(({ data }) => data)),\n      );\n    }\n    return { data: genes.map(i => (shouldNormalize ? normalize(i).data : i)), url: null };\n  }\n\n  /**\n   * Class method for loading only attributes i.e rows and columns\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Object} { data: { rows, cols }, url } containing row and col labels for the matrix.\n   */\n  loadAttrs() {\n    return Promise.all([this.loadCellNames(), this.loadGeneNames()]).then(\n      (d) => {\n        const [cellNames, geneNames] = d;\n        const attrs = { rows: cellNames, cols: geneNames };\n        return {\n          data: attrs,\n          url: null,\n        };\n      },\n    );\n  }\n\n  load() {\n    return Promise.all([this.loadAttrs(), this.loadCellXGene()]).then(\n      async (d) => {\n        const [{ data: attrs }, cellXGene] = d;\n        const {\n          options: { matrixGeneFilter: matrixGeneFilterZarr },\n        } = this;\n        // In order to return the correct gene list with the heatmap data,\n        // we need to filter the columns of attrs so it matches the cellXGene data.\n        if (matrixGeneFilterZarr) {\n          const matrixGeneFilter = await this.getFlatArrDecompressed(\n            matrixGeneFilterZarr,\n          );\n          attrs.cols = attrs.cols.filter((_, i) => matrixGeneFilter[i]);\n        }\n        return Promise.resolve(new LoaderResult([attrs, cellXGene], null));\n      },\n    );\n  }\n}\n","import CellSetsZarrLoader from './CellSetsZarrLoader';\nimport CellsZarrLoader from './CellsZarrLoader';\nimport MatrixZarrLoader from './MatrixZarrLoader';\n\nexport default { CellSetsZarrLoader, CellsZarrLoader, MatrixZarrLoader };\n","/* eslint-disable no-control-regex */\nimport {\n  treeInitialize,\n  nodeAppendChild,\n  initializeCellSetColor,\n} from '../../components/sets/cell-set-utils';\nimport {\n  SETS_DATATYPE_CELL,\n} from '../../components/sets/constants';\nimport BaseAnnDataLoader from './BaseAnnDataLoader';\nimport LoaderResult from '../LoaderResult';\n\n/**\n * Loader for converting zarr into the cell sets json schema.\n */\nexport default class CellSetsZarrLoader extends BaseAnnDataLoader {\n  async load() {\n    if (!this.cellSetsTree) {\n      const { options } = this;\n      // eslint-disable-next-line camelcase\n      const cellSetZarrLocation = options.map(({ setName }) => setName);\n      this.cellSetsTree = Promise.all([\n        this.loadCellNames(),\n        this.loadCellSetIds(cellSetZarrLocation),\n      ]).then((data) => {\n        const [cellNames, cellSets] = data;\n        const cellSetsTree = treeInitialize(SETS_DATATYPE_CELL);\n        cellSets.forEach((cellSetIds, j) => {\n          const name = options[j].groupName;\n          let levelZeroNode = {\n            name,\n            children: [],\n          };\n          const uniqueCellSetIds = Array(...new Set(cellSetIds)).sort();\n          const clusters = {};\n          // eslint-disable-next-line no-return-assign\n          uniqueCellSetIds.forEach(id => (clusters[id] = { name: id, set: [] }));\n          cellSetIds.forEach((id, i) => clusters[id].set.push([cellNames[i], null]));\n          Object.values(clusters).forEach(\n            // eslint-disable-next-line no-return-assign\n            cluster => (levelZeroNode = nodeAppendChild(levelZeroNode, cluster)),\n          );\n          cellSetsTree.tree.push(levelZeroNode);\n        });\n        return cellSetsTree;\n      });\n    }\n    const cellSetsTree = await this.cellSetsTree;\n    const coordinationValues = {};\n    const { tree } = cellSetsTree;\n    const newAutoSetSelectionParentName = tree[0].name;\n    // Create a list of set paths to initally select.\n    const newAutoSetSelections = tree[0].children.map(node => [\n      newAutoSetSelectionParentName,\n      node.name,\n    ]);\n    // Create a list of cell set objects with color mappings.\n    const newAutoSetColors = initializeCellSetColor(cellSetsTree, []);\n    coordinationValues.cellSetSelection = newAutoSetSelections;\n    coordinationValues.cellSetColor = newAutoSetColors;\n    return Promise.resolve(\n      new LoaderResult(cellSetsTree, null, coordinationValues),\n    );\n  }\n}\n","import BaseAnnDataLoader from './BaseAnnDataLoader';\nimport LoaderResult from '../LoaderResult';\n\n/**\n * Loader for converting zarr into the cell json schema.\n */\nexport default class CellsZarrLoader extends BaseAnnDataLoader {\n  /**\n   * Class method for loading spatial cell centroids.\n   * @returns {Promise} A promise for an array of tuples/triples for cell centroids.\n   */\n  loadXy() {\n    const { xy } = this.options || {};\n    if (this.xy) {\n      return this.xy;\n    }\n    if (!this.xy && xy) {\n      this.xy = this.loadNumeric(xy);\n      return this.xy;\n    }\n    this.xy = Promise.resolve(null);\n    return this.xy;\n  }\n\n  /**\n   * Class method for loading spatial cell polygons.\n   * @returns {Promise} A promise for an array of arrays for cell polygons.\n   */\n  loadPoly() {\n    const { poly } = (this.options || {});\n    if (this.poly) {\n      return this.poly;\n    }\n    if (!this.poly && poly) {\n      this.poly = this.loadNumeric(poly);\n      return this.poly;\n    }\n    this.poly = Promise.resolve(null);\n    return this.poly;\n  }\n\n  /**\n   * Class method for loading various mappings, like UMAP or tSNE cooridnates.\n   * @returns {Promise} A promise for an array of tuples of coordinates.\n   */\n  loadMappings() {\n    const { mappings } = (this.options || {});\n    if (this.mappings) {\n      return this.mappings;\n    }\n    if (!this.mappings && mappings) {\n      this.mappings = Promise.all(\n        Object.keys(mappings).map(async (coordinationName) => {\n          const { key } = mappings[coordinationName];\n          return { coordinationName, arr: await this.loadNumeric(key) };\n        }),\n      );\n      return this.mappings;\n    }\n    this.mappings = Promise.resolve(null);\n    return this.mappings;\n  }\n\n  /**\n   * Class method for loading factors, which are cell set ids.\n   * @returns {Promise} A promise for an array of an array of strings of ids,\n   * where subarray is a clustering/factor.\n   */\n  loadFactors() {\n    const { factors } = this.options || {};\n    if (factors) {\n      return this.loadCellSetIds(factors);\n    }\n    return Promise.resolve(null);\n  }\n\n  async load() {\n    if (!this.cells) {\n      this.cells = Promise.all([\n        this.loadMappings(),\n        this.loadXy(),\n        this.loadPoly(),\n        this.loadCellNames(),\n        this.loadFactors(),\n      ]).then(([mappings, xy, poly, cellNames, factors]) => {\n        const cells = {};\n        cellNames.forEach((name, i) => {\n          cells[name] = {};\n          if (mappings) {\n            mappings.forEach(({ coordinationName, arr }) => {\n              if (!cells[name].mappings) {\n                cells[name].mappings = {};\n              }\n              const { dims } = this.options.mappings[coordinationName];\n              cells[name].mappings[coordinationName] = dims.map(\n                dim => arr.data[i][dim],\n              );\n            });\n          }\n          if (xy) {\n            cells[name].xy = xy.data[i];\n          }\n          if (poly) {\n            cells[name].poly = poly.data[i];\n          }\n          if (factors) {\n            const factorsObj = {};\n            factors.forEach(\n              // eslint-disable-next-line no-return-assign\n              (factor, j) => (factorsObj[this.options.factors[j].split('/').slice(-1)] = factor[i]),\n            );\n            cells[name].factors = factorsObj;\n          }\n        });\n        return cells;\n      });\n    }\n    return Promise.resolve(new LoaderResult(await this.cells, null));\n  }\n}\n","import { HTTPStore } from 'zarr';\nimport AbstractLoader from './AbstractLoader';\nimport LoaderResult from './LoaderResult';\n\nexport default class GenomicProfilesZarrLoader extends AbstractLoader {\n  constructor(params) {\n    super(params);\n\n    // TODO: Use this.requestInit to provide headers, tokens, etc.\n    // eslint-disable-next-line no-unused-vars\n    const { url, requestInit } = this;\n    this.store = new HTTPStore(url);\n  }\n\n  loadAttrs() {\n    const { store } = this;\n    if (this.attrs) {\n      return this.attrs;\n    }\n    this.attrs = store.getItem('.zattrs')\n      .then((bytes) => {\n        const decoder = new TextDecoder('utf-8');\n        const json = JSON.parse(decoder.decode(bytes));\n        return json;\n      });\n    return this.attrs;\n  }\n\n  load() {\n    const { url } = this;\n    return this.loadAttrs()\n      .then(attrs => Promise.resolve(new LoaderResult(attrs, url)));\n  }\n}\n","import JsonLoader from './JsonLoader';\nimport MatrixZarrLoader from './MatrixZarrLoader';\nimport GenesJsonAsMatrixZarrLoader from './GenesJsonAsMatrixZarrLoader';\nimport ClustersJsonAsMatrixZarrLoader from './ClustersJsonAsMatrixZarrLoader';\nimport RasterJsonLoader from './RasterJsonLoader';\nimport OmeZarrLoader from './OmeZarrLoader';\nimport CellSetsJsonLoader from './CellSetsJsonLoader';\nimport AnnDataLoaders from './anndata-loaders';\nimport GenomicProfilesZarrLoader from './GenomicProfilesZarrLoader';\n\nconst ANNDATA = 'anndata';\n\nexport const fileTypeToLoader = {\n  'expression-matrix.zarr': MatrixZarrLoader,\n  'clusters.json': ClustersJsonAsMatrixZarrLoader,\n  'genes.json': GenesJsonAsMatrixZarrLoader,\n  'cells.json': JsonLoader,\n  'molecules.json': JsonLoader,\n  'neighborhoods.json': JsonLoader,\n  'raster.json': RasterJsonLoader,\n  'raster.ome-zarr': OmeZarrLoader,\n  'cell-sets.json': CellSetsJsonLoader,\n  [`${ANNDATA}-cell-sets.zarr`]: AnnDataLoaders.CellSetsZarrLoader,\n  [`${ANNDATA}-cells.zarr`]: AnnDataLoaders.CellsZarrLoader,\n  [`${ANNDATA}-expression-matrix.zarr`]: AnnDataLoaders.MatrixZarrLoader,\n  'genomic-profiles.zarr': GenomicProfilesZarrLoader,\n};\n","import { useRef, useCallback, useMemo } from 'react';\nimport create from 'zustand';\nimport shallow from 'zustand/shallow';\nimport { fromEntries, capitalize } from '../../utils';\n\n/**\n * The useViewConfigStore hook is initialized via the zustand\n * create() function, which sets up both the state variables\n * and the reducer-type functions.\n * Reference: https://github.com/react-spring/zustand\n * @returns {function} The useStore hook.\n */\nexport const useViewConfigStore = create(set => ({\n  // State:\n  // The viewConfig is an object which must conform to the schema\n  // found in src/schemas/config.schema.json.\n  viewConfig: null,\n  // The loaders object is a mapping from dataset ID to\n  // data type to loader object instance.\n  loaders: null,\n  // Reducer functions which update the state\n  // (although technically also part of state):\n  setViewConfig: viewConfig => set({ viewConfig }),\n  setLoaders: loaders => set({ loaders }),\n  setCoordinationValue: ({ parameter, scope, value }) => set(state => ({\n    viewConfig: {\n      ...state.viewConfig,\n      coordinationSpace: {\n        ...state.viewConfig.coordinationSpace,\n        [parameter]: {\n          ...state.viewConfig.coordinationSpace[parameter],\n          [scope]: value,\n        },\n      },\n    },\n  })),\n  removeComponent: i => set((state) => {\n    const newLayout = state.viewConfig.layout.slice();\n    newLayout.splice(i, 1);\n    return {\n      viewConfig: {\n        ...state.viewConfig,\n        layout: newLayout,\n      },\n    };\n  }),\n  changeLayout: newComponentProps => set((state) => {\n    const newLayout = state.viewConfig.layout.slice();\n    newComponentProps.forEach(([i, newProps]) => {\n      newLayout[i] = {\n        ...newLayout[i],\n        ...newProps,\n      };\n    });\n    return {\n      viewConfig: {\n        ...state.viewConfig,\n        layout: newLayout,\n      },\n    };\n  }),\n}));\n\n/**\n * Hook for getting components' layout from the view config based on\n * matching all coordination scopes.\n * @returns {Object} The components' layout.\n */\nexport const useComponentLayout = (component, scopes, coordinationScopes) => useViewConfigStore(\n  state => state.viewConfig.layout.filter(l => l.component === component).filter(\n    l => scopes.every(scope => l.coordinationScopes[scope]\n          === coordinationScopes[scope]),\n  ),\n);\n\n/**\n * The useAuxiliaryStore hook is initialized via the zustand\n * create() function, which sets up both the state variables\n * and the reducer-type functions.\n * Reference: https://github.com/react-spring/zustand\n * It is meant to be used for non-viewconfig-based coordination between components.\n * For example, as currently happens, the layer controller can coordinate\n * on-load callbacks with spatial view based on whether or not they are\n * coordinated via `spatialRasterLayers` - the callbacks are not part of the view config\n * though so they live here.\n * @returns {function} The useStore hook.\n */\nexport const useAuxiliaryStore = create(set => ({\n  auxiliaryStore: null,\n  setCoordinationValue: ({ parameter, scope, value }) => set(state => ({\n    auxiliaryStore: {\n      ...state.auxiliaryStore,\n      [parameter]: {\n        [scope]: value,\n      },\n    },\n  })),\n}));\n\n/**\n * The hover store can be used to store global state\n * related to which component is currently hovered,\n * which is required for tooltip / crossover elements.\n * @returns {function} The useStore hook.\n */\nconst useHoverStore = create(set => ({\n  // Components may need to know if they are the \"hover source\"\n  // for tooltip interactions. This value should be a unique\n  // component ID, such as its index in the view config layout.\n  componentHover: null,\n  setComponentHover: componentHover => set({ componentHover }),\n}));\n\n/**\n * The warning store can be used to store global state\n * related to app warning messages.\n * @returns {function} The useStore hook.\n */\nconst useWarnStore = create(set => ({\n  // Want a global state to collect warning messages\n  // that occur anywhere in the app.\n  warning: null,\n  setWarning: warning => set({ warning }),\n}));\n\n/**\n * The view info store can be used to store component-level\n * viewInfo objects,\n * which are required for tooltip / crossover elements.\n * @returns {function} The useStore hook.\n */\nconst useViewInfoStore = create(set => ({\n  // The viewInfo object is a mapping from\n  // component IDs to component view info objects.\n  // Each view info object must have a project() function.\n  viewInfo: {},\n  setComponentViewInfo: (uuid, viewInfo) => set(state => ({\n    viewInfo: {\n      ...state.viewInfo,\n      [uuid]: viewInfo,\n    },\n  })),\n}));\n\n/**\n * The grid size store can be used to store a\n * counter which updates on each window or react-grid-layout\n * resize event.\n * @returns {function} The useStore hook.\n */\nconst useGridSizeStore = create(set => ({\n  resizeCount: {},\n  incrementResizeCount: () => set(state => ({\n    resizeCount: state.resizeCount + 1,\n  })),\n}));\n\n/**\n * The useCoordination hook returns both the\n * values and setter functions for the coordination objects\n * in a particular coordination scope mapping.\n * This hook is intended to be used within the ___Subscriber\n * components to allow them to \"hook into\" only those coordination\n * objects and setter functions of relevance.\n * @param {string[]} parameters Array of coordination types.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {array} Returns a tuple [values, setters]\n * where values is an object containing all coordination values,\n * and setters is an object containing all coordination setter\n * functions for the values in `values`, named with a \"set\"\n * prefix.\n */\nexport function useCoordination(parameters, coordinationScopes) {\n  const setCoordinationValue = useViewConfigStore(state => state.setCoordinationValue);\n\n  const values = useViewConfigStore((state) => {\n    const { coordinationSpace } = state.viewConfig;\n    return fromEntries(parameters.map((parameter) => {\n      if (coordinationSpace && coordinationSpace[parameter]) {\n        const value = coordinationSpace[parameter][coordinationScopes[parameter]];\n        return [parameter, value];\n      }\n      return [parameter, undefined];\n    }));\n  }, shallow);\n\n  const setters = useMemo(() => fromEntries(parameters.map((parameter) => {\n    const setterName = `set${capitalize(parameter)}`;\n    const setterFunc = value => setCoordinationValue({\n      parameter,\n      scope: coordinationScopes[parameter],\n      value,\n    });\n    return [setterName, setterFunc];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  })), [parameters, coordinationScopes]);\n\n  return [values, setters];\n}\n\nconst AUXILIARY_COORDINATION_TYPES_MAP = {\n  spatialRasterLayers: ['rasterLayersCallbacks', 'areLoadingRasterChannnels'],\n};\n\n/**\n * The maps the coordination types of incoming scopes to new types\n * for the auxiliary store.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {object} Mapping of coordination types\n * to new scope names for the auxiliary store.\n */\nconst mapCoordinationScopes = (coordinationScopes) => {\n  const newCoordinationScopes = {};\n  Object.keys(coordinationScopes).forEach((key) => {\n    const newCoordinationTypes = AUXILIARY_COORDINATION_TYPES_MAP[key] || [];\n    newCoordinationTypes.forEach((coordinationType) => {\n      newCoordinationScopes[coordinationType || key] = coordinationScopes[key];\n    });\n  });\n  return newCoordinationScopes;\n};\n\nconst mapParameters = parameters => parameters\n  .map(parameter => AUXILIARY_COORDINATION_TYPES_MAP[parameter]).filter(Boolean).flat();\n\n/**\n * The useAuxiliaryCoordination hook returns both the\n * values and setter functions for the auxiliary coordination objects\n * in a particular coordination scope mapping.\n * This hook is intended to be used within the ___Subscriber\n * components to allow them to \"hook into\" only those auxiliary coordination\n * objects and setter functions of relevance, for example \"on load\" callbacks.\n * @param {string[]} parameters Array of coordination types.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {array} Returns a tuple [values, setters]\n * where values is an object containing all coordination values,\n * and setters is an object containing all coordination setter\n * functions for the values in `values`, named with a \"set\"\n * prefix.\n */\nexport function useAuxiliaryCoordination(parameters, coordinationScopes) {\n  const setCoordinationValue = useAuxiliaryStore(state => state.setCoordinationValue);\n  const mappedCoordinationScopes = mapCoordinationScopes(coordinationScopes);\n  const mappedParameters = mapParameters(parameters);\n  const values = useAuxiliaryStore((state) => {\n    const { auxiliaryStore } = state;\n    return fromEntries(mappedParameters.map((parameter) => {\n      if (auxiliaryStore && auxiliaryStore[parameter]) {\n        const value = auxiliaryStore[parameter][mappedCoordinationScopes[parameter]];\n        return [parameter, value];\n      }\n      return [parameter, undefined];\n    }));\n  }, shallow);\n  const setters = useMemo(() => fromEntries(mappedParameters.map((parameter) => {\n    const setterName = `set${capitalize(parameter)}`;\n    const setterFunc = value => setCoordinationValue({\n      parameter,\n      scope: mappedCoordinationScopes[parameter],\n      value,\n    });\n    return [setterName, setterFunc];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  })), [parameters, coordinationScopes]);\n\n  return [values, setters];\n}\n\n/**\n * Obtain the loaders object from\n * the global app state.\n * @returns {object} The loaders object\n * in the `useViewConfigStore` store.\n */\nexport function useLoaders() {\n  return useViewConfigStore(state => state.loaders);\n}\n\n/**\n * Obtain the view config layout array from\n * the global app state.\n * @returns {object[]} The layout array\n * in the `useViewConfigStore` store.\n */\nexport function useLayout() {\n  return useViewConfigStore(state => state.viewConfig?.layout);\n}\n\n/**\n * Obtain the component removal function from\n * the global app state.\n * @returns {function} The remove component function\n * in the `useViewInfoStore` store.\n */\nexport function useRemoveComponent() {\n  return useViewConfigStore(state => state.removeComponent);\n}\n\n/**\n * Obtain the component prop setter function from\n * the global app state.\n * @returns {function} The set component props function\n * in the `useViewInfoStore` store.\n */\nexport function useChangeLayout() {\n  return useViewConfigStore(state => state.changeLayout);\n}\n\n/**\n * Obtain the loaders setter function from\n * the global app state.\n * @returns {function} The loaders setter function\n * in the `useViewConfigStore` store.\n */\nexport function useSetLoaders() {\n  return useViewConfigStore(state => state.setLoaders);\n}\n\n/**\n * Obtain the view config setter function from\n * the global app state.\n * @returns {function} The view config setter function\n * in the `useViewConfigStore` store.\n */\nexport function useSetViewConfig() {\n  const setViewConfigRef = useRef(useViewConfigStore.getState().setViewConfig);\n  const setViewConfig = setViewConfigRef.current;\n  return setViewConfig;\n}\n\n/**\n * Obtain the component hover value from\n * the global app state.\n * @returns {number} The hovered component ID\n * in the `useHoverStore` store.\n */\nexport function useComponentHover() {\n  return useHoverStore(state => state.componentHover);\n}\n\n/**\n * Obtain the component hover setter function from\n * the global app state.\n * @returns {function} The component hover setter function\n * in the `useHoverStore` store.\n */\nexport function useSetComponentHover() {\n  return useHoverStore(state => state.setComponentHover);\n}\n\n/**\n * Obtain the warning message from\n * the global app state.\n * @returns {string} The warning message\n * in the `useWarnStore` store.\n */\nexport function useWarning() {\n  return useWarnStore(state => state.warning);\n}\n\n/**\n * Obtain the warning setter function from\n * the global app state.\n * @returns {function} The warning setter function\n * in the `useWarnStore` store.\n */\nexport function useSetWarning() {\n  return useWarnStore(state => state.setWarning);\n}\n\n/**\n * Obtain the component view info value from\n * the global app state.\n * @returns {object} The view info object for the component\n * in the `useViewInfoStore` store.\n */\nexport function useComponentViewInfo(uuid) {\n  return useViewInfoStore(useCallback(state => state.viewInfo[uuid], [uuid]));\n}\n\n/**\n * Obtain the component view info setter function from\n * the global app state.\n * @returns {function} The component view info setter function\n * in the `useViewInfoStore` store.\n */\nexport function useSetComponentViewInfo(uuid) {\n  const setViewInfoRef = useRef(useViewInfoStore.getState().setComponentViewInfo);\n  const setComponentViewInfo = viewInfo => setViewInfoRef.current(uuid, viewInfo);\n  return setComponentViewInfo;\n}\n\n/**\n * Obtain the grid resize count value\n * from the global app state.\n * @returns {number} The grid resize increment value.\n */\nexport function useGridResize() {\n  return useGridSizeStore(state => state.resizeCount);\n}\n\n/**\n * Obtain the grid resize count increment function\n * from the global app state.\n * @returns {function} The grid resize count increment\n * function.\n */\nexport function useEmitGridResize() {\n  return useGridSizeStore(state => state.incrementResizeCount);\n}\n","import React, {\n  useEffect,\n} from 'react';\nimport { VitessceGridLayout } from './vitessce-grid-layout';\nimport { useRowHeight, createLoaders } from './vitessce-grid-utils';\nimport {\n  useSetViewConfig,\n  useSetLoaders,\n  useEmitGridResize,\n  useRemoveComponent,\n  useChangeLayout,\n  useLayout,\n} from './state/hooks';\n\nconst padding = 10;\nconst margin = 5;\n\n/**\n * The wrapper for the VitessceGrid and LoadingIndicator components.\n * @param {object} props\n * @param {number} props.rowHeight The height of each grid row. Optional.\n * @param {object} props.config The view config.\n * @param {function} props.getComponent A function that maps component names to their\n * React counterparts.\n * @param {string} props.theme The theme name.\n * @param {number} props.height Total height for grid. Optional.\n * @param {function} props.onWarn A callback for warning messages. Optional.\n */\nexport default function VitessceGrid(props) {\n  const {\n    rowHeight: initialRowHeight,\n    config,\n    getComponent,\n    theme,\n    height,\n  } = props;\n\n  const [rowHeight, containerRef] = useRowHeight(config, initialRowHeight, height, margin, padding);\n  const onResize = useEmitGridResize();\n\n  // When the row height has changed, publish a GRID_RESIZE event.\n  useEffect(() => {\n    onResize();\n  }, [rowHeight, onResize]);\n\n  const setViewConfig = useSetViewConfig();\n  const setLoaders = useSetLoaders();\n  const removeComponent = useRemoveComponent();\n  const changeLayout = useChangeLayout();\n  const layout = useLayout();\n\n  // Update the view config and loaders in the global state.\n  useEffect(() => {\n    if (config) {\n      setViewConfig(config);\n      const loaders = createLoaders(config.datasets, config.description);\n      setLoaders(loaders);\n    } else {\n      // No config found, so clear the loaders.\n      setLoaders({});\n    }\n  }, [config, setViewConfig, setLoaders]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={`vitessce-container vitessce-theme-${theme}`}\n    >\n      {layout && (\n        <VitessceGridLayout\n          layout={layout}\n          height={height}\n          rowHeight={rowHeight}\n          theme={theme}\n          getComponent={getComponent}\n          draggableHandle=\".title\"\n          margin={margin}\n          padding={padding}\n          onRemoveComponent={removeComponent}\n          onLayoutChange={changeLayout}\n          reactGridLayoutProps={{\n            onResize,\n            onResizeStop: onResize,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import {\n  useState, useEffect, useRef,\n} from 'react';\nimport { fileTypeToLoader } from '../loaders/types';\nimport JsonLoader from '../loaders/JsonLoader';\n\n/**\n * Return the bottom coordinate of the layout.\n * https://github.com/STRML/react-grid-layout/blob/20dac73f91274526034c00968b5bedb9c2ed36b9/lib/utils.js#L82\n * @param  {array} layout react-grid-layout layout array.\n * @returns {number} Bottom coordinate.\n */\nfunction getNumRows(layout) {\n  let max = 0;\n  let bottomY;\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\n/**\n * Compute the row height based on the container height, number of rows,\n * and margin/padding. Basically the reverse of the react-grid-layout's\n * `.containerHeight()` function.\n * https://github.com/STRML/react-grid-layout/blob/83251e5e682abfa3252ff89d4bacf47fdc1f4270/lib/ReactGridLayout.jsx#L223\n * @param {number} containerHeight The height of the .vitessce-container element.\n * @param {number} numRows The number of rows in the layout.\n * @param {number} margin The margin value that will be passed to VitessceGrid.\n * @param {number} padding The padding value that will be passed to VitessceGrid.\n * @returns {number} The new row height value.\n */\nfunction getRowHeight(containerHeight, numRows, margin, padding) {\n  const effectiveContainerHeight = containerHeight - 2 * padding - (numRows - 1) * margin;\n  return effectiveContainerHeight / numRows;\n}\n\nexport function useRowHeight(config, initialRowHeight, height, margin, padding) {\n  const [containerHeight, setContainerHeight] = useState(height);\n  const [rowHeight, setRowHeight] = useState(initialRowHeight);\n  const containerRef = useRef();\n\n  // Detect when the `config` or `containerHeight` variables\n  // have changed, and update `rowHeight` in response.\n  useEffect(() => {\n    const numRows = getNumRows(config.layout);\n    const newRowHeight = getRowHeight(containerHeight, numRows, margin, padding);\n    setRowHeight(newRowHeight);\n  }, [containerHeight, config, margin, padding]);\n\n  // Update the `containerHeight` state when the `height` prop has changed.\n  useEffect(() => {\n    if (height !== null && height !== undefined) {\n      setContainerHeight(height);\n    }\n  }, [height]);\n\n  // If no height prop has been provided, set the `containerHeight`\n  // using height of the `.vitessce-container` element.\n  // Check the container element height whenever the window has been\n  // resized, as it may change if `.vitessce-container` should be\n  // sized relative to its parent (and by extension, potentially the window).\n  useEffect(() => {\n    if (height !== null && height !== undefined) {\n      // eslint will complain if the return value is inconsistent,\n      // so return a no-op function.\n      return () => {};\n    }\n    function onWindowResize() {\n      if (!containerRef.current) return;\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setContainerHeight(containerRect.height);\n    }\n    window.addEventListener('resize', onWindowResize);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n    };\n  }, [containerRef, height]);\n\n\n  return [rowHeight, containerRef];\n}\n\n/**\n * Create a mapping from dataset ID to loader objects by data type.\n * @param {object[]} datasets The datasets array from the view config.\n * @param {string} configDescription The top-level description in the\n * view config.\n * @returns {object} Mapping from dataset ID to data type to loader\n * instance.\n */\nexport function createLoaders(datasets, configDescription) {\n  const result = {};\n  datasets.forEach((dataset) => {\n    const datasetLoaders = {\n      name: dataset.name,\n      description: dataset.description || configDescription,\n      loaders: {},\n    };\n    dataset.files.forEach((file) => {\n      // Fall back to JsonLoader if a loader is not found for the file type.\n      const matchingLoaderClass = fileTypeToLoader[file.fileType] || JsonLoader;\n      // eslint-disable-next-line new-cap\n      datasetLoaders.loaders[file.type] = new matchingLoaderClass(file);\n    });\n    result[dataset.uid] = datasetLoaders;\n  });\n  return result;\n}\n","/**\n * Constants representing names of coordination types,\n * to help prevent typos.\n */\nexport const COORDINATION_TYPES = {\n  DATASET: 'dataset',\n  EMBEDDING_TYPE: 'embeddingType',\n  EMBEDDING_ZOOM: 'embeddingZoom',\n  EMBEDDING_ROTATION: 'embeddingRotation',\n  EMBEDDING_TARGET_X: 'embeddingTargetX',\n  EMBEDDING_TARGET_Y: 'embeddingTargetY',\n  EMBEDDING_TARGET_Z: 'embeddingTargetZ',\n  EMBEDDING_CELL_SET_POLYGONS_VISIBLE: 'embeddingCellSetPolygonsVisible',\n  EMBEDDING_CELL_SET_LABELS_VISIBLE: 'embeddingCellSetLabelsVisible',\n  EMBEDDING_CELL_SET_LABEL_SIZE: 'embeddingCellSetLabelSize',\n  EMBEDDING_CELL_RADIUS: 'embeddingCellRadius',\n  SPATIAL_ZOOM: 'spatialZoom',\n  SPATIAL_ROTATION: 'spatialRotation',\n  SPATIAL_TARGET_X: 'spatialTargetX',\n  SPATIAL_TARGET_Y: 'spatialTargetY',\n  SPATIAL_TARGET_Z: 'spatialTargetZ',\n  SPATIAL_ROTATION_X: 'spatialRotationX',\n  SPATIAL_ROTATION_Y: 'spatialRotationY',\n  SPATIAL_ROTATION_Z: 'spatialRotationZ',\n  SPATIAL_ROTATION_ORBIT: 'spatialRotationOrbit',\n  SPATIAL_ORBIT_AXIS: 'spatialOrbitAxis',\n  SPATIAL_AXIS_FIXED: 'spatialAxisFixed',\n  HEATMAP_ZOOM_X: 'heatmapZoomX',\n  HEATMAP_ZOOM_Y: 'heatmapZoomY',\n  HEATMAP_TARGET_X: 'heatmapTargetX',\n  HEATMAP_TARGET_Y: 'heatmapTargetY',\n  CELL_FILTER: 'cellFilter',\n  CELL_HIGHLIGHT: 'cellHighlight',\n  CELL_SET_SELECTION: 'cellSetSelection',\n  CELL_SET_HIGHLIGHT: 'cellSetHighlight',\n  CELL_SET_COLOR: 'cellSetColor',\n  GENE_FILTER: 'geneFilter',\n  GENE_HIGHLIGHT: 'geneHighlight',\n  GENE_SELECTION: 'geneSelection',\n  GENE_EXPRESSION_COLORMAP: 'geneExpressionColormap',\n  GENE_EXPRESSION_TRANSFORM: 'geneExpressionTransform',\n  GENE_EXPRESSION_COLORMAP_RANGE: 'geneExpressionColormapRange',\n  CELL_COLOR_ENCODING: 'cellColorEncoding',\n  SPATIAL_RASTER_LAYERS: 'spatialRasterLayers',\n  SPATIAL_CELLS_LAYER: 'spatialCellsLayer',\n  SPATIAL_MOLECULES_LAYER: 'spatialMoleculesLayer',\n  SPATIAL_NEIGHBORHOODS_LAYER: 'spatialNeighborhoodsLayer',\n  GENOMIC_ZOOM_X: 'genomicZoomX',\n  GENOMIC_ZOOM_Y: 'genomicZoomY',\n  GENOMIC_TARGET_X: 'genomicTargetX',\n  GENOMIC_TARGET_Y: 'genomicTargetY',\n  ADDITIONAL_CELL_SETS: 'additionalCellSets',\n  MOLECULE_HIGHLIGHT: 'moleculeHighlight',\n};\n\n/**\n * Coordination types may have default values,\n * which can be defined here, and used by the\n * auto initialization strategy.\n */\nexport const DEFAULT_COORDINATION_VALUES = {\n  [COORDINATION_TYPES.EMBEDDING_ZOOM]: null,\n  [COORDINATION_TYPES.EMBEDDING_ROTATION]: 0,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_X]: null,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_Y]: null,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_Z]: 0,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE]: false,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE]: false,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE]: 14,\n  [COORDINATION_TYPES.EMBEDDING_CELL_RADIUS]: 1,\n  [COORDINATION_TYPES.SPATIAL_ZOOM]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION]: 0,\n  [COORDINATION_TYPES.SPATIAL_TARGET_X]: null,\n  [COORDINATION_TYPES.SPATIAL_TARGET_Y]: null,\n  [COORDINATION_TYPES.SPATIAL_TARGET_Z]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_X]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_Y]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_Z]: null,\n  [COORDINATION_TYPES.SPATIAL_AXIS_FIXED]: false,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT]: 0,\n  [COORDINATION_TYPES.SPATIAL_ORBIT_AXIS]: 'Y',\n  [COORDINATION_TYPES.SPATIAL_RASTER_LAYERS]: null,\n  [COORDINATION_TYPES.SPATIAL_CELLS_LAYER]: null,\n  [COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER]: null,\n  [COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER]: null,\n  [COORDINATION_TYPES.HEATMAP_ZOOM_X]: 0,\n  [COORDINATION_TYPES.HEATMAP_ZOOM_Y]: 0,\n  [COORDINATION_TYPES.HEATMAP_TARGET_X]: 0,\n  [COORDINATION_TYPES.HEATMAP_TARGET_Y]: 0,\n  [COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP]: 'plasma',\n  [COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE]: [0.0, 1.0],\n  [COORDINATION_TYPES.GENE_EXPRESSION_TRANSFORM]: null,\n  [COORDINATION_TYPES.GENE_FILTER]: null,\n  [COORDINATION_TYPES.GENE_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.GENE_SELECTION]: null,\n  [COORDINATION_TYPES.CELL_FILTER]: null,\n  [COORDINATION_TYPES.CELL_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.CELL_SET_SELECTION]: null,\n  [COORDINATION_TYPES.CELL_SET_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.CELL_SET_COLOR]: null,\n  [COORDINATION_TYPES.CELL_COLOR_ENCODING]: 'cellSetSelection',\n  [COORDINATION_TYPES.GENOMIC_ZOOM_X]: 0,\n  [COORDINATION_TYPES.GENOMIC_ZOOM_Y]: 0,\n  [COORDINATION_TYPES.GENOMIC_TARGET_X]: 1549999999.5,\n  [COORDINATION_TYPES.GENOMIC_TARGET_Y]: 1549999999.5,\n  [COORDINATION_TYPES.ADDITIONAL_CELL_SETS]: null,\n  [COORDINATION_TYPES.MOLECULE_HIGHLIGHT]: null,\n};\n\n// The following coordination types should be\n// initialized to independent scopes when\n// initialized automatically.\n// These make the resulting view config\n// (after auto-initialization) behave\n// like \"legacy\" Vitessce (pre-coordination model).\nexport const AUTO_INDEPENDENT_COORDINATION_TYPES = [\n  COORDINATION_TYPES.HEATMAP_ZOOM_X,\n  COORDINATION_TYPES.HEATMAP_ZOOM_Y,\n  COORDINATION_TYPES.HEATMAP_TARGET_X,\n  COORDINATION_TYPES.HEATMAP_TARGET_Y,\n  COORDINATION_TYPES.EMBEDDING_ZOOM,\n  COORDINATION_TYPES.EMBEDDING_TARGET_X,\n  COORDINATION_TYPES.EMBEDDING_TARGET_Y,\n  COORDINATION_TYPES.EMBEDDING_TARGET_Z,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE,\n  COORDINATION_TYPES.EMBEDDING_CELL_RADIUS,\n];\n\n/**\n   * Mapping from component type to\n   * supported coordination object types.\n   * This mapping can be used to determine\n   * which pieces of state that a component will\n   * need to get/set.\n   * Keys here are the component registry keys.\n   */\nexport const COMPONENT_COORDINATION_TYPES = {\n  scatterplot: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.EMBEDDING_TYPE,\n    COORDINATION_TYPES.EMBEDDING_ZOOM,\n    COORDINATION_TYPES.EMBEDDING_ROTATION,\n    COORDINATION_TYPES.EMBEDDING_TARGET_X,\n    COORDINATION_TYPES.EMBEDDING_TARGET_Y,\n    COORDINATION_TYPES.EMBEDDING_TARGET_Z,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE,\n    COORDINATION_TYPES.EMBEDDING_CELL_RADIUS,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  spatial: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_ZOOM,\n    COORDINATION_TYPES.SPATIAL_ROTATION,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n    COORDINATION_TYPES.SPATIAL_CELLS_LAYER,\n    COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER,\n    COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER,\n    COORDINATION_TYPES.SPATIAL_TARGET_X,\n    COORDINATION_TYPES.SPATIAL_TARGET_Y,\n    COORDINATION_TYPES.SPATIAL_TARGET_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_X,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Y,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT,\n    COORDINATION_TYPES.SPATIAL_ORBIT_AXIS,\n    COORDINATION_TYPES.SPATIAL_AXIS_FIXED,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n    COORDINATION_TYPES.MOLECULE_HIGHLIGHT,\n  ],\n  heatmap: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.HEATMAP_ZOOM_X,\n    COORDINATION_TYPES.HEATMAP_ZOOM_Y,\n    COORDINATION_TYPES.HEATMAP_TARGET_X,\n    COORDINATION_TYPES.HEATMAP_TARGET_Y,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSets: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSetSizes: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSetExpression: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_TRANSFORM,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  status: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.MOLECULE_HIGHLIGHT,\n  ],\n  genes: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n  ],\n  expressionHistogram: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_SELECTION,\n  ],\n  layerController: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n    COORDINATION_TYPES.SPATIAL_CELLS_LAYER,\n    COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER,\n    COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER,\n    COORDINATION_TYPES.SPATIAL_ZOOM,\n    COORDINATION_TYPES.SPATIAL_TARGET_X,\n    COORDINATION_TYPES.SPATIAL_TARGET_Y,\n    COORDINATION_TYPES.SPATIAL_TARGET_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_X,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Y,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT,\n    COORDINATION_TYPES.SPATIAL_ORBIT_AXIS,\n  ],\n  higlass: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENOMIC_ZOOM_X,\n    COORDINATION_TYPES.GENOMIC_ZOOM_Y,\n    COORDINATION_TYPES.GENOMIC_TARGET_X,\n    COORDINATION_TYPES.GENOMIC_TARGET_Y,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n  ],\n  genomicProfiles: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENOMIC_ZOOM_X,\n    COORDINATION_TYPES.GENOMIC_ZOOM_Y,\n    COORDINATION_TYPES.GENOMIC_TARGET_X,\n    COORDINATION_TYPES.GENOMIC_TARGET_Y,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  description: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n  ],\n};\n","/* eslint-disable camelcase */\nimport uuidv4 from 'uuid/v4';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { getNextScope, capitalize } from '../utils';\nimport {\n  COMPONENT_COORDINATION_TYPES,\n} from './state/coordination';\n\n/**\n * A helper function for the `upgrade()` function,\n * which helps convert `props.view` (for scatterplot and spatial),\n * into new coordination scopes, setting their values\n * in the coordination space and returning the new scope mappings.\n * This function does mutate the `coordinationSpace` parameter.\n * @param {string} prefix The coordination type prefix,\n * either 'embedding' or 'spatial'.\n * @param {object} view The view prop object containing\n * the properties `.target` and `.zoom`.\n * @param {object} coordinationSpace The coordination space.\n * @returns {object} The new coordination scope names.\n */\nfunction upgradeReplaceViewProp(prefix, view, coordinationSpace) {\n  const prevZScopes = Object.keys(coordinationSpace[`${prefix}Zoom`]);\n  const prevTXScopes = Object.keys(coordinationSpace[`${prefix}TargetX`]);\n  const prevTYScopes = Object.keys(coordinationSpace[`${prefix}TargetY`]);\n\n  const nextZScope = getNextScope(prevZScopes);\n  const nextTXScope = getNextScope(prevTXScopes);\n  const nextTYScope = getNextScope(prevTYScopes);\n\n  const { zoom, target: [targetX, targetY] } = view;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}Zoom`][nextZScope] = zoom;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}TargetX`][nextTXScope] = targetX;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}TargetY`][nextTYScope] = targetY;\n  return {\n    [`${prefix}Zoom`]: nextZScope,\n    [`${prefix}TargetX`]: nextTXScope,\n    [`${prefix}TargetY`]: nextTYScope,\n  };\n}\n\n/**\n * Convert an older view config to a newer view config.\n * @param {object} config A v0.1.0 \"legacy\" view config.\n * @returns {object} A v1.0.0 \"upgraded\" view config.\n */\nexport function upgradeFrom0_1_0(config, datasetUid = null) {\n  const coordinationSpace = {\n    embeddingType: {},\n    embeddingZoom: {},\n    embeddingTargetX: {},\n    embeddingTargetY: {},\n    spatialZoom: {},\n    spatialTargetX: {},\n    spatialTargetY: {},\n  };\n\n  const layout = [];\n  config.staticLayout.forEach((componentDef) => {\n    let newComponentDef = {\n      ...componentDef,\n      coordinationScopes: {},\n    };\n    if (componentDef.component === 'scatterplot') {\n      // Need to set up the coordinationSpace\n      // with embeddingType to replace scatterplot\n      // component prop \"mapping\".\n      if (componentDef.props.mapping) {\n        coordinationSpace.embeddingType[componentDef.props.mapping] = componentDef.props.mapping;\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            embeddingType: componentDef.props.mapping,\n          },\n        };\n      }\n      // Need to set up the coordinationSpace\n      // with embeddingZoom / embeddingTargetX/Y to replace scatterplot\n      // component prop \"view\" ({ zoom, target }).\n      if (componentDef.props.view) {\n        // Note that the below function does mutate the coordinationSpace param.\n        const newScopeValues = upgradeReplaceViewProp(\n          'embedding', componentDef.props.view, coordinationSpace,\n        );\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            ...newScopeValues,\n          },\n        };\n      }\n    }\n    if (componentDef.component === 'spatial') {\n      // Need to set up the coordinationSpace\n      // with spatialZoom / spatialTargetX/Y to replace spatial\n      // component prop \"view\" ({ zoom, target }).\n      if (componentDef?.props?.view) {\n        // Note that the below function does mutate the coordinationSpace param.\n        const newScopeValues = upgradeReplaceViewProp(\n          'spatial', componentDef.props.view, coordinationSpace,\n        );\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            ...newScopeValues,\n          },\n        };\n      }\n    }\n    layout.push(newComponentDef);\n  });\n\n  // Use a random dataset ID when initializing automatically,\n  // so that it changes with each new v0.1.0 view config.\n  // However, check if the `datasetUid` parameter was passed,\n  // which allows for unit testing.\n  const newDatasetUid = datasetUid || uuidv4();\n\n  return {\n    version: '1.0.1',\n    name: config.name,\n    description: config.description,\n    public: config.public,\n    datasets: [\n      {\n        uid: newDatasetUid,\n        name: newDatasetUid,\n        files: config.layers.map(layer => ({\n          type: layer.type.toLowerCase(),\n          fileType: layer.fileType,\n          url: layer.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace,\n    layout,\n  };\n}\n\nexport function upgradeFrom1_0_0(config) {\n  const coordinationSpace = { ...config.coordinationSpace };\n\n  function replaceLayerType(layerType) {\n    // Layer type could be one of a few things, bitmask or raster at the moment.\n    const isRaster = layerType === 'raster';\n    coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`] = {};\n    Object.entries(coordinationSpace.spatialLayers).forEach(([scope, layers]) => {\n      if (Array.isArray(layers) && layers.find(layer => layer.type === layerType)) {\n        const typedLayers = layers\n          .filter(layer => layer.type === layerType)\n          .map((layer) => {\n            const newLayer = { ...layer };\n            delete newLayer.type;\n            return newLayer;\n          });\n        coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`][scope] = isRaster ? typedLayers : typedLayers[0];\n      } else {\n        coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`][scope] = null;\n      }\n    });\n  }\n\n  if (coordinationSpace.spatialLayers) {\n    replaceLayerType('raster');\n    replaceLayerType('cells');\n    replaceLayerType('molecules');\n    replaceLayerType('neighborhoods');\n    delete coordinationSpace.spatialLayers;\n  }\n\n  const layout = config.layout.map((component) => {\n    const newComponent = { ...component };\n\n    function replaceCoordinationScope(layerType) {\n      const isRaster = layerType === 'raster';\n      if (COMPONENT_COORDINATION_TYPES[newComponent.component].includes(`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`)) {\n        newComponent.coordinationScopes[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`] = newComponent.coordinationScopes.spatialLayers;\n      }\n    }\n\n    if (newComponent.coordinationScopes && newComponent.coordinationScopes.spatialLayers) {\n      replaceCoordinationScope('raster');\n      replaceCoordinationScope('cells');\n      replaceCoordinationScope('molecules');\n      replaceCoordinationScope('neighborhoods');\n      delete newComponent.coordinationScopes.spatialLayers;\n    }\n    return newComponent;\n  });\n\n  return {\n    ...config,\n    coordinationSpace,\n    layout,\n    version: '1.0.1',\n  };\n}\n\n\nexport function upgradeFrom1_0_1(config) {\n  // Need to add the globalDisable3d prop to any layer controller views,\n  // to match the previous lack of 3D auto-detection behavior.\n\n  const layout = config.layout.map((component) => {\n    const newComponent = { ...component };\n    if (newComponent.component === 'layerController') {\n      newComponent.props = {\n        ...newComponent.props,\n        globalDisable3d: true,\n      };\n    }\n    return newComponent;\n  });\n\n  // Enforce bitmask or raster as spatial raster layer type, defaulting\n  // to raster layer if it is not one of bitmask or raster from the old config.\n\n  const newConfig = cloneDeep(config);\n  Object.keys((newConfig?.coordinationSpace?.spatialRasterLayers || {})).forEach((key) => {\n    if (newConfig.coordinationSpace.spatialRasterLayers[key]) {\n      newConfig.coordinationSpace.spatialRasterLayers[key].forEach((layer, index) => {\n        newConfig.coordinationSpace.spatialRasterLayers[key][index].type = ['bitmask', 'raster'].includes(layer.type) ? layer.type : 'raster';\n      });\n    }\n  });\n\n  return {\n    ...newConfig,\n    layout,\n    version: '1.0.2',\n  };\n}\n","/* eslint-disable camelcase */\nimport Ajv from 'ajv';\nimport configSchema0_1_0 from '../schemas/config-0.1.0.schema.json';\nimport configSchema1_0_0 from '../schemas/config-1.0.0.schema.json';\nimport configSchema1_0_1 from '../schemas/config-1.0.1.schema.json';\nimport configSchema1_0_2 from '../schemas/config-1.0.2.schema.json';\n\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport {\n  upgradeFrom0_1_0,\n  upgradeFrom1_0_0,\n  upgradeFrom1_0_1,\n} from './view-config-upgraders';\n\n/**\n * Mapping from view config versions to view config schemas and upgrade functions.\n * Add a new schema and upgrade function here when bumping the view config version.\n * The latest view config version should always have a null value instead of an upgrade function.\n */\nexport const LATEST_VERSION = '1.0.2';\nexport const SCHEMA_HANDLERS = {\n  '0.1.0': [new Ajv().compile(configSchema0_1_0), upgradeFrom0_1_0],\n  '1.0.0': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_0), upgradeFrom1_0_0],\n  '1.0.1': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_1), upgradeFrom1_0_1],\n  '1.0.2': [new Ajv().addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_2), null],\n};\n","import { useEffect } from 'react';\nimport { SCHEMA_HANDLERS, LATEST_VERSION } from './view-config-versions';\nimport { useViewConfigStore, useLoaders, useWarning } from './state/hooks';\n\nfunction validateViewConfig(viewConfig) {\n  // Need the try-catch here since Zustand will actually\n  // just catch and ignore errors in its subscription callbacks.\n  try {\n    const validate = SCHEMA_HANDLERS[LATEST_VERSION][0];\n    const valid = validate(viewConfig);\n    if (!valid) {\n      const failureReason = JSON.stringify(validate.errors, null, 2);\n      throw new Error(`Config validation failed: ${failureReason}`);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  // Do nothing if successful.\n}\n\n/**\n * This is a dummy component which handles\n * publishing new view configs and loaders to\n * the provided callbacks on changes.\n * @param {object} props\n * @param {function} props.onConfigChange A callback function\n * to execute on each change of the Vitessce view config.\n * @param {function} props.onLoaderChange A callback function\n * to execute on each change of the loaders object.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes.\n */\nexport default function CallbackPublisher(props) {\n  const {\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange,\n  } = props;\n\n  const warning = useWarning();\n  const loaders = useLoaders();\n\n  // View config updates are often-occurring, so\n  // we want to use the \"transient update\" approach\n  // to subscribe to view config changes.\n  // Reference: https://github.com/react-spring/zustand#transient-updates-for-often-occuring-state-changes\n  useEffect(() => useViewConfigStore.subscribe(\n    // The function to run on each publish.\n    (viewConfig) => {\n      if (validateOnConfigChange && viewConfig) {\n        validateViewConfig(viewConfig);\n      }\n      if (onConfigChange && viewConfig) {\n        onConfigChange(viewConfig);\n      }\n    },\n    // The function to specify which part of the store\n    // we want to subscribe to.\n    state => state.viewConfig,\n  ), [onConfigChange, validateOnConfigChange]);\n\n  // Emit updates to the warning message.\n  useEffect(() => {\n    if (onWarn && warning) {\n      onWarn(warning);\n    }\n  }, [warning, onWarn]);\n\n  // Emit updates to the loaders.\n  useEffect(() => {\n    if (onLoaderChange && loaders) {\n      onLoaderChange(loaders);\n    }\n  }, [loaders, onLoaderChange]);\n\n  // Render nothing.\n  return null;\n}\n","import {\n  useRef, useState, useEffect, useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport { useGridResize, useEmitGridResize } from '../app/state/hooks';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\n/**\n * Custom hook, gets the full window dimensions.\n * @returns {array} `[width, height]` where width and height\n * are numbers.\n */\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    const onResizeDebounced = debounce(handleResize, 100, { trailing: true });\n\n    window.addEventListener('resize', onResizeDebounced);\n    return () => window.removeEventListener('resize', onResizeDebounced);\n  }, []);\n\n  return windowDimensions;\n}\n\n/**\n * Custom hook, subscribes to GRID_RESIZE and window resize events.\n * @returns {array} `[width, height, containerRef]` where width and height\n * are numbers and containerRef is a React ref.\n */\nexport function useGridItemSize() {\n  const containerRef = useRef();\n\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  const resizeCount = useGridResize();\n  const incrementResizeCount = useEmitGridResize();\n\n  // On window resize events, increment the grid resize count.\n  useEffect(() => {\n    function onWindowResize() {\n      incrementResizeCount();\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [incrementResizeCount]);\n\n  // On new grid resize counts, re-compute the component\n  // width/height.\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n    const containerRect = container.getBoundingClientRect();\n    setHeight(containerRect.height);\n    setWidth(containerRect.width);\n  }, [resizeCount]);\n\n  return [width, height, containerRef];\n}\n\n/**\n * Custom hook, subscribes to GRID_RESIZE and window resize events.\n * @returns {array} `[width, height, deckRef]` where width and height\n * are numbers and deckRef is a React ref to be used with\n * a <DeckGL/> element (or a forwardRef to one).\n */\nexport function useDeckCanvasSize() {\n  const deckRef = useRef();\n\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  const resizeCount = useGridResize();\n  const incrementResizeCount = useEmitGridResize();\n\n  // On window resize events, increment the grid resize count.\n  useEffect(() => {\n    function onWindowResize() {\n      incrementResizeCount();\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [incrementResizeCount]);\n\n  // On new grid resize counts, re-compute the DeckGL canvas\n  // width/height.\n  useEffect(() => {\n    if (!deckRef.current) return;\n    const { canvas } = deckRef.current.deck;\n    const canvasRect = canvas.getBoundingClientRect();\n    setHeight(canvasRect.height);\n    setWidth(canvasRect.width);\n  }, [resizeCount]);\n\n  return [width, height, deckRef];\n}\n\n/**\n * This hook handles a boolean isReady value,\n * which only returns true once every item in the\n * input list has been marked as \"ready\".\n * @param {string[]} items The items to wait on.\n * Should be defined as a constant\n * (outside a function component / render function),\n * otherwise strange bugs may occur.\n * @returns {array} An array\n * [isReady, setItemIsReady, resetReadyItems]\n * where isReady is the boolean value,\n * setItemIsReady marks one item as ready,\n * and resetReadyItem marks all items as waiting.\n */\nexport function useReady(supportedItems) {\n  const items = supportedItems;\n  const [waiting, setWaiting] = useState(items);\n\n  const setItemIsReady = useCallback((readyItem) => {\n    setWaiting((waitingItems) => {\n      const nextWaitingItems = waitingItems.filter(item => item !== readyItem);\n      // eslint-disable-next-line no-console\n      console.log(`cleared ${readyItem}; waiting on ${nextWaitingItems.length}: ${JSON.stringify(nextWaitingItems)}`);\n      return nextWaitingItems;\n    });\n  }, [setWaiting]);\n\n  const resetReadyItems = useCallback(() => {\n    setWaiting(items);\n    // eslint-disable-next-line no-console\n    console.log(`waiting on ${items.length}: ${JSON.stringify(items)}`);\n  }, [setWaiting, items]);\n\n  const isReady = waiting.length === 0;\n\n  return [isReady, setItemIsReady, resetReadyItems];\n}\n\n/**\n * This hook manages a list of URLs,\n * with adding and resetting helpers.\n * @returns {array} An array\n * [urls, addUrl, resetUrls]\n * where urls is the array of URL objects,\n * addUrl is a function for adding a URL to the array,\n * resetUrls is a function that clears the array.\n */\nexport function useUrls() {\n  const [urls, setUrls] = useState([]);\n\n  const addUrl = useCallback((url, name) => {\n    if (url) {\n      setUrls(prev => ([...prev, { url, name }]));\n    }\n  }, [setUrls]);\n\n  const resetUrls = useCallback(() => {\n    setUrls([]);\n  }, [setUrls]);\n\n  return [urls, addUrl, resetUrls];\n}\n\n/**\n * Custom hook, subscribes to the width and height of the closest .vitessce-container\n * element and updates upon window resize events.\n * @param {Ref} ref A React ref object within the `.vitessce-container`.\n * @returns {array} `[width, height]` where width and height\n * are numbers.\n */\nexport function useClosestVitessceContainerSize(ref) {\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  useEffect(() => {\n    function onWindowResize() {\n      if (ref.current) {\n        const {\n          clientHeight: componentHeight, clientWidth: componentWidth,\n        } = ref.current.closest('.vitessce-container');\n        setWidth(componentWidth);\n        setHeight(componentHeight);\n      }\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [ref]);\n\n  return [width, height];\n}\n","import { useState, useEffect } from 'react';\nimport equal from 'fast-deep-equal';\nimport { capitalize } from '../utils';\nimport { useSetWarning } from '../app/state/hooks';\nimport {\n  AbstractLoaderError,\n  LoaderNotFoundError,\n} from '../loaders/errors/index';\nimport {\n  DEFAULT_MOLECULES_LAYER,\n  DEFAULT_CELLS_LAYER,\n  DEFAULT_NEIGHBORHOODS_LAYER,\n} from './spatial/constants';\nimport { DEFAULT_COORDINATION_VALUES } from '../app/state/coordination';\n\n/**\n * Warn via publishing to the console\n * and to the global warning store.\n * @param {AbstractLoaderError} error An error instance.\n */\nfunction warn(error, setWarning) {\n  setWarning(error.message);\n  console.warn(error.message);\n  if (error instanceof AbstractLoaderError) {\n    error.warnInConsole();\n  }\n}\n\n/**\n * Initialize values in the coordination space.\n * @param {object} values Object where\n * keys are coordination type names,\n * values are initial coordination values.\n * @param {object} setters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialValues Object where\n * keys are coordination type names and keys are values.\n */\nfunction initCoordinationSpace(values, setters, initialValues) {\n  if (!values || !setters) {\n    return;\n  }\n  Object.entries(values).forEach(([coordinationType, value]) => {\n    const setterName = `set${capitalize(coordinationType)}`;\n    const setterFunc = setters[setterName];\n    const initialValue = initialValues && initialValues[coordinationType];\n    const shouldInit = equal(initialValue, DEFAULT_COORDINATION_VALUES[coordinationType]);\n    if (shouldInit && setterFunc) {\n      setterFunc(value);\n    }\n  });\n}\n\n/**\n * Get the dataset description string.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @returns {array} [description] where\n * description is a string.\n */\nexport function useDescription(loaders, dataset) {\n  const [description, setDescription] = useState();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].description) {\n      setDescription(loaders[dataset].description);\n    } else {\n      setDescription(null);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [description];\n}\n\n/**\n * Get data from a cells data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [cells, cellsCount] where\n * cells is an object and cellsCount is the\n * number of items in the cells object.\n */\nexport function useCellsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [cells, setCells] = useState({});\n  const [cellsCount, setCellsCount] = useState(0);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.cells) {\n      loaders[dataset].loaders.cells.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setCells(data);\n        setCellsCount(Object.keys(data).length);\n        addUrl(url, 'Cells');\n        // This dataset has cells, so set up the\n        // spatial cells layer coordination value\n        // using the cell layer singleton.\n        const coordinationValuesOrDefault = {\n          spatialCellsLayer: DEFAULT_CELLS_LAYER,\n          ...coordinationValues,\n        };\n        initCoordinationSpace(\n          coordinationValuesOrDefault,\n          coordinationSetters, initialCoordinationValues,\n        );\n        setItemIsReady('cells');\n      });\n    } else {\n      setCells({});\n      setCellsCount(0);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'cells', null, null), setWarning);\n      } else {\n        setItemIsReady('cells');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [cells, cellsCount];\n}\n\n/**\n * Get data from a cell sets data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names and values are the current values.\n * @returns {array} [cellSets] where\n * cellSets is a sets tree object.\n */\nexport function useCellSetsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [cellSets, setCellSets] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['cell-sets']) {\n      // Load the data initially.\n      loaders[dataset].loaders['cell-sets'].load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setCellSets(data);\n        addUrl(url, 'Cell Sets');\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('cell-sets');\n      });\n    } else {\n      setCellSets(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'cell-sets', null, null), setWarning);\n      } else {\n        setItemIsReady('cell-sets');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [cellSets];\n}\n\n/**\n * Get (potentially filtered) data from an expression matrix data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.  Should not be used in conjunction (called in the same component)\n * with useExpressionAttrs as this returns a potentially filtered set of attributes\n * specifically for the returned expression data.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [expressionMatrix] where\n * expressionMatrix is an object with\n * shape { cols, rows, matrix }.\n */\nexport function useExpressionMatrixData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [expressionMatrix, setExpressionMatrix] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['expression-matrix']) {\n      loaders[dataset].loaders['expression-matrix'].load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        const [attrs, arr] = data;\n        setExpressionMatrix({\n          cols: attrs.cols,\n          rows: attrs.rows,\n          matrix: arr.data,\n        });\n        addUrl(url, 'Expression Matrix');\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('expression-matrix');\n      });\n    } else {\n      setExpressionMatrix(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [expressionMatrix];\n}\n\n/**\n * Get data from the expression matrix data type loader for a given gene selection.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {boolean} selection A list of gene names to get expression data for.\n * @returns {array} [geneData] where geneData is an array [Uint8Array, ..., Uint8Array]\n * for however many genes are in the selection.\n */\nexport function useGeneSelection(loaders, dataset, setItemIsReady, isRequired, selection) {\n  const [geneData, setGeneData] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n    if (!selection) {\n      setItemIsReady('expression-matrix');\n      return;\n    }\n    const loader = loaders[dataset].loaders['expression-matrix'];\n    if (loader) {\n      const implementsGeneSelection = typeof loader.loadGeneSelection === 'function';\n      if (implementsGeneSelection) {\n        loaders[dataset].loaders['expression-matrix']\n          .loadGeneSelection({ selection })\n          .catch(e => warn(e, setWarning))\n          .then((payload) => {\n            if (!payload) return;\n            const { data } = payload;\n            setGeneData(data);\n          });\n      } else {\n        loader.load().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data } = payload;\n          const [attrs, { data: matrix }] = data;\n          const expressionDataForSelection = selection.map((sel) => {\n            const geneIndex = attrs.cols.indexOf(sel);\n            const numGenes = attrs.cols.length;\n            const numCells = attrs.rows.length;\n            const expressionData = new Uint8Array(numCells);\n            for (let cellIndex = 0; cellIndex < numCells; cellIndex += 1) {\n              expressionData[cellIndex] = matrix[cellIndex * numGenes + geneIndex];\n            }\n            return expressionData;\n          });\n          setGeneData(expressionDataForSelection);\n        });\n      }\n    } else {\n      setGeneData(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset, selection]);\n\n  return [geneData];\n}\n\n/**\n * Get the attributes for the expression matrix data type loader,\n * i.e names of cells and genes.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.  Should not be used in conjunction (called in the same component)\n * with useExpressionMatrixData.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @returns {object} [attrs] { rows, cols } object containing cell and gene names.\n */\nexport function useExpressionAttrs(loaders, dataset, setItemIsReady, addUrl, isRequired) {\n  const [attrs, setAttrs] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n    const loader = loaders[dataset].loaders['expression-matrix'];\n    if (loader) {\n      const implementsLoadAttrs = typeof loader.loadAttrs === 'function';\n      if (implementsLoadAttrs) {\n        loader.loadAttrs().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data, url } = payload;\n          setAttrs(data);\n          addUrl(url, 'Expression Matrix');\n          setItemIsReady('expression-matrix');\n        });\n      } else {\n        loader.load().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data, url } = payload;\n          setAttrs(data[0]);\n          addUrl(url, 'Expression Matrix');\n          setItemIsReady('expression-matrix');\n        });\n      }\n    } else {\n      setAttrs(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [attrs];\n}\n\n/**\n * Get data from a molecules data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [molecules, moleculesCount, locationsCount] where\n * molecules is an object,\n * moleculesCount is the number of unique molecule types, and\n * locationsCount is the number of molecules.\n */\nexport function useMoleculesData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [molecules, setMolecules] = useState();\n  const [moleculesCount, setMoleculesCount] = useState(0);\n  const [locationsCount, setLocationsCount] = useState(0);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.molecules) {\n      loaders[dataset].loaders.molecules.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setMolecules(data);\n        setMoleculesCount(Object.keys(data).length);\n        setLocationsCount(Object.values(data)\n          .map(l => l.length)\n          .reduce((a, b) => a + b, 0));\n        addUrl(url, 'Molecules');\n        const coordinationValuesOrDefault = {\n          spatialMoleculesLayer: DEFAULT_MOLECULES_LAYER,\n          ...coordinationValues,\n        };\n        initCoordinationSpace(\n          coordinationValuesOrDefault,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('molecules');\n      });\n    } else {\n      setMolecules({});\n      setMoleculesCount(0);\n      setLocationsCount(0);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'molecules', null, null), setWarning);\n      } else {\n        setItemIsReady('molecules');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [molecules, moleculesCount, locationsCount];\n}\n\n/**\n * Get data from a neighborhoods data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [neighborhoods] where\n * neighborhoods is an object.\n */\nexport function useNeighborhoodsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [neighborhoods, setNeighborhoods] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.neighborhoods) {\n      loaders[dataset].loaders.neighborhoods.load().catch(e => warn(e, setWarning))\n        .then((payload) => {\n          if (!payload) return;\n          const { data, url, coordinationValues } = payload;\n          setNeighborhoods(data);\n          addUrl(url, 'Neighborhoods');\n          const coordinationValuesOrDefault = {\n            spatialNeighborhoodsLayer: DEFAULT_NEIGHBORHOODS_LAYER,\n            ...coordinationValues,\n          };\n          initCoordinationSpace(\n            coordinationValuesOrDefault,\n            coordinationSetters,\n            initialCoordinationValues,\n          );\n          setItemIsReady('neighborhoods');\n        });\n    } else {\n      setNeighborhoods({});\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'neighborhoods', null, null), setWarning);\n      } else {\n        setItemIsReady('neighborhoods');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [neighborhoods];\n}\n\n/**\n * Get data from a raster data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [raster, imageLayerLoaders, imageLayerMeta] where\n * raster is an object,\n * imageLayerLoaders is an object, and\n * imageLayerMeta is an object.\n */\nexport function useRasterData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [raster, setRaster] = useState();\n  // Since we want the image layer / channel definitions to come from the\n  // coordination space stored as JSON in the view config,\n  // we need to set up a separate state variable here to store the\n  // non-JSON objects, such as layer loader instances.\n  const [imageLayerLoaders, setImageLayerLoaders] = useState([]);\n  const [imageLayerMeta, setImageLayerMeta] = useState([]);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.raster) {\n      loaders[dataset].loaders.raster.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url: urls, coordinationValues } = payload;\n        setRaster(data);\n        urls.forEach(([url, name]) => {\n          addUrl(url, name);\n        });\n        const { loaders: nextImageLoaders, meta: nextImageMeta } = data;\n        setImageLayerLoaders(nextImageLoaders);\n        setImageLayerMeta(nextImageMeta);\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('raster');\n      });\n    } else {\n      // There was no raster loader for this dataset,\n      // and raster should be optional.\n      setImageLayerLoaders([]);\n      setImageLayerMeta([]);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'raster', null, null), setWarning);\n      } else {\n        setItemIsReady('raster');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n  return [raster, imageLayerLoaders, imageLayerMeta];\n}\n\n/**\n * Get data from a genomic-profiles data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [neighborhoods] where\n * neighborhoods is an object.\n */\nexport function useGenomicProfilesData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [genomicProfilesAttrs, setGenomicProfilesAttrs] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['genomic-profiles']) {\n      loaders[dataset].loaders['genomic-profiles'].load().catch(e => warn(e, setWarning))\n        .then((payload) => {\n          if (!payload) return;\n          const { data, url, coordinationValues } = payload;\n          setGenomicProfilesAttrs(data);\n          addUrl(url);\n          initCoordinationSpace(\n            coordinationValues,\n            coordinationSetters,\n            initialCoordinationValues,\n          );\n          setItemIsReady('genomic-profiles');\n        });\n    } else {\n      setGenomicProfilesAttrs(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'genomic-profiles', null, null), setWarning);\n      } else {\n        setItemIsReady('genomic-profiles');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [genomicProfilesAttrs];\n}\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function LoadingIndicator() {\n  return (\n    <div className=\"loading-indicator-backdrop\">\n      <div className=\"loading-indicator-container\">\n        <CircularProgress />\n      </div>\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { styles } from './styles';\n\nfunction MuiPopper(props) {\n  const classes = styles();\n  const {\n    anchorEl,\n    open,\n    placement = 'bottom-start',\n    children,\n  } = props;\n  return (\n    <Popper\n      className={classes.popper}\n      open={open}\n      anchorEl={anchorEl.current}\n      placement={placement}\n    >\n      {children}\n    </Popper>\n  );\n}\n\nfunction MuiPaper(props) {\n  const { children } = props;\n  const classes = styles();\n  return (\n    <Paper className={classes.paper} elevation={4}>\n      {children}\n    </Paper>\n  );\n}\n\nexport function MuiSpan(props) {\n  const { children } = props;\n  const classes = styles();\n  return <span className={classes.span}>{children}</span>;\n}\n\nexport function PopperMenu(props) {\n  const {\n    buttonIcon,\n    open,\n    toggle,\n    children,\n    placement,\n    buttonClassName,\n  } = props;\n  const anchorRef = useRef(null);\n  const classes = styles();\n  return (\n    <>\n      <IconButton\n        onClick={toggle}\n        size=\"small\"\n        ref={anchorRef}\n        className={buttonClassName}\n      >\n        {buttonIcon}\n      </IconButton>\n      <MuiPopper\n        className={classes.popper}\n        open={open}\n        anchorEl={anchorRef}\n        placement={placement}\n      >\n        <MuiPaper>\n          <ClickAwayListener onClickAway={toggle}>\n            <MenuList>{children}</MenuList>\n          </ClickAwayListener>\n        </MuiPaper>\n      </MuiPopper>\n    </>\n  );\n}\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { SCROLL_CARD, BLACK_CARD, SECONDARY_CARD } from './classNames';\nimport LoadingIndicator from './LoadingIndicator';\nimport { PopperMenu } from './shared-mui/components';\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    border: 'none',\n    marginLeft: 0,\n    background: 'none',\n    color: theme.palette.primaryForeground,\n    paddingLeft: '0.25em',\n    paddingRight: '0.25em',\n    borderRadius: '2px',\n    '&:hover': {\n      backgroundColor: theme.palette.primaryBackgroundLight,\n    },\n    '&:first-child': {\n      marginLeft: '0.75em',\n    },\n    '&:last-child': {\n      marginRight: '0.25em',\n    },\n    '& svg': {\n      width: '0.7em',\n      height: '0.7em',\n      verticalAlign: 'middle',\n    },\n  },\n  downloadLink: {\n    color: theme.palette.primaryForeground,\n  },\n}));\n\nfunction SettingsIconWithArrow({ open }) {\n  return (\n    <>\n      <SettingsIcon />\n      {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n    </>\n  );\n}\n\nfunction PlotOptions(props) {\n  const { options } = props;\n  const [open, toggle] = useReducer(v => !v, false);\n  const classes = useStyles();\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<SettingsIconWithArrow open={open} />}\n      buttonClassName={classes.iconButton}\n      placement=\"bottom-end\"\n    >\n      {options}\n    </PopperMenu>\n  );\n}\n\nfunction CloudDownloadIconWithArrow({ open }) {\n  return (\n    <>\n      <CloudDownloadIcon />\n      {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n    </>\n  );\n}\n\nfunction DownloadOptions(props) {\n  const { urls } = props;\n  const [open, toggle] = useReducer(v => !v, false);\n  const classes = useStyles();\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<CloudDownloadIconWithArrow open={open} />}\n      buttonClassName={classes.iconButton}\n      placement=\"bottom-end\"\n    >\n      {urls.map(({ url, name }) => (\n        <MenuItem dense key={url}>\n          <Link underline=\"none\" href={url} target=\"_blank\" rel=\"noopener\" className={classes.downloadLink}>\n            Download {name}\n          </Link>\n        </MenuItem>\n      ))}\n    </PopperMenu>\n  );\n}\n\nfunction ClosePaneButton(props) {\n  const { removeGridComponent } = props;\n  const classes = useStyles();\n  return (\n    <IconButton\n      onClick={removeGridComponent}\n      size=\"small\"\n      className={classes.iconButton}\n      title=\"close\"\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nexport default function TitleInfo(props) {\n  const {\n    title, info, children, isScroll, isSpatial, removeGridComponent, urls,\n    isReady, options,\n  } = props;\n  // eslint-disable-next-line no-nested-ternary\n  const childClassName = isScroll ? SCROLL_CARD : (isSpatial ? BLACK_CARD : SECONDARY_CARD);\n  return (\n    // d-flex without wrapping div is not always full height; I don't understand the root cause.\n    <>\n      <div className=\"title d-flex justify-content-between align-items-baseline\">\n        <div className=\"justify-content-between d-flex align-items-end\">\n          <span>{title}</span>\n        </div>\n        <span className=\"details pl-2 align-items-end\">\n          <span className=\"d-flex justify-content-between\">\n            {info}\n            { options && (\n              <PlotOptions\n                options={options}\n              />\n            ) }\n            {urls && urls.length > 0 && (\n              <DownloadOptions\n                urls={urls}\n              />\n            )}\n            <ClosePaneButton\n              removeGridComponent={removeGridComponent}\n            />\n          </span>\n        </span>\n      </div>\n      <div className={childClassName}>\n        { !isReady && <LoadingIndicator /> }\n        {children}\n      </div>\n    </>\n    // \"pl-2\" only matters when the window is very narrow.\n  );\n}\n","import React from 'react';\n\nexport default function Description(props) {\n  const { description, metadata } = props;\n\n  return (\n    <div className=\"description\">\n      <p>{description}</p>\n\n      {metadata && Array.from(metadata.entries())\n        .map(([layerIndex, { name: layerName, metadata: metadataRecord }]) => (\n          metadataRecord && Object.entries(metadataRecord).length > 0 ? (\n            <details key={layerIndex}>\n              <summary>{layerName}</summary>\n              <div className=\"metadata-container\">\n                <table>\n                  <tbody>\n                    {Object.entries(metadataRecord)\n                      .map(([key, value]) => (\n                        <tr key={key}>\n                          <th title={key}>{key}</th>\n                          <td title={value}>{value}</td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </details>\n          ) : null))}\n    </div>\n  );\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { useReady } from '../hooks';\nimport { useDescription, useRasterData } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Description from './Description';\n\nconst DESCRIPTION_DATA_TYPES = ['raster'];\n\n/**\n * A subscriber component for a text description component.\n * Also renders a table containing image metadata.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function DescriptionSubscriber(props) {\n  const {\n    coordinationScopes,\n    description: descriptionOverride,\n    removeGridComponent,\n    theme,\n    title = 'Data Set',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    spatialRasterLayers: rasterLayers,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.description, coordinationScopes);\n\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    DESCRIPTION_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [description] = useDescription(loaders, dataset);\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n  );\n\n  const metadata = useMemo(() => {\n    const result = new Map();\n    if (rasterLayers && rasterLayers.length > 0 && raster && imageLayerMeta && imageLayerLoaders) {\n      rasterLayers.forEach((layer) => {\n        if (imageLayerMeta[layer.index]) {\n          // Want to ensure that layer index is a string.\n          const { format } = imageLayerLoaders[layer.index].metadata;\n          result.set(`${layer.index}`, {\n            name: raster.meta[layer.index].name,\n            metadata: format && format(),\n          });\n        }\n      });\n    }\n    return result;\n  }, [raster, rasterLayers, imageLayerMeta, imageLayerLoaders]);\n\n  return (\n    <TitleInfo\n      title={title}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      theme={theme}\n      isReady={isReady}\n    >\n      <Description\n        description={descriptionOverride || description}\n        metadata={metadata}\n      />\n    </TitleInfo>\n  );\n}\n","import React from 'react';\n\nexport default function Status(props) {\n  const warnClass = 'alert alert-warning my-0 details';\n  const { info, warn } = props;\n  const messages = [];\n  if (info) {\n    messages.push(<p className=\"details\" key=\"info\">{info}</p>);\n  }\n  if (warn) {\n    messages.push(<p className={warnClass} key=\"warn\">{warn}</p>);\n  }\n  return (\n    messages\n  );\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Table, AutoSizer } from 'react-virtualized';\nimport uuidv4 from 'uuid/v4';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * A table with \"selectable\" rows.\n * @prop {string[]} columns An array of column names, corresponding to data object properties.\n * @prop {object[]} data An array of data objects used to populate table rows.\n * @prop {function} onChange Callback function,\n * passed a selection object when `allowMultiple` is false (and `null` if `allowUncheck` is true),\n * or passed an array of selection objects when `allowMultiple` is true.\n * @prop {string} idKey The key for a unique identifier property of `data` objects.\n * @prop {string} valueKey If initially-selected rows are required,\n * this key specifies a boolean property of the `data` objects\n * indicating those rows that should be initially selected.\n * @prop {boolean} allowMultiple Whether to allow multiple rows to be selected. By default, false.\n * @prop {boolean} allowUncheck Whether to allow selected rows to be un-checked. By default, false.\n * @prop {boolean} showTableHead Whether to show the table header element. By default, true.\n * @prop {boolean} showTableInputs Whether to show the table input elements for each row.\n * By default, false.\n */\nexport default function SelectableTable(props) {\n  const {\n    hasColorEncoding,\n    columns,\n    data,\n    onChange,\n    idKey = 'id',\n    valueKey = 'value',\n    allowMultiple = false,\n    allowUncheck = false,\n    showTableHead = true,\n    showTableInputs = false,\n    testHeight = undefined,\n    testWidth = undefined,\n  } = props;\n\n  const [selectedRows, setSelectedRows] = useState(null);\n\n  // Callback function to update the `selectedRows` state.\n  const onSelectRow = useCallback((value, checked) => {\n    if (checked || allowUncheck) {\n      if (!allowMultiple) {\n        setSelectedRows(checked ? [value] : []);\n      } else {\n        setSelectedRows(\n          checked\n            ? union(selectedRows || [], [value])\n            : difference(selectedRows || [], [value]),\n        );\n      }\n    }\n  }, [allowMultiple, allowUncheck, selectedRows]);\n\n  // Handler for checkbox input elements.\n  const handleInputChange = useCallback((event) => {\n    const { target } = event;\n    const { checked } = target;\n    const { value } = target;\n    onSelectRow(value, checked);\n  }, [onSelectRow]);\n\n  // Function to map row IDs to corresponding objects\n  // to pass to the `onChange` callback.\n  const getDataFromIds = useCallback(ids => ids.map(id => ({\n    [idKey]: id,\n    data: data.find(item => item[idKey] === id),\n  })), [data, idKey]);\n\n  // Function to check if a row ID has been selected.\n  const isSelected = useCallback(id => (\n    Array.isArray(selectedRows) && selectedRows.includes(id)\n  ), [selectedRows]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Check whether an initial set of rows should be selected.\n    const initialSelectedRows = data\n      .map((d) => {\n        if (d[valueKey]) {\n          return d[idKey];\n        }\n        return null;\n      })\n      .filter(Boolean);\n    if (!isEqual(initialSelectedRows, selectedRows)) {\n      if (initialSelectedRows.length > 0) {\n        setSelectedRows(initialSelectedRows);\n      } else {\n        setSelectedRows(null);\n      }\n    }\n  }, [data, idKey, valueKey]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Call the `onChange` prop function with an updated row or set of rows.\n    if (!onChange || !selectedRows) {\n      return;\n    }\n    const selectedRowData = getDataFromIds(selectedRows);\n    if (allowMultiple) {\n      onChange(selectedRowData);\n    } else if (selectedRows.length === 1) {\n      onChange(selectedRowData[0]);\n    } else if (selectedRows.length === 0) {\n      onChange(null);\n    }\n  }, [selectedRows]);\n\n  // Generate a unique ID to use in (for, id) label-input pairs.\n  const inputUuid = uuidv4();\n\n  // Class for first column of inputs, to hide them if desired.\n  const hiddenInputsClass = (showTableInputs ? '' : 'hidden-input-column');\n\n  const rowRenderer = ({ index, style }) => (\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    <div\n      key={data[index][idKey]}\n      className={`table-item table-row ${isSelected(data[index][idKey]) ? 'row-checked ' : ''}`}\n      style={style}\n      role=\"button\"\n      onClick={() => onSelectRow(\n        data[index][idKey],\n        !isSelected(data[index][idKey]) || !hasColorEncoding,\n      )}\n    >\n      <div className={`input-container ${hiddenInputsClass} table-cell`}>\n        <label htmlFor={`${inputUuid}_${data[index][idKey]}`}>\n          <input\n            id={`${inputUuid}_${data[index][idKey]}`}\n            type=\"checkbox\"\n            className={(allowMultiple ? 'checkbox' : 'radio')}\n            name={inputUuid}\n            value={data[index][idKey]}\n            onChange={handleInputChange}\n            checked={isSelected(data[index][idKey])}\n          />\n        </label>\n      </div>\n      {columns.map(column => (\n        <div\n          className=\"table-cell\"\n          key={column}\n        >\n          {data[index][column]}\n        </div>\n      ))}\n    </div>\n  );\n\n  const headerRowRenderer = ({ style }) => (\n    <div className={`${hiddenInputsClass} table-row`} style={style}>\n      {columns.map(column => (\n        <div key={column}>{column}</div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"selectable-table\">\n      <AutoSizer>\n        {({ width, height }) => (\n          <Table\n            height={testHeight || height}\n            gridStyle={{ outline: 'none' }}\n            rowCount={data.length}\n            // 24 is 1 em + padding in either direction (see _selectable_table.scss).\n            rowHeight={24}\n            headerHeight={showTableHead ? 24 : undefined}\n            rowRenderer={rowRenderer}\n            width={testWidth || width}\n            headerRowRenderer={showTableHead ? headerRowRenderer : undefined}\n            rowGetter={({ index }) => data[index]}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { SelectableTable } from '../selectable-table/index';\n\nexport default function Genes(props) {\n  const {\n    hasColorEncoding,\n    geneList = [],\n    geneSelection = [],\n    geneFilter = null,\n    setGeneSelection,\n  } = props;\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState(geneList);\n\n  useEffect(() => {\n    const results = geneList\n      .filter(gene => gene.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm, geneList]);\n\n  function onChange(selection) {\n    if (setGeneSelection && selection && selection.name) {\n      setGeneSelection([selection.name]);\n    }\n  }\n\n  const data = searchResults\n    .filter(gene => (geneFilter ? geneFilter.includes(gene) : true))\n    .sort((a, b) => a.localeCompare(b))\n    .map(\n      gene => ({ name: gene, value: (geneSelection ? geneSelection.includes(gene) : false) }),\n    );\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <>\n      <input\n        className=\"search-bar\"\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      <SelectableTable\n        columns={['name']}\n        data={data}\n        hasColorEncoding={hasColorEncoding}\n        idKey=\"name\"\n        valueKey=\"value\"\n        onChange={onChange}\n        allowUncheck={false}\n        showTableHead={false}\n      />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { pluralize } from '../../utils';\nimport { useReady, useUrls } from '../hooks';\nimport { useExpressionAttrs } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nimport TitleInfo from '../TitleInfo';\nimport Genes from './Genes';\n\nconst GENES_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n */\nexport default function GenesSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    theme,\n    title = 'Expression Levels',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n    geneFilter,\n    cellColorEncoding,\n  }, {\n    setGeneSelection,\n    setGeneFilter,\n    setGeneHighlight,\n    setCellColorEncoding,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.genes, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    GENES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const geneList = attrs ? attrs.cols : [];\n  const numGenes = geneList.length;\n\n  function setGeneSelectionAndColorEncoding(newSelection) {\n    setGeneSelection(newSelection);\n    setCellColorEncoding('geneSelection');\n  }\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${numGenes} ${pluralize(variablesLabel, variablesPluralLabel, numGenes)}`}\n      theme={theme}\n      // Virtual scroll is used but this allows for the same styling as a scroll component\n      // even though this no longer uses the TitleInfo component's\n      // scroll css (SelectableTable is virtual scroll).\n      isScroll\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      urls={urls}\n    >\n      <Genes\n        hasColorEncoding={cellColorEncoding === 'geneSelection'}\n        geneList={geneList}\n        geneSelection={geneSelection}\n        geneFilter={geneFilter}\n        setGeneSelection={setGeneSelectionAndColorEncoding}\n        setGeneFilter={setGeneFilter}\n        setGeneHighlight={setGeneHighlight}\n      />\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport RcTree from 'rc-tree';\nimport classNames from 'classnames';\n\n/**\n * A helper component around the rc-tree\n * library's tree component, to set\n * default props.\n */\nconst Tree = React.forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    showIcon,\n    blockNode,\n    children,\n    checkable,\n  } = props;\n  return (\n    <RcTree\n      itemHeight={32}\n      ref={ref}\n      {...props}\n      className={classNames(className, {\n        [`${prefixCls}-icon-hide`]: !showIcon,\n        [`${prefixCls}-block-node`]: blockNode,\n      })}\n      checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`} /> : checkable}\n    >\n      {children}\n    </RcTree>\n  );\n});\n\nTree.defaultProps = {\n  virtual: false,\n  checkable: false,\n  showIcon: false,\n  blockNode: true,\n  prefixCls: 'rc-tree',\n};\n\nexport default Tree;\n","import React, { useRef, useCallback } from 'react';\nimport RcTooltip from 'rc-tooltip';\n\n/**\n * This is a small wrapper around the Tooltip component from the rc-tooltip library,\n * which is required to be able to apply theme styles to the tooltip.\n * The default `getTooltipContainer` function used by rc-tooltip\n * just returns `document.body` (see https://github.com/react-component/tooltip#props),\n * We want theme styles to be applied relative to the closest `.vitessce-container`\n * ancestor element.\n * https://github.com/hubmapconsortium/vitessce/pull/494#discussion_r395957914\n * @param {object} props Props are passed through to the <RcTooltip/> from the library.\n */\nexport default function HelpTooltip(props) {\n  const { title, content, overlayClassName } = props;\n  const spanRef = useRef();\n\n  const getTooltipContainer = useCallback(() => {\n    if (spanRef.current) {\n      return spanRef.current.closest('.vitessce-container');\n    }\n    return null;\n  }, [spanRef]);\n\n  const overlay = title || content;\n\n  return (\n    <>\n      <span ref={spanRef} />\n      <RcTooltip\n        getTooltipContainer={getTooltipContainer}\n        overlayClassName={overlayClassName}\n        overlay={overlay}\n        {...props}\n      />\n    </>\n  );\n}\n\nHelpTooltip.defaultProps = {\n  overlayClassName: 'help-tooltip',\n  placement: 'top',\n  trigger: 'hover',\n  mouseEnterDelay: 0.2,\n  mouseLeaveDelay: 0,\n};\n","import React from 'react';\nimport HelpTooltip from './HelpTooltip';\n\n/**\n * This is a wrapper around the HelpTooltip component, to style it as a popover,\n * and change the trigger to \"click\" rather than \"hover\".\n * @param {*} props Props are passed through to the HelpTooltip component.\n */\nexport default function Popover(props) {\n  return (\n    <HelpTooltip {...props} />\n  );\n}\n\nPopover.defaultProps = {\n  overlayClassName: 'popover',\n  placement: 'top',\n  trigger: 'click',\n  mouseEnterDelay: 0,\n  mouseLeaveDelay: 0,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TwitterPicker } from 'react-color';\nimport { colorArrayToString, callbackOnKeyPress } from './utils';\nimport { PALETTE } from '../utils';\nimport Popover from './Popover';\n\n/**\n * Wrapper around a button element that supports asking for confirmation.\n * @param {object} props\n * @param {string} props.title The main button text.\n * @param {string} props.subtitle Smaller text on a line beneath the main text. Optional.\n * @param {function} props.onClick A \"clean up\" handler passed from the parent,\n * to alert the parent Popover component that it should close the popover after the button has\n * fired its handler.\n * @param {function} props.handler A function to call on button click (or after confirmation).\n * @param {string} props.handlerKey A key associated with the button, to support accessibility.\n * @param {boolean} props.confirm Does the user need to press the button again to confirm?\n * By default, false.\n * @param {boolean} props.visible The visibility state from the parent popover,\n * so that on visibility change, the button can clear its confirmation state.\n */\nfunction PopoverMenuListButton(props) {\n  const {\n    title, subtitle, onClick, handler, handlerKey, confirm,\n    visible,\n  } = props;\n\n  const [isConfirming, setIsConfirming] = useState(false);\n\n  useEffect(() => {\n    // Want to clear the \"confirming\",\n    // state if the user hides the popover.\n    setIsConfirming(false);\n  }, [visible]);\n\n  function handleOrRequireConfirm() {\n    if (!confirm || isConfirming) {\n      onClick();\n      handler();\n    } else {\n      setIsConfirming(true);\n    }\n  }\n\n  const titleWithConfirm = `${isConfirming ? 'Confirm ' : ''}${title}`;\n\n  return (\n    <button\n      title={titleWithConfirm}\n      type=\"button\"\n      onClick={handleOrRequireConfirm}\n      onKeyPress={e => callbackOnKeyPress(e, handlerKey, handleOrRequireConfirm)}\n    >{titleWithConfirm}\n      {subtitle && (<><br /><span className=\"small\">{subtitle}</span></>)}\n    </button>\n  );\n}\n\n/**\n * Helper component to create a list of buttons for the body of a popover.\n * If the color, setColor, and palette props are provided then a color picker\n * will be rendered at the top of the button list.\n * @param {object} props\n * @param {object[]} props.menuConfig The list of button definition objects.\n * `{ title, subtitle, confirm, handler, handlerKey }`\n * @param {function} props.onClick A \"clean up\" handler passed from the parent,\n * to alert the parent Popover component that it should close the popover after the button has\n * fired its handler.\n * @param {number[]} props.color The current color. Optional.\n * @param {string} props.palette The color palette for the color picker. Optional.\n * @param {boolean} props.setColor The handler to call when a color has been selected. Optional.\n * @param {boolean} props.visible The visibility state from the parent popover,\n * so that on visibility change, buttons can clear confirmation states.\n */\nfunction PopoverMenuList(props) {\n  const {\n    menuConfig,\n    onClick,\n    color = null,\n    palette = null,\n    setColor = null,\n    visible,\n  } = props;\n\n  function handleColorChange({ rgb }) {\n    if (rgb && setColor) {\n      setColor([rgb.r, rgb.g, rgb.b]);\n    }\n  }\n\n  const defaultPalette = palette\n    ? palette.map(colorArrayToString)\n    : PALETTE.concat([[255, 255, 255], [128, 128, 128], [0, 0, 0]]).map(colorArrayToString);\n\n  return (\n    <div>\n      {color && setColor && defaultPalette && (\n        <TwitterPicker\n          className=\"popover-menu-color\"\n          disableAlpha\n          width={108}\n          triangle=\"hide\"\n          colors={defaultPalette}\n          color={colorArrayToString(color)}\n          onChangeComplete={handleColorChange}\n        />\n      )}\n      <ul className=\"popover-menu-list\">\n        {menuConfig.map(item => (\n          <li key={item.title + item.subtitle}>\n            <PopoverMenuListButton\n              {...item}\n              onClick={onClick}\n              visible={visible}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n/**\n * Helper component to create a popover component with a list of buttons.\n * If the color, setColor, and palette props are provided then a color picker\n * will be rendered at the top of the button list.\n * @param {object} props\n * @param {object[]} props.menuConfig The list of button definition objects.\n * `{ title, subtitle, confirm, handler, handlerKey }`\n * @param {string} placement Where to place the popover (top, bottom, left, right).\n * @param {number[]} props.color The current color. Optional.\n * @param {string} props.palette The color palette for the color picker. Optional.\n * @param {boolean} props.setColor The handler to call when a color has been selected. Optional.\n * @param {Element|React.Component} props.children Children to render,\n * which will trigger the popover on click.\n */\nexport default function PopoverMenu(props) {\n  const {\n    menuConfig, placement, children,\n    color = null, setColor = null, palette = null,\n  } = props;\n\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <Popover\n      content={(\n        <PopoverMenuList\n          menuConfig={menuConfig}\n          onClick={() => setVisible(false)}\n          color={color}\n          setColor={setColor}\n          palette={palette}\n          visible={visible}\n        />\n)}\n      placement={placement}\n      visible={visible}\n      onVisibleChange={setVisible}\n    >\n      {children}\n    </Popover>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\"\n});\n\nfunction SvgMenu(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenu, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu.bc56e94a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { TreeNode as RcTreeNode } from 'rc-tree';\nimport { getDataAndAria } from 'rc-tree/es/util';\nimport classNames from 'classnames';\nimport range from 'lodash/range';\nimport isEqual from 'lodash/isEqual';\nimport PopoverMenu from './PopoverMenu';\nimport HelpTooltip from './HelpTooltip';\nimport { callbackOnKeyPress, colorArrayToString, getLevelTooltipText } from './utils';\nimport { ReactComponent as MenuSVG } from '../../assets/menu.svg';\nimport { DEFAULT_COLOR } from '../utils';\n\n\n/**\n * Construct a `menuConfig` array for the PopoverMenu component.\n * @param {object} props The props for the TreeNode component.\n * @returns {object[]} An array of menu items to pass to PopoverMenu.\n */\nfunction makeNodeViewMenuConfig(props) {\n  const {\n    path,\n    level,\n    height,\n    onCheckNode,\n    onNodeRemove,\n    onNodeSetIsEditing,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    checkable,\n    editable,\n    exportable,\n    checked,\n  } = props;\n\n  return [\n    ...(editable ? [\n      {\n        title: 'Rename',\n        handler: () => { onNodeSetIsEditing(path, true); },\n        handlerKey: 'r',\n      },\n      {\n        title: 'Delete',\n        confirm: true,\n        handler: () => { onNodeRemove(path); },\n        handlerKey: 'd',\n      },\n    ] : []),\n    ...(level === 0 && exportable ? [\n      {\n        title: 'Export hierarchy',\n        subtitle: '(to JSON file)',\n        handler: () => { onExportLevelZeroNodeJSON(path); },\n        handlerKey: 'j',\n      },\n      ...(height <= 1 ? [\n        {\n          title: 'Export hierarchy',\n          subtitle: '(to CSV file)',\n          handler: () => { onExportLevelZeroNodeTabular(path); },\n          handlerKey: 't',\n        },\n      ] : []),\n    ] : []),\n    ...(level > 0 ? [\n      ...(checkable ? [\n        {\n          title: (checked ? 'Uncheck' : 'Check'),\n          handler: () => { onCheckNode(path, !checked); },\n          handlerKey: 's',\n        },\n      ] : []),\n      ...(exportable ? [\n        {\n          title: 'Export set',\n          subtitle: '(to JSON file)',\n          handler: () => { onExportSetJSON(path); },\n          handlerKey: 'e',\n        },\n      ] : []),\n    ] : []),\n  ];\n}\n\n/**\n * The \"static\" node component to render when the user is not renaming.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeStatic(props) {\n  const {\n    title,\n    path,\n    nodeKey,\n    level,\n    height,\n    color,\n    checkbox,\n    isChecking,\n    isLeaf,\n    onNodeSetColor,\n    onNodeView,\n    expanded,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    disableTooltip,\n    size,\n    datatype,\n    editable,\n  } = props;\n  const shouldCheckNextLevel = (level === 0 && !expanded);\n  const nextLevelToCheck = (\n    (checkedLevelIndex && isEqual(path, checkedLevelPath) && checkedLevelIndex < height)\n      ? checkedLevelIndex + 1\n      : 1\n  );\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  const niceSize = numberFormatter.format(size);\n  let tooltipText;\n  if (shouldCheckNextLevel) {\n    tooltipText = getLevelTooltipText(nextLevelToCheck);\n  } else if (isLeaf || !expanded) {\n    tooltipText = `Color individual set (${niceSize} ${datatype}${(size === 1 ? '' : 's')})`;\n  } else {\n    tooltipText = 'Color by expanded descendants';\n  }\n  // If this is a level zero node and is _not_ expanded, then upon click,\n  // the behavior should be to color by the first or next cluster level.\n  // If this is a level zero node and _is_ expanded, or if any other node,\n  // click should trigger onNodeView.\n  const onClick = (level === 0 && !expanded\n    ? () => onCheckLevel(nodeKey, nextLevelToCheck)\n    : () => onNodeView(path)\n  );\n  const tooltipProps = (disableTooltip ? { visible: false } : {});\n  const popoverMenuConfig = makeNodeViewMenuConfig(props);\n  return (\n    <span>\n      <HelpTooltip title={tooltipText} {...tooltipProps}>\n        <button\n          type=\"button\"\n          onClick={onClick}\n          onKeyPress={e => callbackOnKeyPress(e, 'v', () => onNodeView(path))}\n          className=\"title-button\"\n        >\n          {title}\n        </button>\n      </HelpTooltip>\n      {popoverMenuConfig.length > 0 ? (\n        <PopoverMenu\n          menuConfig={makeNodeViewMenuConfig(props)}\n          color={level > 0 && editable ? (color || DEFAULT_COLOR) : null}\n          setColor={c => onNodeSetColor(path, c)}\n        >\n          <MenuSVG className=\"node-menu-icon\" />\n        </PopoverMenu>\n      ) : null}\n      {level > 0 && isChecking ? checkbox : null}\n      {level > 0 && (<span className=\"node-size-label\">{niceSize}</span>)}\n    </span>\n  );\n}\n\n/**\n * The \"editing\" node component to render when the user is renaming,\n * containing a text input field and a save button.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeEditing(props) {\n  const {\n    title,\n    path,\n    onNodeSetName,\n    onNodeCheckNewName,\n  } = props;\n  const [currentTitle, setCurrentTitle] = useState(title);\n\n  // Do not allow the user to save a potential name if it conflicts with\n  // another name in the hierarchy.\n  const hasConflicts = onNodeCheckNewName(path, currentTitle);\n  function trySetName() {\n    if (!hasConflicts) {\n      onNodeSetName(path, currentTitle, true);\n    }\n  }\n  return (\n    <span className=\"title-button-with-input\">\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        className=\"title-input\"\n        type=\"text\"\n        value={currentTitle}\n        onChange={(e) => { setCurrentTitle(e.target.value); }}\n        onKeyPress={e => callbackOnKeyPress(\n          e,\n          'Enter',\n          trySetName,\n        )}\n        onFocus={e => e.target.select()}\n      />\n      {!hasConflicts && (\n        <button\n          type=\"button\"\n          className=\"title-save-button\"\n          onClick={trySetName}\n        >\n          Save\n        </button>\n      )}\n    </span>\n  );\n}\n\n/**\n * A \"delegation\" component, to decide whether to render\n * an \"editing\" vs. \"static\" node component.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNode(props) {\n  const {\n    isEditing,\n    isCurrentSet,\n  } = props;\n  return (\n    (isEditing || isCurrentSet)\n      ? (<NamedSetNodeEditing {...props} />)\n      : (<NamedSetNodeStatic {...props} />)\n  );\n}\n\n/**\n * Buttons for viewing each hierarchy level,\n * rendered below collapsed level zero nodes.\n * @param {object} props The props for the (level zero) TreeNode component.\n */\nfunction LevelsButtons(props) {\n  const {\n    nodeKey,\n    path,\n    height,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    hasColorEncoding,\n  } = props;\n  function onCheck(event) {\n    if (event.target.checked) {\n      const newLevel = parseInt(event.target.value, 10);\n      onCheckLevel(nodeKey, newLevel);\n    }\n  }\n  return (\n    <div className=\"level-buttons-container\">\n      {range(1, height + 1).map((i) => {\n        const isChecked = isEqual(path, checkedLevelPath) && i === checkedLevelIndex;\n        return (\n          <div className=\"level-buttons\" key={i}>\n            <HelpTooltip title={getLevelTooltipText(i)}>\n              <input\n                className={clsx('level-radio-button', { checked: isChecked && !hasColorEncoding })}\n                type=\"checkbox\"\n                value={i}\n                checked={isChecked && hasColorEncoding}\n                onChange={onCheck}\n              />\n            </HelpTooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Render the \"switcher\" icon.\n * Arrow for collapsed/expanded non-leaf nodes,\n * or square for leaf nodes.\n * @param {object} props The props for the TreeNode component.\n */\nfunction SwitcherIcon(props) {\n  const {\n    isLeaf, isOpen, color,\n  } = props;\n  const hexColor = (color ? colorArrayToString(color) : undefined);\n  if (isLeaf) {\n    return (\n      <i\n        className=\"anticon anticon-circle rc-tree-switcher-icon\"\n      >\n        <svg\n          viewBox=\"0 0 1024 1024\"\n          focusable=\"false\"\n          data-icon=\"caret-down\"\n          width=\"1em\"\n          height=\"1em\"\n          aria-hidden=\"true\"\n        >\n          <rect fill={hexColor} x={600 / 2} y={600 / 2} width={1024 - 600} height={1024 - 600} />\n        </svg>\n      </i>\n    );\n  }\n  return (\n    <i\n      className=\"anticon anticon-caret-down rc-tree-switcher-icon\"\n    >\n      <svg\n        viewBox=\"0 0 1024 1024\"\n        focusable=\"false\"\n        data-icon=\"caret-down\"\n        width=\"1em\"\n        height=\"1em\"\n        aria-hidden=\"true\"\n      >\n        <path\n          fill={(isOpen ? '#444' : hexColor)}\n          d=\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\"\n        />\n      </svg>\n    </i>\n  );\n}\n\n/**\n * A custom TreeNode component.\n * @extends {RcTreeNode} TreeNode from the rc-tree library.\n */\nexport default class TreeNode extends RcTreeNode {\n  /**\n   * Override the main node text elements.\n   */\n  renderSelector = () => {\n    const {\n      title,\n      isCurrentSet,\n      isSelected,\n      isEditing,\n      onDragStart: onDragStartProp,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        draggable,\n      },\n    } = this.context;\n\n    const onDragStart = (e) => {\n      onDragStartProp();\n      this.onDragStart(e);\n    };\n\n    const wrapClass = `${prefixClass}-node-content-wrapper`;\n    const isDraggable = (!isCurrentSet && !isEditing && draggable);\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={title}\n        className={classNames(\n          wrapClass,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          isSelected && `${prefixClass}-node-selected`,\n          isDraggable && 'draggable',\n        )}\n        draggable={isDraggable}\n        aria-grabbed={isDraggable}\n        onDragStart={isDraggable ? onDragStart : undefined}\n      >\n        <NamedSetNode\n          {...this.props}\n          prefixClass={prefixClass}\n          checkbox={this.renderCheckbox()}\n        />\n        {this.renderLevels()}\n      </span>\n    );\n  };\n\n  /**\n   * Render the LevelsButtons component if this node\n   * is a collapsed level zero node.\n   */\n  renderLevels = () => {\n    const { level, expanded } = this.props;\n    if (level !== 0 || expanded) {\n      return null;\n    }\n    return (\n      <LevelsButtons\n        {...this.props}\n      />\n    );\n  }\n\n  /**\n   * Override the switcher element.\n   */\n  renderSwitcher = () => {\n    const { expanded, isLeaf, color } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        onNodeExpand,\n      },\n    } = this.context;\n\n    const onNodeExpandWrapper = (e) => {\n      // Do not call onNodeExpand if the node is a leaf node.\n      if (!isLeaf) {\n        onNodeExpand(e, this);\n      }\n    };\n\n    const switcherClass = classNames(\n      `${prefixClass}-switcher`,\n      { [`${prefixClass}-switcher_${(expanded ? 'open' : 'close')}`]: !isLeaf },\n    );\n    return (\n      <span\n        className={switcherClass}\n        onClick={onNodeExpandWrapper}\n        onKeyPress={e => callbackOnKeyPress(e, 'd', onNodeExpandWrapper)}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <SwitcherIcon\n          isLeaf={isLeaf}\n          isOpen={expanded}\n          color={color}\n        />\n      </span>\n    );\n  };\n\n  /**\n   * Override main render function,\n   * to enable overriding the sub-render functions\n   * for switcher, selector, etc.\n   */\n  render() {\n    const {\n      style, loading, level,\n      dragOver, dragOverGapTop, dragOverGapBottom,\n      isLeaf,\n      expanded, selected, checked, halfChecked,\n      onDragEnd: onDragEndProp,\n      expandable,\n      ...otherProps\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        filterTreeNode,\n        draggable,\n      },\n    } = this.context;\n    const disabled = this.isDisabled();\n    const dataAndAriaAttributeProps = getDataAndAria(otherProps);\n\n    const onDragEnd = (e) => {\n      onDragEndProp();\n      this.onDragEnd(e);\n    };\n\n    return (\n      <li\n        className={classNames('rc-tree-treenode', `level-${level}-treenode`, {\n          [`${prefixClass}-treenode-disabled`]: disabled,\n          [`${prefixClass}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixClass}-treenode-checkbox-checked`]: checked,\n          [`${prefixClass}-treenode-checkbox-indeterminate`]: halfChecked,\n          [`${prefixClass}-treenode-selected`]: selected,\n          [`${prefixClass}-treenode-loading`]: loading,\n\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(this),\n        })}\n        style={style}\n        role=\"treeitem\"\n        onDragEnter={draggable ? this.onDragEnter : undefined}\n        onDragOver={draggable ? this.onDragOver : undefined}\n        onDragLeave={draggable ? this.onDragLeave : undefined}\n        onDrop={draggable ? this.onDrop.bind(this) : undefined}\n        onDragEnd={draggable ? onDragEnd : undefined}\n        {...dataAndAriaAttributeProps}\n      >\n        {expandable ? this.renderSwitcher() : null}\n        {this.renderSelector()}\n        {this.renderChildren()}\n      </li>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUnion(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 16.433999 10.234\",\n    height: 12,\n    width: 18,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.117,-2.883)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m 11.467471,11.811278 c 0.198237,-0.322177 0.508,-1.011333 0.653661,-1.454255 0.659343,-2.0049141 0.44323,-4.2620847 -0.577734,-6.0340822 l -0.168844,-0.2930481 0.105744,0.017887 c 0.759902,0.1285441 1.368762,0.3699553 1.856675,0.7361658 1.988296,1.4923476 2.192477,4.3353549 0.434717,6.0529895 -0.641216,0.626581 -1.299647,0.94683 -2.294136,1.115833 l -0.108488,0.01844 z M 4.3162122,11.919169 C 1.9278944,11.487872 0.46692382,9.0323123 1.234873,6.7401372 1.5621727,5.763213 2.2610593,4.9489746 3.1840041,4.4693005 3.5978035,4.2542401 3.9427842,4.145371 4.5197023,4.0477802 L 4.6254464,4.0298927 4.4571836,4.3223069 C 3.4332707,6.1017061 3.2180432,8.3476022 3.878868,10.357023 c 0.1458466,0.443487 0.4554716,1.132155 0.6542959,1.455285 0.054471,0.08853 0.087814,0.159599 0.074096,0.157937 -0.013718,-0.0017 -0.1446898,-0.02465 -0.2910477,-0.05108 z M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\",\n    style: {\n      strokeWidth: 0.234,\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    }\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUnion, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/union.de5168c6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIntersection(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 12,\n    viewBox: \"0 0 16 10\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0,-3)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\",\n    style: {\n      strokeWidth: 0.234,\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    }\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIntersection, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/intersection.b0003109.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: \"5%\",\n  width: \"90%\",\n  height: \"100%\",\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 25.3804963846,\n  height: 16,\n  mask: \"url(#union-mask)\"\n}));\n\nfunction SvgComplement(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg14\",\n    viewBox: \"0 0 25.3804963846 16\",\n    height: 16,\n    width: 25.3804963846,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"union-mask\",\n    x: 0,\n    y: 0,\n    width: 25.3804963846,\n    height: 16\n  }, _ref2, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(4.69,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m 11.467471,11.811278 c 0.198237,-0.322177 0.508,-1.011333 0.653661,-1.454255 0.659343,-2.0049141 0.44323,-4.2620847 -0.577734,-6.0340822 l -0.168844,-0.2930481 0.105744,0.017887 c 0.759902,0.1285441 1.368762,0.3699553 1.856675,0.7361658 1.988296,1.4923476 2.192477,4.3353549 0.434717,6.0529895 -0.641216,0.626581 -1.299647,0.94683 -2.294136,1.115833 l -0.108488,0.01844 z M 4.3162122,11.919169 C 1.9278944,11.487872 0.46692382,9.0323123 1.234873,6.7401372 1.5621727,5.763213 2.2610593,4.9489746 3.1840041,4.4693005 3.5978035,4.2542401 3.9427842,4.145371 4.5197023,4.0477802 L 4.6254464,4.0298927 4.4571836,4.3223069 C 3.4332707,6.1017061 3.2180432,8.3476022 3.878868,10.357023 c 0.1458466,0.443487 0.4554716,1.132155 0.6542959,1.455285 0.054471,0.08853 0.087814,0.159599 0.074096,0.157937 -0.013718,-0.0017 -0.1446898,-0.02465 -0.2910477,-0.05108 z M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\",\n    style: {\n      strokeWidth: 0.234,\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    fill: \"black\"\n  })))), _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgComplement, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/complement.c220ca8c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from 'react';\nimport PopoverMenu from './PopoverMenu';\nimport {\n  handleImportJSON,\n  handleImportTabular,\n} from './io';\nimport {\n  MIME_TYPE_JSON,\n  MIME_TYPE_TABULAR,\n} from './constants';\n\nimport { ReactComponent as SetUnionSVG } from '../../assets/sets/union.svg';\nimport { ReactComponent as SetIntersectionSVG } from '../../assets/sets/intersection.svg';\nimport { ReactComponent as SetComplementSVG } from '../../assets/sets/complement.svg';\n\n/**\n * A plus button for creating or importing set hierarchies.\n * @param {object} props\n * @param {string} props.datatype The data type to validate imported hierarchies against.\n * @param {function} props.onError A callback to pass error message strings.\n * @param {function} props.onImportTree A callback to pass successfully-validated tree objects.\n * @param {function} props.onCreateLevelZeroNode A callback to create a new empty\n * level zero node.\n * @param {boolean} props.importable Is importing allowed?\n * If not, the import button will not be rendered.\n * @param {boolean} props.editable Is editing allowed?\n * If not, the create button will not be rendered.\n */\nexport function PlusButton(props) {\n  const {\n    datatype, onError, onImportTree, onCreateLevelZeroNode,\n    importable, editable,\n  } = props;\n\n  /**\n   * Import a file, then process the imported data via the supplied handler function.\n   * @param {Function} importHandler The function to process the imported data.\n   * @param {string} mimeType The accepted mime type for the file upload input.\n   * @returns {Function} An import function corresponding to the supplied parameters.\n   */\n  const onImport = useCallback((importHandler, mimeType) => () => {\n    const uploadInputNode = document.createElement('input');\n    uploadInputNode.setAttribute('type', 'file');\n    uploadInputNode.setAttribute('accept', mimeType);\n    document.body.appendChild(uploadInputNode); // required for firefox\n    uploadInputNode.click();\n    uploadInputNode.addEventListener('change', (event) => {\n      if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n        onError('Local file reading APIs are not fully supported in this browser.');\n        return;\n      }\n      const { files } = event.target;\n      if (!files || files.length !== 1) {\n        onError('Incorrect number of files selected.');\n        return;\n      }\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        const { result } = reader;\n        try {\n          const treeToImport = importHandler(result, datatype);\n          onError(false); // Clear any previous import error.\n          onImportTree(treeToImport);\n        } catch (e) {\n          onError(e.message);\n        }\n      }, false);\n      reader.readAsText(files[0]);\n    });\n    uploadInputNode.remove();\n  }, [datatype, onError, onImportTree]);\n\n  const menuConfig = [\n    ...(editable ? [\n      {\n        title: 'Create hierarchy',\n        handler: onCreateLevelZeroNode,\n        handlerKey: 'n',\n      },\n    ] : []),\n    ...(importable ? [\n      {\n        title: 'Import hierarchy',\n        subtitle: '(from CSV file)',\n        handler: onImport(handleImportTabular, MIME_TYPE_TABULAR),\n        handlerKey: 'c',\n      },\n      {\n        title: 'Import hierarchy',\n        subtitle: '(from JSON file)',\n        handler: onImport(handleImportJSON, MIME_TYPE_JSON),\n        handlerKey: 'j',\n      },\n    ] : []),\n  ];\n\n  return (menuConfig.length > 0 ? (\n    <PopoverMenu\n      menuConfig={menuConfig}\n    >\n      <button className=\"plus-button\" type=\"submit\">+</button>\n    </PopoverMenu>\n  ) : null);\n}\n\n/**\n * Set operations buttons (union, intersection, complement)\n * and a view checked sets button.\n * @param {object} props\n * @param {function} props.onUnion A callback for the union button.\n * @param {function} props.onIntersection A callback for the intersection button.\n * @param {function} props.onComplement A callback for the complement button.\n * @param {boolean} props.operatable Are set operations allowed?\n * If not, the union, intersection, and complement buttons will not be rendered.\n */\nexport function SetOperationButtons(props) {\n  const {\n    onUnion,\n    onIntersection,\n    onComplement,\n    operatable,\n    hasCheckedSetsToUnion,\n    hasCheckedSetsToIntersect,\n    hasCheckedSetsToComplement,\n  } = props;\n\n  return (\n    <>\n      {operatable && (\n        <>\n          <button\n            onClick={onUnion}\n            title=\"New set from union of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToUnion}\n          >\n            <SetUnionSVG />\n          </button>\n          <button\n            onClick={onIntersection}\n            title=\"New set from intersection of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToIntersect}\n          >\n            <SetIntersectionSVG />\n          </button>\n          <button\n            onClick={onComplement}\n            title=\"New set from complement of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToComplement}\n          >\n            <SetComplementSVG />\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState, useMemo } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Tree from './Tree';\nimport TreeNode from './TreeNode';\nimport { PlusButton, SetOperationButtons } from './SetsManagerButtons';\nimport { nodeToRenderProps } from './cell-set-utils';\nimport { DEFAULT_COLOR } from '../utils';\nimport { pathToKey } from './utils';\n\nfunction processNode(node, prevPath, setColor) {\n  const nodePath = [...prevPath, node.name];\n  return {\n    ...node,\n    ...(node.children ? ({\n      children: node.children\n        .map(c => processNode(c, nodePath, setColor)),\n    }) : {}),\n    color: setColor?.find(d => isEqual(d.path, nodePath))?.color || DEFAULT_COLOR,\n  };\n}\n\nfunction processSets(sets, setColor) {\n  return {\n    ...sets,\n    tree: sets ? sets.tree.map(lzn => processNode(lzn, [], setColor)) : [],\n  };\n}\n\nfunction getAllKeys(node, path = []) {\n  if (!node) {\n    return null;\n  }\n  const newPath = [...path, node.name];\n  if (node.children) {\n    return [pathToKey(newPath), ...node.children.flatMap(v => getAllKeys(v, newPath))];\n  }\n  return pathToKey(newPath);\n}\n\n/**\n * A generic hierarchical set manager component.\n * @prop {object} tree An object representing set hierarchies.\n * @prop {string} datatype The data type for sets (e.g. \"cell\")\n * @prop {function} clearPleaseWait A callback to signal that loading is complete.\n * @prop {boolean} draggable Whether tree nodes can be rearranged via drag-and-drop.\n * By default, true.\n * @prop {boolean} checkable Whether to show the \"Check\" menu button\n * and checkboxes for selecting multiple sets. By default, true.\n * @prop {boolean} editable Whether to show rename, delete, color, or create options.\n * By default, true.\n * @prop {boolean} expandable Whether to allow hierarchies to be expanded\n * to show the list or tree of sets contained. By default, true.\n * @prop {boolean} operatable Whether to enable union, intersection,\n * and complement operations on checked sets. By default, true.\n * @prop {boolean} exportable Whether to enable exporting hierarchies and sets to files.\n * By default, true.\n * @prop {boolean} importable Whether to enable importing hierarchies from files.\n * By default, true.\n * @prop {function} onError Function to call with error messages (failed import validation, etc).\n * @prop {function} onCheckNode Function to call when a single node has been checked or un-checked.\n * @prop {function} onExpandNode Function to call when a node has been expanded.\n * @prop {function} onDropNode Function to call when a node has been dragged-and-dropped.\n * @prop {function} onCheckLevel Function to call when an entire hierarchy level has been selected,\n * via the \"Color by cluster\" and \"Color by subcluster\" buttons below collapsed level zero nodes.\n * @prop {function} onNodeSetColor Function to call when a new node color has been selected.\n * @prop {function} onNodeSetName Function to call when a node has been renamed.\n * @prop {function} onNodeRemove Function to call when the user clicks the \"Delete\" menu button\n * to remove a node.\n * @prop {function} onNodeView Function to call when the user wants to view the set associated\n * with a particular node.\n * @prop {function} onImportTree Function to call when a tree has been imported\n * using the \"plus\" button.\n * @prop {function} onCreateLevelZeroNode Function to call when a user clicks the \"Create hierarchy\"\n * menu option using the \"plus\" button.\n * @prop {function} onExportLevelZeroNode Function to call when a user wants to\n * export an entire hierarchy via the \"Export hierarchy\" menu button for a\n * particular level zero node.\n * @prop {function} onExportSet Function to call when a user wants to export a set associated with\n * a particular node via the \"Export set\" menu button.\n * @prop {function} onUnion Function to call when a user wants to create a new set from the union\n * of the sets associated with the currently-checked nodes.\n * @prop {function} onIntersection Function to call when a user wants to create a new set from the\n * intersection of the sets associated with the currently-checked nodes.\n * @prop {function} onComplement Function to call when a user wants to create a new set from the\n * complement of the (union of the) sets associated with the currently-checked nodes.\n * @prop {function} onView Function to call when a user wants to view the sets\n * associated with the currently-checked nodes.\n */\nexport default function SetsManager(props) {\n  const {\n    sets,\n    additionalSets,\n    setColor, // TODO: use this\n    levelSelection: checkedLevel,\n    setSelection,\n    setExpansion,\n    hasColorEncoding,\n    datatype,\n    draggable = true,\n    checkable = true,\n    editable = true,\n    expandable = true,\n    operatable = true,\n    exportable = true,\n    importable = true,\n    onError,\n    onCheckNode,\n    onExpandNode,\n    onDropNode,\n    onCheckLevel,\n    onNodeSetColor,\n    onNodeSetName,\n    onNodeCheckNewName,\n    onNodeRemove,\n    onNodeView,\n    onImportTree,\n    onCreateLevelZeroNode,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    onUnion,\n    onIntersection,\n    onComplement,\n    hasCheckedSetsToUnion,\n    hasCheckedSetsToIntersect,\n    hasCheckedSetsToComplement,\n  } = props;\n\n  const isChecking = true;\n  const autoExpandParent = true;\n  const [isDragging, setIsDragging] = useState(false);\n  const [isEditingNodeName, setIsEditingNodeName] = useState(null);\n\n  const processedSets = useMemo(() => processSets(\n    sets, setColor,\n  ), [sets, setColor]);\n  const processedAdditionalSets = useMemo(() => processSets(\n    additionalSets, setColor,\n  ), [additionalSets, setColor]);\n\n  const additionalSetKeys = (processedAdditionalSets\n    ? processedAdditionalSets.tree.flatMap(v => getAllKeys(v, []))\n    : []\n  );\n\n  const allSetSelectionKeys = (setSelection || []).map(pathToKey);\n  const allSetExpansionKeys = (setExpansion || []).map(pathToKey);\n\n  const setSelectionKeys = allSetSelectionKeys.filter(k => !additionalSetKeys.includes(k));\n  const setExpansionKeys = allSetExpansionKeys.filter(k => !additionalSetKeys.includes(k));\n\n  const additionalSetSelectionKeys = allSetSelectionKeys.filter(k => additionalSetKeys.includes(k));\n  const additionalSetExpansionKeys = allSetExpansionKeys.filter(k => additionalSetKeys.includes(k));\n\n  /**\n   * Recursively render TreeNode components.\n   * @param {object[]} nodes An array of node objects.\n   * @returns {TreeNode[]|null} Array of TreeNode components or null.\n   */\n  function renderTreeNodes(nodes, readOnly, currPath) {\n    if (!nodes) {\n      return null;\n    }\n    return nodes.map((node) => {\n      const newPath = [...currPath, node.name];\n      return (\n        <TreeNode\n          key={pathToKey(newPath)}\n          {...nodeToRenderProps(node, newPath, setColor)}\n\n          isEditing={isEqual(isEditingNodeName, newPath)}\n\n          datatype={datatype}\n          draggable={draggable && !readOnly}\n          editable={editable && !readOnly}\n          checkable={checkable}\n          expandable={expandable}\n          exportable={exportable}\n\n          hasColorEncoding={hasColorEncoding}\n          isChecking={isChecking}\n          checkedLevelPath={checkedLevel ? checkedLevel.levelZeroPath : null}\n          checkedLevelIndex={checkedLevel ? checkedLevel.levelIndex : null}\n\n          onCheckNode={onCheckNode}\n          onCheckLevel={onCheckLevel}\n          onNodeView={onNodeView}\n          onNodeSetColor={onNodeSetColor}\n          onNodeSetName={(targetPath, name) => {\n            onNodeSetName(targetPath, name);\n            setIsEditingNodeName(null);\n          }}\n          onNodeCheckNewName={onNodeCheckNewName}\n          onNodeSetIsEditing={setIsEditingNodeName}\n          onNodeRemove={onNodeRemove}\n          onExportLevelZeroNodeJSON={onExportLevelZeroNodeJSON}\n          onExportLevelZeroNodeTabular={onExportLevelZeroNodeTabular}\n          onExportSetJSON={onExportSetJSON}\n\n          disableTooltip={isDragging}\n          onDragStart={() => setIsDragging(true)}\n          onDragEnd={() => setIsDragging(false)}\n        >\n          {renderTreeNodes(node.children, readOnly, newPath)}\n        </TreeNode>\n      );\n    });\n  }\n\n  return (\n    <div className=\"sets-manager\">\n      <div className=\"sets-manager-tree\">\n        <Tree\n          draggable={false}\n          checkable={checkable}\n\n          checkedKeys={setSelectionKeys}\n          expandedKeys={setExpansionKeys}\n          autoExpandParent={autoExpandParent}\n\n          onCheck={(checkedKeys, info) => onCheckNode(\n            info.node.props.nodeKey,\n            info.checked,\n          )}\n          onExpand={(expandedKeys, info) => onExpandNode(\n            expandedKeys,\n            info.node.props.nodeKey,\n            info.expanded,\n          )}\n        >\n          {renderTreeNodes(processedSets.tree, true, [])}\n        </Tree>\n        <Tree\n          draggable /* TODO */\n          checkable={checkable}\n\n          checkedKeys={additionalSetSelectionKeys}\n          expandedKeys={additionalSetExpansionKeys}\n          autoExpandParent={autoExpandParent}\n\n          onCheck={(checkedKeys, info) => onCheckNode(\n            info.node.props.nodeKey,\n            info.checked,\n          )}\n          onExpand={(expandedKeys, info) => onExpandNode(\n            expandedKeys,\n            info.node.props.nodeKey,\n            info.expanded,\n          )}\n          onDrop={(info) => {\n            const { eventKey: dropKey } = info.node.props;\n            const { eventKey: dragKey } = info.dragNode.props;\n            const { dropToGap, dropPosition } = info;\n            onDropNode(dropKey, dragKey, dropPosition, dropToGap);\n          }}\n        >\n          {renderTreeNodes(processedAdditionalSets.tree, false, [])}\n        </Tree>\n\n        <PlusButton\n          datatype={datatype}\n          onError={onError}\n          onImportTree={onImportTree}\n          onCreateLevelZeroNode={onCreateLevelZeroNode}\n          importable={importable}\n          editable={editable}\n        />\n      </div>\n      {isChecking ? (\n        <div className=\"set-operation-buttons\">\n          <SetOperationButtons\n            onUnion={onUnion}\n            onIntersection={onIntersection}\n            onComplement={onComplement}\n            operatable={operatable}\n\n            hasCheckedSetsToUnion={hasCheckedSetsToUnion}\n            hasCheckedSetsToIntersect={hasCheckedSetsToIntersect}\n            hasCheckedSetsToComplement={hasCheckedSetsToComplement}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React, {\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport packageJson from '../../../package.json';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetWarning,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport SetsManager from './SetsManager';\nimport TitleInfo from '../TitleInfo';\nimport {\n  treeExportLevelZeroNode,\n  treeExportSet,\n  treeToExpectedCheckedLevel,\n  nodeToLevelDescendantNamePaths,\n  treeToIntersection,\n  treeToUnion,\n  treeToComplement,\n  treeFindNodeByNamePath,\n  treesConflict,\n  nodeTransform,\n  nodeAppendChild,\n  nodePrependChild,\n  nodeInsertChild,\n  filterNode,\n  treeInitialize,\n  initializeCellSetColor,\n} from './cell-set-utils';\nimport {\n  isEqualOrPrefix,\n  tryRenamePath,\n  PATH_SEP,\n} from './utils';\nimport {\n  downloadForUser,\n  handleExportJSON,\n  handleExportTabular,\n  tryUpgradeTreeToLatestSchema,\n} from './io';\nimport {\n  FILE_EXTENSION_JSON,\n  FILE_EXTENSION_TABULAR,\n  SETS_DATATYPE_CELL,\n} from './constants';\nimport { useUrls, useReady } from '../hooks';\nimport {\n  setCellSelection,\n  mergeCellSets,\n  getNextNumberedNodeName,\n} from '../utils';\nimport { useCellsData, useCellSetsData } from '../data-hooks';\n\nconst CELL_SETS_DATA_TYPES = ['cells', 'cell-sets'];\n\n/**\n * A subscriber wrapper around the SetsManager component\n * for the 'cell' datatype.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function CellSetsManagerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Cell Sets',\n  } = props;\n\n  const loaders = useLoaders();\n  const setWarning = useSetWarning();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n    cellColorEncoding,\n  }, {\n    setCellSetSelection,\n    setCellColorEncoding,\n    setCellSetColor,\n    setAdditionalCellSets,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSets, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    CELL_SETS_DATA_TYPES,\n  );\n\n  const [cellSetExpansion, setCellSetExpansion] = useState([]);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    setCellSetExpansion([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  // Validate and upgrade the additionalCellSets.\n  useEffect(() => {\n    if (additionalCellSets) {\n      let upgradedCellSets;\n      try {\n        upgradedCellSets = tryUpgradeTreeToLatestSchema(additionalCellSets, SETS_DATATYPE_CELL);\n      } catch (e) {\n        setWarning(e.message);\n        return;\n      }\n      setAdditionalCellSets(upgradedCellSets);\n    }\n  }, [additionalCellSets, setAdditionalCellSets, setWarning]);\n\n  // Get an array of all cell IDs to use for set complement operations.\n  const allCellIds = useMemo(() => (cells ? Object.keys(cells) : []), [cells]);\n\n  // A helper function for updating the encoding for cell colors,\n  // which may have previously been set to 'geneSelection'.\n  function setCellSetColorEncoding() {\n    setCellColorEncoding('cellSetSelection');\n  }\n\n  // Merged cell sets are only to be used for convenience when reading\n  // (if writing: update either `cellSets` _or_ `additionalCellSets`).\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // Infer the state of the \"checked level\" radio button based on the selected cell sets.\n  const checkedLevel = useMemo(() => {\n    if (cellSetSelection && cellSetSelection.length > 0\n    && mergedCellSets && mergedCellSets.tree.length > 0) {\n      return treeToExpectedCheckedLevel(mergedCellSets, cellSetSelection);\n    }\n    return null;\n  }, [cellSetSelection, mergedCellSets]);\n\n  // Callback functions\n\n  // The user wants to select all nodes at a particular hierarchy level.\n  function onCheckLevel(levelZeroName, levelIndex) {\n    const lzn = mergedCellSets.tree.find(n => n.name === levelZeroName);\n    if (lzn) {\n      const newCellSetSelection = nodeToLevelDescendantNamePaths(lzn, levelIndex, [], true);\n      setCellSetSelection(newCellSetSelection);\n      setCellSetColorEncoding();\n    }\n  }\n\n  // The user wants to check or uncheck a cell set node.\n  function onCheckNode(targetKey, checked) {\n    const targetPath = (Array.isArray(targetKey) ? targetKey : targetKey.split(PATH_SEP));\n    if (!targetKey) {\n      return;\n    }\n    if (checked) {\n      setCellSetSelection([...cellSetSelection, targetPath]);\n    } else {\n      setCellSetSelection(cellSetSelection.filter(d => !isEqual(d, targetPath)));\n    }\n    setCellSetColorEncoding();\n  }\n\n  // The user wants to expand or collapse a node in the tree.\n  function onExpandNode(expandedKeys, targetKey, expanded) {\n    if (expanded) {\n      setCellSetExpansion(prev => ([...prev, targetKey.split(PATH_SEP)]));\n    } else {\n      setCellSetExpansion(prev => prev.filter(d => !isEqual(d, targetKey.split(PATH_SEP))));\n    }\n  }\n\n  // The user dragged a tree node and dropped it somewhere else in the tree\n  // to re-arrange or re-order the nodes.\n  // We need to verify that their drop target is valid, and if so, complete\n  // the tree re-arrangement.\n  function onDropNode(dropKey, dragKey, dropPosition, dropToGap) {\n    const dropPath = dropKey.split(PATH_SEP);\n    const dropNode = treeFindNodeByNamePath(additionalCellSets, dropPath);\n    if (!dropNode.children && !dropToGap) {\n      // Do not allow a node with a set (i.e. leaf) to become a child of another node with a set,\n      // as this will result in an internal node having a set, which we do not allow.\n      return;\n    }\n    const dropNodeLevel = dropPath.length - 1;\n    const dropNodeIsLevelZero = dropNodeLevel === 0;\n\n    // Get drag node.\n    const dragPath = dragKey.split(PATH_SEP);\n    const dragNode = treeFindNodeByNamePath(additionalCellSets, dragPath);\n\n    if (dropNodeIsLevelZero && dropToGap && !dragNode.children) {\n      // Do not allow a leaf node to become a level zero node.\n      return;\n    }\n\n    let dropParentNode;\n    let dropParentPath;\n    let dropNodeCurrIndex;\n    if (!dropNodeIsLevelZero) {\n      dropParentPath = dropPath.slice(0, -1);\n      dropParentNode = treeFindNodeByNamePath(additionalCellSets, dropParentPath);\n      dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.name === dropNode.name);\n    } else {\n      dropNodeCurrIndex = additionalCellSets.tree.findIndex(\n        lzn => lzn.name === dropNode.name,\n      );\n    }\n    // Further, only allow dragging if the dragged node will have a unique\n    // name among its new siblings.\n    let hasSiblingNameConflict;\n    const dragNodeName = dragNode.name;\n    if (!dropNodeIsLevelZero && dropToGap) {\n      hasSiblingNameConflict = dropParentNode.children\n        .find(c => c !== dragNode && c.name === dragNodeName);\n    } else if (!dropToGap) {\n      hasSiblingNameConflict = dropNode.children\n        .find(c => c !== dragNode && c.name === dragNodeName);\n    } else {\n      hasSiblingNameConflict = additionalCellSets.tree\n        .find(lzn => lzn !== dragNode && lzn.name === dragNodeName);\n    }\n\n    if (hasSiblingNameConflict) {\n      return;\n    }\n\n    // Remove the dragged object from its current position.\n    // Recursively check whether each node path\n    // matches the path of the node to delete.\n    // If so, return null, and then always use\n    // .filter(Boolean) to eliminate any null array elements.\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => filterNode(lzn, [], dragPath)).filter(Boolean),\n    };\n\n    // Update index values after temporarily removing the dragged node.\n    // Names are unique as children of their parents.\n    if (!dropNodeIsLevelZero) {\n      dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.name === dropNode.name);\n    } else {\n      dropNodeCurrIndex = nextAdditionalCellSets.tree.findIndex(\n        lzn => lzn.name === dropNode.name,\n      );\n    }\n    let newDragPath = [];\n    if (!dropToGap || !dropNodeIsLevelZero) {\n      let addChildFunction;\n      let checkPathFunction;\n      const newPath = [];\n      if (!dropToGap) {\n        // Append the dragNode to dropNode's children if dropping _onto_ the dropNode.\n        // Set dragNode as the last child of dropNode.\n        addChildFunction = n => nodeAppendChild(n, dragNode);\n        checkPathFunction = path => isEqual(path, dropPath);\n      } else if (!dropNodeIsLevelZero) {\n        // Prepend or insert the dragNode if dropping _between_ (above or below dropNode).\n        // The dropNode is at a level greater than zero,\n        // so it has a parent.\n        checkPathFunction = path => isEqual(path, dropParentPath);\n        if (dropPosition === -1) {\n          // Set dragNode as first child of dropParentNode.\n          addChildFunction = n => nodePrependChild(n, dragNode);\n        } else {\n          // Set dragNode before or after dropNode.\n          const insertIndex = dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0);\n          addChildFunction = n => nodeInsertChild(n, dragNode, insertIndex);\n        }\n      }\n      nextAdditionalCellSets.tree = nextAdditionalCellSets.tree.map(\n        node => nodeTransform(\n          node,\n          (n, path) => checkPathFunction(path),\n          (n) => {\n            const newNode = addChildFunction(n);\n            return newNode;\n          },\n          newPath,\n        ),\n      );\n      // Done\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [...newPath[0], dragNode.name];\n      setCellSetSelection([newDragPath]);\n    } else if (dropPosition === -1) {\n      // We need to drop the dragNode to level zero,\n      // and level zero nodes do not have parents.\n      // Set dragNode as first level zero node of the tree.\n      nextAdditionalCellSets.tree.unshift(dragNode);\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [dragNode.name];\n      setCellSetSelection([newDragPath]);\n    } else {\n      // Set dragNode before or after dropNode in level zero.\n      const insertIndex = dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0);\n      const newLevelZero = Array.from(nextAdditionalCellSets.tree);\n      newLevelZero.splice(insertIndex, 0, dragNode);\n      nextAdditionalCellSets.tree = newLevelZero;\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [dragNode.name];\n      setCellSetSelection([newDragPath]);\n    }\n    const oldColors = cellSetColor.filter(\n      i => isEqualOrPrefix(dragPath, i.path),\n    );\n    const newColors = oldColors.map(\n      i => (\n        {\n          ...i,\n          path: !isEqual(i.path, dragPath)\n            ? newDragPath.concat(i.path.slice(dragPath.length))\n            : newDragPath,\n        }\n      ),\n    );\n    const newCellSetColor = cellSetColor.filter(\n      i => !isEqualOrPrefix(dragPath, i.path),\n    );\n    newCellSetColor.push(...newColors);\n    setCellSetColor(newCellSetColor);\n  }\n\n  // The user wants to change the color of a cell set node.\n  function onNodeSetColor(targetPath, color) {\n    // Replace the color if an array element for this path already exists.\n    const prevNodeColor = cellSetColor?.find(d => isEqual(d.path, targetPath));\n    if (!prevNodeColor) {\n      setCellSetColor([\n        ...(cellSetColor || []),\n        {\n          path: targetPath,\n          color,\n        },\n      ]);\n    } else {\n      setCellSetColor([\n        ...cellSetColor.filter(d => !isEqual(d.path, targetPath)),\n        {\n          path: targetPath,\n          color,\n        },\n      ]);\n    }\n  }\n\n  // The user wants to change the name of a cell set node.\n  function onNodeSetName(targetPath, name) {\n    const nextNamePath = [...targetPath];\n    nextNamePath.pop();\n    nextNamePath.push(name);\n\n    // Recursively check whether each node path\n    // matches the path or a prefix of the path of the node to rename.\n    // If so, rename the node using the new path.\n    function renameNode(node, prevPath) {\n      if (isEqual([...prevPath, node.name], targetPath)) {\n        return {\n          ...node,\n          name,\n        };\n      }\n      if (!node.children) {\n        return node;\n      }\n      return {\n        ...node,\n        children: node.children.map(c => renameNode(c, [...prevPath, node.name])),\n      };\n    }\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => renameNode(lzn, [])),\n    };\n    // Change all paths that have this node as a prefix (i.e. descendants).\n    const nextCellSetColor = cellSetColor.map(d => ({\n      path: tryRenamePath(targetPath, d.path, nextNamePath),\n      color: d.color,\n    }));\n    const nextCellSetSelection = cellSetSelection.map(d => (\n      tryRenamePath(targetPath, d, nextNamePath)\n    ));\n    const nextCellSetExpansion = cellSetExpansion.map(d => (\n      tryRenamePath(targetPath, d, nextNamePath)\n    ));\n    // Need to update the node path everywhere it may be present.\n    setAdditionalCellSets(nextAdditionalCellSets);\n    setCellSetColor(nextCellSetColor);\n    setCellSetSelection(nextCellSetSelection);\n    setCellSetExpansion(nextCellSetExpansion);\n  }\n\n  // Each time the user types while renaming a cell set node,\n  // we need to check whether the potential new name conflicts\n  // with any existing cell set node names.\n  // If there are conflicts, we want to disable the \"Save\" button.\n  function onNodeCheckNewName(targetPath, name) {\n    const nextNamePath = [...targetPath];\n    nextNamePath.pop();\n    nextNamePath.push(name);\n    const hasConflicts = (\n      !isEqual(targetPath, nextNamePath)\n      && treeFindNodeByNamePath(additionalCellSets, nextNamePath)\n    );\n    return hasConflicts;\n  }\n\n  // The user wants to delete a cell set node, and has confirmed their choice.\n  function onNodeRemove(targetPath) {\n    // Recursively check whether each node path\n    // matches the path of the node to delete.\n    // If so, return null, and then always use\n    // .filter(Boolean) to eliminate any null array elements.\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => filterNode(lzn, [], targetPath)).filter(Boolean),\n    };\n    // Delete state for all paths that have this node\n    // path as a prefix (i.e. delete all descendents).\n    const nextCellSetColor = cellSetColor.filter(d => !isEqualOrPrefix(targetPath, d.path));\n    const nextCellSetSelection = cellSetSelection.filter(d => !isEqualOrPrefix(targetPath, d));\n    const nextCellSetExpansion = cellSetExpansion.filter(d => !isEqualOrPrefix(targetPath, d));\n    setAdditionalCellSets(nextAdditionalCellSets);\n    setCellSetColor(nextCellSetColor);\n    setCellSetSelection(nextCellSetSelection);\n    setCellSetExpansion(nextCellSetExpansion);\n  }\n\n  // The user wants to view (i.e. select) a particular node,\n  // or its expanded descendents.\n  function onNodeView(targetPath) {\n    // If parent node is clicked, and if it is expanded,\n    // then select the expanded descendent nodes.\n    const setsToView = [];\n    // Recursively determine which descendent nodes are currently expanded.\n    function viewNode(node, nodePath) {\n      if (cellSetExpansion.find(expandedPath => isEqual(nodePath, expandedPath))) {\n        if (node.children) {\n          node.children.forEach((c) => {\n            viewNode(c, [...nodePath, c.name]);\n          });\n        } else {\n          setsToView.push(nodePath);\n        }\n      } else {\n        setsToView.push(nodePath);\n      }\n    }\n    const targetNode = treeFindNodeByNamePath(mergedCellSets, targetPath);\n    viewNode(targetNode, targetPath);\n    setCellSetSelection(setsToView);\n    setCellSetColorEncoding();\n  }\n\n  // The user wants to create a new level zero node.\n  function onCreateLevelZeroNode() {\n    const nextName = getNextNumberedNodeName(additionalCellSets?.tree, 'My hierarchy ');\n    setAdditionalCellSets({\n      ...(additionalCellSets || treeInitialize(SETS_DATATYPE_CELL)),\n      tree: [\n        ...(additionalCellSets ? additionalCellSets.tree : []),\n        {\n          name: nextName,\n          children: [],\n        },\n      ],\n    });\n  }\n\n  // The user wants to create a new node corresponding to\n  // the union of the selected sets.\n  function onUnion() {\n    const newSet = treeToUnion(mergedCellSets, cellSetSelection);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Union ',\n    );\n  }\n\n  // The user wants to create a new node corresponding to\n  // the intersection of the selected sets.\n  function onIntersection() {\n    const newSet = treeToIntersection(mergedCellSets, cellSetSelection);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Intersection ',\n    );\n  }\n\n  // The user wants to create a new node corresponding to\n  // the complement of the selected sets.\n  function onComplement() {\n    const newSet = treeToComplement(mergedCellSets, cellSetSelection, allCellIds);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Complement ',\n    );\n  }\n\n  // The user wants to import a cell set hierarchy,\n  // probably from a CSV or JSON file.\n  function onImportTree(treeToImport) {\n    // Check for any naming conflicts with the current sets\n    // (both user-defined and dataset-defined) before importing.\n    const hasConflict = treesConflict(mergedCellSets, treeToImport);\n    if (!hasConflict) {\n      setAdditionalCellSets({\n        ...(additionalCellSets || treeInitialize(SETS_DATATYPE_CELL)),\n        tree: [\n          ...(additionalCellSets ? additionalCellSets.tree : []),\n          ...treeToImport.tree,\n        ],\n      });\n      // Automatically initialize set colors for the imported sets.\n      const importAutoSetColors = initializeCellSetColor(treeToImport, cellSetColor);\n      setCellSetColor([\n        ...cellSetColor,\n        ...importAutoSetColors,\n      ]);\n    }\n  }\n\n  // The user wants to download a particular hierarchy to a JSON file.\n  function onExportLevelZeroNodeJSON(nodePath) {\n    const {\n      treeToExport, nodeName,\n    } = treeExportLevelZeroNode(mergedCellSets, nodePath, SETS_DATATYPE_CELL, cellSetColor);\n    downloadForUser(\n      handleExportJSON(treeToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-hierarchy.${FILE_EXTENSION_JSON}`,\n    );\n  }\n\n  // The user wants to download a particular hierarchy to a CSV file.\n  function onExportLevelZeroNodeTabular(nodePath) {\n    const {\n      treeToExport, nodeName,\n    } = treeExportLevelZeroNode(mergedCellSets, nodePath, SETS_DATATYPE_CELL, cellSetColor);\n    downloadForUser(\n      handleExportTabular(treeToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-hierarchy.${FILE_EXTENSION_TABULAR}`,\n    );\n  }\n\n  // The user wants to download a particular set to a JSON file.\n  function onExportSetJSON(nodePath) {\n    const { setToExport, nodeName } = treeExportSet(mergedCellSets, nodePath);\n    downloadForUser(\n      handleExportJSON(setToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-set.${FILE_EXTENSION_JSON}`,\n      FILE_EXTENSION_JSON,\n    );\n  }\n  return (\n    <TitleInfo\n      title={title}\n      isScroll\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <SetsManager\n        setColor={cellSetColor}\n        sets={cellSets}\n        additionalSets={additionalCellSets}\n        levelSelection={checkedLevel}\n        setSelection={cellSetSelection}\n        setExpansion={cellSetExpansion}\n        hasColorEncoding={cellColorEncoding === 'cellSetSelection'}\n        draggable\n        datatype={SETS_DATATYPE_CELL}\n        onError={setWarning}\n        onCheckNode={onCheckNode}\n        onExpandNode={onExpandNode}\n        onDropNode={onDropNode}\n        onCheckLevel={onCheckLevel}\n        onNodeSetColor={onNodeSetColor}\n        onNodeSetName={onNodeSetName}\n        onNodeCheckNewName={onNodeCheckNewName}\n        onNodeRemove={onNodeRemove}\n        onNodeView={onNodeView}\n        onImportTree={onImportTree}\n        onCreateLevelZeroNode={onCreateLevelZeroNode}\n        onExportLevelZeroNodeJSON={onExportLevelZeroNodeJSON}\n        onExportLevelZeroNodeTabular={onExportLevelZeroNodeTabular}\n        onExportSetJSON={onExportSetJSON}\n        onUnion={onUnion}\n        onIntersection={onIntersection}\n        onComplement={onComplement}\n        hasCheckedSetsToUnion={cellSetSelection?.length > 1}\n        hasCheckedSetsToIntersect={cellSetSelection?.length > 1}\n        hasCheckedSetsToComplement={cellSetSelection?.length > 0}\n      />\n    </TitleInfo>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-param-reassign */\nimport { treeToCellColorsBySetNames } from './sets/cell-set-utils';\n\n// The functions defined here have been adapted from d3-interpolate,\n// d3-color, and d3-scale-chromatic.\n// Color string \"rgb(r,g,b)\" representations are replaced by color array [r, g, b]\n// representations, to allow them to work nicely with deck.gl,\n// without the need to converting back and forth between string and array formats.\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/431d21da776f97c632f53a855bd822edfbbcd56e/src/diverging/RdBu.js\n// eslint-disable-next-line max-len\nconst schemeRdBu = [[103, 0, 31], [178, 24, 43], [214, 96, 77], [244, 165, 130], [253, 219, 199], [247, 247, 247], [209, 229, 240], [146, 197, 222], [67, 147, 195], [33, 102, 172], [5, 48, 97]];\n// eslint-disable-next-line max-len\nconst schemePlasma = [[13, 8, 135], [16, 7, 136], [19, 7, 137], [22, 7, 138], [25, 6, 140], [27, 6, 141], [29, 6, 142], [32, 6, 143], [34, 6, 144], [36, 6, 145], [38, 5, 145], [40, 5, 146], [42, 5, 147], [44, 5, 148], [46, 5, 149], [47, 5, 150], [49, 5, 151], [51, 5, 151], [53, 4, 152], [55, 4, 153], [56, 4, 154], [58, 4, 154], [60, 4, 155], [62, 4, 156], [63, 4, 156], [65, 4, 157], [67, 3, 158], [68, 3, 158], [70, 3, 159], [72, 3, 159], [73, 3, 160], [75, 3, 161], [76, 2, 161], [78, 2, 162], [80, 2, 162], [81, 2, 163], [83, 2, 163], [85, 2, 164], [86, 1, 164], [88, 1, 164], [89, 1, 165], [91, 1, 165], [92, 1, 166], [94, 1, 166], [96, 1, 166], [97, 0, 167], [99, 0, 167], [100, 0, 167], [102, 0, 167], [103, 0, 168], [105, 0, 168], [106, 0, 168], [108, 0, 168], [110, 0, 168], [111, 0, 168], [113, 0, 168], [114, 1, 168], [116, 1, 168], [117, 1, 168], [119, 1, 168], [120, 1, 168], [122, 2, 168], [123, 2, 168], [125, 3, 168], [126, 3, 168], [128, 4, 168], [129, 4, 167], [131, 5, 167], [132, 5, 167], [134, 6, 166], [135, 7, 166], [136, 8, 166], [138, 9, 165], [139, 10, 165], [141, 11, 165], [142, 12, 164], [143, 13, 164], [145, 14, 163], [146, 15, 163], [148, 16, 162], [149, 17, 161], [150, 19, 161], [152, 20, 160], [153, 21, 159], [154, 22, 159], [156, 23, 158], [157, 24, 157], [158, 25, 157], [160, 26, 156], [161, 27, 155], [162, 29, 154], [163, 30, 154], [165, 31, 153], [166, 32, 152], [167, 33, 151], [168, 34, 150], [170, 35, 149], [171, 36, 148], [172, 38, 148], [173, 39, 147], [174, 40, 146], [176, 41, 145], [177, 42, 144], [178, 43, 143], [179, 44, 142], [180, 46, 141], [181, 47, 140], [182, 48, 139], [183, 49, 138], [184, 50, 137], [186, 51, 136], [187, 52, 136], [188, 53, 135], [189, 55, 134], [190, 56, 133], [191, 57, 132], [192, 58, 131], [193, 59, 130], [194, 60, 129], [195, 61, 128], [196, 62, 127], [197, 64, 126], [198, 65, 125], [199, 66, 124], [200, 67, 123], [201, 68, 122], [202, 69, 122], [203, 70, 121], [204, 71, 120], [204, 73, 119], [205, 74, 118], [206, 75, 117], [207, 76, 116], [208, 77, 115], [209, 78, 114], [210, 79, 113], [211, 81, 113], [212, 82, 112], [213, 83, 111], [213, 84, 110], [214, 85, 109], [215, 86, 108], [216, 87, 107], [217, 88, 106], [218, 90, 106], [218, 91, 105], [219, 92, 104], [220, 93, 103], [221, 94, 102], [222, 95, 101], [222, 97, 100], [223, 98, 99], [224, 99, 99], [225, 100, 98], [226, 101, 97], [226, 102, 96], [227, 104, 95], [228, 105, 94], [229, 106, 93], [229, 107, 93], [230, 108, 92], [231, 110, 91], [231, 111, 90], [232, 112, 89], [233, 113, 88], [233, 114, 87], [234, 116, 87], [235, 117, 86], [235, 118, 85], [236, 119, 84], [237, 121, 83], [237, 122, 82], [238, 123, 81], [239, 124, 81], [239, 126, 80], [240, 127, 79], [240, 128, 78], [241, 129, 77], [241, 131, 76], [242, 132, 75], [243, 133, 75], [243, 135, 74], [244, 136, 73], [244, 137, 72], [245, 139, 71], [245, 140, 70], [246, 141, 69], [246, 143, 68], [247, 144, 68], [247, 145, 67], [247, 147, 66], [248, 148, 65], [248, 149, 64], [249, 151, 63], [249, 152, 62], [249, 154, 62], [250, 155, 61], [250, 156, 60], [250, 158, 59], [251, 159, 58], [251, 161, 57], [251, 162, 56], [252, 163, 56], [252, 165, 55], [252, 166, 54], [252, 168, 53], [252, 169, 52], [253, 171, 51], [253, 172, 51], [253, 174, 50], [253, 175, 49], [253, 177, 48], [253, 178, 47], [253, 180, 47], [253, 181, 46], [254, 183, 45], [254, 184, 44], [254, 186, 44], [254, 187, 43], [254, 189, 42], [254, 190, 42], [254, 192, 41], [253, 194, 41], [253, 195, 40], [253, 197, 39], [253, 198, 39], [253, 200, 39], [253, 202, 38], [253, 203, 38], [252, 205, 37], [252, 206, 37], [252, 208, 37], [252, 210, 37], [251, 211, 36], [251, 213, 36], [251, 215, 36], [250, 216, 36], [250, 218, 36], [249, 220, 36], [249, 221, 37], [248, 223, 37], [248, 225, 37], [247, 226, 37], [247, 228, 37], [246, 230, 38], [246, 232, 38], [245, 233, 38], [245, 235, 39], [244, 237, 39], [243, 238, 39], [243, 240, 39], [242, 242, 39], [241, 244, 38], [241, 245, 37], [240, 247, 36], [240, 249, 33]];\n\n// Reference: https://github.com/d3/d3-interpolate/blob/96d54051d1c2fec55f240edd0ec5401715b10390/src/rgb.js\nfunction rgbSpline(spline) {\n  return (colors) => {\n    const n = colors.length;\n    let r = new Array(n);\n    let g = new Array(n);\n    let b = new Array(n);\n    let i; let\n      color;\n    // eslint-disable-next-line no-plusplus\n    for (i = 0; i < n; ++i) {\n      color = [colors[i][0], colors[i][1], colors[i][2]];\n      r[i] = color[0] || 0;\n      g[i] = color[1] || 0;\n      b[i] = color[2] || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    return t => [r(t), g(t), b(t)];\n  };\n}\n\n// Reference: https://github.com/d3/d3-interpolate/blob/594a32af1fe1118812b439012c2cb742e907c0c0/src/basis.js\nfunction basis(values) {\n  function innerBasis(t1, v0, v1, v2, v3) {\n    const t2 = t1 * t1; const\n      t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n          + (4 - 6 * t2 + 3 * t3) * v1\n          + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n          + t3 * v3) / 6;\n  }\n\n  const n = values.length - 1;\n  return (t) => {\n    const i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n);\n    const v1 = values[i];\n    const v2 = values[i + 1];\n    const v0 = i > 0 ? values[i - 1] : 2 * v1 - v2;\n    const v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return innerBasis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/ade54c13e8dfdb9807801a794eaec1a37f926b8a/src/ramp.js\nconst interpolateRgbBasis = rgbSpline(basis);\n\nfunction interpolateSequentialMulti(range) {\n  const n = range.length;\n  return t => range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n}\n\nexport const interpolateRdBu = interpolateRgbBasis(schemeRdBu);\nexport const interpolatePlasma = interpolateSequentialMulti(schemePlasma);\n\n\n/**\n * Get a mapping of cell IDs to cell colors based on\n * gene / cell set selection coordination state.\n * @param {object} params\n * @param {object} params.expressionMatrix { rows, cols, matrix }\n * @param {array} params.geneSelection Array of selected gene IDs.\n * @param {object} params.cellSets The cell sets tree.\n * @param {object} params.cellSetSelection Selected cell sets.\n * @param {string} params.cellColorEncoding Which to use for\n * coloring: gene expression or cell sets?\n * @returns {Map} Mapping from cell IDs to [r, g, b] color arrays.\n */\nexport function getCellColors(params) {\n  const {\n    cellColorEncoding,\n    expressionData,\n    cellSets, cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs,\n  } = params;\n  if (cellColorEncoding === 'geneSelection' && expressionData && expressionDataAttrs) {\n    // TODO: allow other color maps.\n    const geneExpColormap = interpolatePlasma;\n    const colors = new Map();\n    for (let i = 0; i < expressionData.length; i += 1) {\n      const value = expressionData[i];\n      const cellColor = geneExpColormap(value / 255);\n      colors.set(expressionDataAttrs.rows[i], cellColor);\n    }\n    return colors;\n  } if (cellColorEncoding === 'cellSetSelection' && cellSetSelection && cellSets) {\n    // Cell sets can potentially lack set colors since the color property\n    // is not a required part of the schema.\n    // The `initializeSets` function fills in any empty colors\n    // with defaults and returns the processed tree object.\n    return treeToCellColorsBySetNames(cellSets, cellSetSelection, cellSetColor);\n  }\n  return new Map();\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-underscore-dangle */\n// File adopted from nebula.gl's SelectionLayer\n// https://github.com/uber/nebula.gl/blob/8e9c2ec8d7cf4ca7050909ed826eb847d5e2cd9c/modules/layers/src/layers/selection-layer.js\nimport { CompositeLayer } from 'deck.gl';\nimport { polygon as turfPolygon, point as turfPoint } from '@turf/helpers';\nimport booleanWithin from '@turf/boolean-within';\nimport booleanContains from '@turf/boolean-contains';\nimport booleanOverlap from '@turf/boolean-overlap';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { EditableGeoJsonLayer, SELECTION_TYPE } from 'nebula.gl';\nimport { DrawRectangleMode, DrawPolygonByDraggingMode, ViewMode } from '@nebula.gl/edit-modes';\n\nconst EDIT_TYPE_ADD = 'addFeature';\nconst EDIT_TYPE_CLEAR = 'clearFeatures';\n\n// Customize the click handlers for the rectangle and polygon tools,\n// so that clicking triggers the `onEdit` callback.\nclass ClickableDrawRectangleMode extends DrawRectangleMode {\n  // eslint-disable-next-line class-methods-use-this\n  handleClick(event, props) {\n    props.onEdit({ editType: EDIT_TYPE_CLEAR });\n  }\n}\n\nclass ClickableDrawPolygonByDraggingMode extends DrawPolygonByDraggingMode {\n  // eslint-disable-next-line class-methods-use-this\n  handleClick(event, props) {\n    props.onEdit({ editType: EDIT_TYPE_CLEAR });\n  }\n}\n\nconst MODE_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: ClickableDrawRectangleMode,\n  [SELECTION_TYPE.POLYGON]: ClickableDrawPolygonByDraggingMode,\n};\n\nconst defaultProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: () => {},\n};\n\nconst EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nconst LAYER_ID_GEOJSON = 'selection-geojson';\n\nconst PASS_THROUGH_PROPS = [\n  'lineWidthScale',\n  'lineWidthMinPixels',\n  'lineWidthMaxPixels',\n  'lineWidthUnits',\n  'lineJointRounded',\n  'lineMiterLimit',\n  'pointRadiusScale',\n  'pointRadiusMinPixels',\n  'pointRadiusMaxPixels',\n  'lineDashJustified',\n  'getLineColor',\n  'getFillColor',\n  'getRadius',\n  'getLineWidth',\n  'getLineDashArray',\n  'getTentativeLineDashArray',\n  'getTentativeLineColor',\n  'getTentativeFillColor',\n  'getTentativeLineWidth',\n  'editHandlePointRadiusScale',\n  'editHandlePointRadiusMinPixels',\n  'editHandlePointRadiusMaxPixels',\n  'getEditHandlePointColor',\n  'getEditHandlePointRadius',\n  'modeHandlers',\n];\n\nexport default class SelectionLayer extends CompositeLayer {\n  _selectPolygonObjects(coordinates) {\n    const {\n      onSelect,\n      getCellCoords,\n      cellsQuadTree,\n      flipY,\n    } = this.props;\n\n    const flippedCoordinates = (flipY\n      ? coordinates.map(poly => poly.map(p => ([p[0], -p[1]])))\n      : coordinates);\n\n    // Convert the selection to a turf polygon object.\n    const selectedPolygon = turfPolygon(flippedCoordinates);\n\n    // Create an array to store the results.\n    const pickingInfos = [];\n\n    // quadtree.visit() takes a callback that returns a boolean:\n    // If true returned, then the children of the node are _not_ visited.\n    // If false returned, then the children of the node are visited.\n    // Reference: https://github.com/d3/d3-quadtree#quadtree_visit\n    cellsQuadTree.visit((node, x0, y0, x1, y1) => {\n      const nodePoints = [[[x0, y0], [x1, y0], [x1, y1], [x0, y1], [x0, y0]]];\n      const nodePolygon = turfPolygon(nodePoints);\n\n      const nodePolygonContainsSelectedPolygon = booleanContains(nodePolygon, selectedPolygon);\n      const nodePolygonWithinSelectedPolygon = booleanWithin(nodePolygon, selectedPolygon);\n      const nodePolygonOverlapsSelectedPolgyon = booleanOverlap(nodePolygon, selectedPolygon);\n\n      if (!nodePolygonContainsSelectedPolygon\n        && !nodePolygonWithinSelectedPolygon\n        && !nodePolygonOverlapsSelectedPolgyon) {\n        // We are not interested in anything below this node,\n        // so return true because we are done with this node.\n        return true;\n      }\n\n      // This node made it past the above return statement, so it must either\n      // contain, be within, or overlap with the selected polygon.\n\n      // Check if this is a leaf node.\n      if (node.data\n        && booleanPointInPolygon(turfPoint(getCellCoords(node.data[1])), selectedPolygon)) {\n        // This node has data, so it is a leaf node representing one data point,\n        // and we have verified that the point is in the selected polygon.\n        pickingInfos.push(node.data);\n      }\n\n      // Return false because we are not done.\n      // We want to visit the children of this node.\n      return false;\n    });\n\n    onSelect({ pickingInfos });\n  }\n\n  renderLayers() {\n    const { onSelect } = this.props;\n    const mode = MODE_MAP[this.props.selectionType] || ViewMode;\n\n    const inheritedProps = {};\n    PASS_THROUGH_PROPS.forEach((p) => {\n      if (this.props[p] !== undefined) inheritedProps[p] = this.props[p];\n    });\n    const layers = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: LAYER_ID_GEOJSON,\n          pickable: true,\n          mode,\n          modeConfig: {\n            dragToDraw: true,\n          },\n          selectedFeatureIndexes: [],\n          data: EMPTY_DATA,\n          onEdit: ({ updatedData, editType }) => {\n            if (editType === EDIT_TYPE_ADD) {\n              const { coordinates } = updatedData.features[0].geometry;\n              this._selectPolygonObjects(coordinates);\n            } else if (editType === EDIT_TYPE_CLEAR) {\n              // We want to select an empty array to clear any previous selection.\n              onSelect({ pickingInfos: [] });\n            }\n          },\n          ...inheritedProps,\n        }),\n      ),\n    ];\n\n    return layers;\n  }\n}\n\nSelectionLayer.layerName = 'SelectionLayer';\nSelectionLayer.defaultProps = defaultProps;\n","import { COORDINATE_SYSTEM } from 'deck.gl';\nimport { DataFilterExtension } from '@deck.gl/extensions'; // eslint-disable-line import/no-extraneous-dependencies\nimport SelectionLayer from './SelectionLayer';\n\n/**\n * Convert a DeckGL layer ID to a \"base\" layer ID for selection.\n * @param {string} layerId The layer ID to convert.\n * @returns {string} The base layer ID.\n */\nfunction getBaseLayerId(layerId) {\n  return `base-${layerId}`;\n}\n\n/**\n * Convert a DeckGL layer ID to a \"selected\" layer ID for selection.\n * @param {string} layerId The layer ID to convert.\n * @returns {string} The base layer ID.\n */\nfunction getSelectedLayerId(layerId) {\n  return `selected-${layerId}`;\n}\n\n/**\n * Construct DeckGL selection layers.\n * @param {string} tool\n * @param {number} zoom\n * @param {string} cellBaseLayerId\n * @param {function} getCellCoords\n * @param {function} updateCellsSelection\n * @returns {object[]} The array of DeckGL selection layers.\n */\nexport function getSelectionLayers(\n  tool,\n  zoom,\n  layerId,\n  getCellCoords,\n  updateCellsSelection,\n  cellsQuadTree,\n  flipY = false,\n) {\n  if (!tool) {\n    return [];\n  }\n\n  const cellBaseLayerId = getBaseLayerId(layerId);\n  const editHandlePointRadius = 5 / (zoom + 16);\n\n  return [new SelectionLayer({\n    id: 'selection',\n    flipY,\n    cellsQuadTree,\n    getCellCoords,\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    selectionType: tool,\n    onSelect: ({ pickingInfos }) => {\n      const cellIds = pickingInfos.map(cellObj => cellObj[0]);\n      if (updateCellsSelection) {\n        updateCellsSelection(cellIds);\n      }\n    },\n    layerIds: [cellBaseLayerId],\n    getTentativeFillColor: () => [255, 255, 255, 95],\n    getTentativeLineColor: () => [143, 143, 143, 255],\n    getTentativeLineDashArray: () => [7, 4],\n    lineWidthMinPixels: 2,\n    lineWidthMaxPixels: 2,\n    getEditHandlePointColor: () => [0xff, 0xff, 0xff, 0xff],\n    getEditHandlePointRadius: () => editHandlePointRadius,\n    editHandlePointRadiusScale: 1,\n    editHandlePointRadiusMinPixels: editHandlePointRadius,\n    editHandlePointRadiusMaxPixels: 2 * editHandlePointRadius,\n  })];\n}\n\n/**\n * Get deck.gl layer props for selection overlays.\n * @param {object} props\n * @returns {object} Object with two properties,\n * overlay: overlayProps, base: baseProps,\n * where the values are deck.gl layer props.\n */\nexport function overlayBaseProps(props) {\n  const {\n    id, getColor, data, isSelected, ...rest\n  } = props;\n  return {\n    overlay: {\n      id: getSelectedLayerId(id),\n      getFillColor: getColor,\n      getLineColor: getColor,\n      data,\n      getFilterValue: isSelected,\n      extensions: [new DataFilterExtension({ filterSize: 1 })],\n      filterRange: [1, 1],\n      ...rest,\n    },\n    base: {\n      id: getBaseLayerId(id),\n      getLineColor: getColor,\n      getFillColor: getColor,\n      // Alternatively: contrast outlines with solids:\n      // getLineColor: getColor,\n      // getFillColor: [255, 255, 255],\n      data: data.slice(),\n      ...rest,\n    },\n  };\n}\n","import { CompositeLayer, PolygonLayer } from 'deck.gl';\n\nimport { overlayBaseProps } from './selection-utils';\n\nexport default class SelectablePolygonLayer extends CompositeLayer {\n  renderLayers() {\n    const props = overlayBaseProps(this.props);\n    const base = new PolygonLayer(props.base);\n    const overlay = new PolygonLayer(props.overlay);\n    return [base, overlay];\n  }\n}\n\nSelectablePolygonLayer.layerName = 'SelectablePolygonLayer';\n","import { CompositeLayer, ScatterplotLayer } from 'deck.gl';\n\nimport { overlayBaseProps } from './selection-utils';\n\nexport default class SelectableScatterplotLayer extends CompositeLayer {\n  renderLayers() {\n    const props = overlayBaseProps(this.props);\n    const base = new ScatterplotLayer(props.base);\n    const overlay = new ScatterplotLayer(props.overlay);\n    return [base, overlay];\n  }\n}\n\nSelectableScatterplotLayer.layerName = 'SelectableScatterplotLayer';\n","import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\n\nexport const TILE_SIZE = 2048;\nexport const MIN_ROW_AGG = 1;\nexport const MAX_ROW_AGG = 16;\n\nexport const COLOR_BAR_SIZE = 20;\nexport const AXIS_LABEL_TEXT_SIZE = 9;\nexport const AXIS_TITLE_TEXT_SIZE = 15;\nexport const AXIS_MIN_SIZE = 10;\nexport const AXIS_MAX_SIZE = 90;\nexport const AXIS_MARGIN = 3;\nexport const THEME_TO_TEXT_COLOR = {\n  dark: [224, 224, 224],\n  light: [64, 64, 64],\n};\nexport const AXIS_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\n\nexport const PIXELATED_TEXTURE_PARAMETERS = {\n  // NEAREST for integer data to prevent interpolation.\n  [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n  [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n  // CLAMP_TO_EDGE to remove tile artifacts.\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n};\n","import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\nimport { _mergeShaders, project32, picking } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { BitmapLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Texture2D } from '@luma.gl/core';\nimport { PIXELATED_TEXTURE_PARAMETERS, TILE_SIZE } from './heatmap-constants';\nimport { vertexShader, fragmentShader } from './heatmap-bitmap-layer-shaders';\n\nconst defaultProps = {\n  image: { type: 'object', value: null, async: true },\n  colormap: { type: 'string', value: 'plasma', compare: true },\n  bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n  aggSizeX: { type: 'number', value: 8.0, compare: true },\n  aggSizeY: { type: 'number', value: 8.0, compare: true },\n  colorScaleLo: { type: 'number', value: 0.0, compare: true },\n  colorScaleHi: { type: 'number', value: 1.0, compare: true },\n};\n\n/**\n * A BitmapLayer that performs aggregation in the fragment shader,\n * and renders its texture from a Uint8Array rather than an ImageData.\n */\nexport default class HeatmapBitmapLayer extends BitmapLayer {\n  /**\n   * Copy of getShaders from Layer (grandparent, parent of BitmapLayer).\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/core/src/lib/layer.js#L302\n   * @param {object} shaders\n   * @returns {object} Merged shaders.\n   */\n  // eslint-disable-next-line no-underscore-dangle\n  _getShaders(shaders) {\n    this.props.extensions.forEach((extension) => {\n      // eslint-disable-next-line no-param-reassign\n      shaders = _mergeShaders(shaders, extension.getShaders.call(this, extension));\n    });\n    return shaders;\n  }\n\n  updateState(args) {\n    super.updateState(args);\n    this.loadTexture(this.props.image);\n  }\n\n  /**\n   * Need to override to provide custom shaders.\n   */\n  getShaders() {\n    const { colormap } = this.props;\n    // eslint-disable-next-line no-underscore-dangle\n    return this._getShaders({\n      vs: vertexShader,\n      fs: fragmentShader.replace('__colormap', colormap),\n      modules: [project32, picking],\n    });\n  }\n\n  /**\n   * Need to override to provide additional uniform values.\n   * Simplified by removing video-related code.\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/layers/src/bitmap-layer/bitmap-layer.js#L173\n   * @param {*} opts\n   */\n  draw(opts) {\n    const { uniforms } = opts;\n    const { bitmapTexture, model } = this.state;\n    const {\n      aggSizeX,\n      aggSizeY,\n      colorScaleLo,\n      colorScaleHi,\n    } = this.props;\n\n    // Render the image\n    if (bitmapTexture && model) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            uBitmapTexture: bitmapTexture,\n            uTextureSize: [TILE_SIZE, TILE_SIZE],\n            uAggSize: [aggSizeX, aggSizeY],\n            uColorScaleRange: [colorScaleLo, colorScaleHi],\n          }),\n        )\n        .draw();\n    }\n  }\n\n  /**\n   * Need to override to provide the custom DEFAULT_TEXTURE_PARAMETERS\n   * object.\n   * Simplified by removing video-related code.\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/layers/src/bitmap-layer/bitmap-layer.js#L218\n   * @param {Uint8Array} image\n   */\n  loadTexture(image) {\n    const { gl } = this.context;\n\n    if (this.state.bitmapTexture) {\n      this.state.bitmapTexture.delete();\n    }\n\n    if (image instanceof Texture2D) {\n      this.setState({\n        bitmapTexture: image,\n      });\n    } else if (image) {\n      this.setState({\n        bitmapTexture: new Texture2D(gl, {\n          data: image,\n          mipmaps: false,\n          parameters: PIXELATED_TEXTURE_PARAMETERS,\n          // Each color contains a single luminance value.\n          // When sampled, rgb are all set to this luminance, alpha is 1.0.\n          // Reference: https://luma.gl/docs/api-reference/webgl/texture#texture-formats\n          format: GL.LUMINANCE,\n          dataFormat: GL.LUMINANCE,\n          type: GL.UNSIGNED_BYTE,\n          width: TILE_SIZE,\n          height: TILE_SIZE,\n        }),\n      });\n    }\n  }\n}\nHeatmapBitmapLayer.layerName = 'HeatmapBitmapLayer';\nHeatmapBitmapLayer.defaultProps = defaultProps;\n","import glsl from 'glslify';\n\n/**\n * No change to the vertex shader from the base BitmapLayer.\n * Reference: https://github.com/visgl/deck.gl/blob/8.2-release/modules/layers/src/bitmap-layer/bitmap-layer-vertex.js\n */\nexport const vertexShader = glsl`\n#define SHADER_NAME heatmap-bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\n\nvarying vec2 vTexCoord;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n`;\n\n/**\n * Fragment shader adapted to perform aggregation and\n * take color scale functions + sliders into account.\n * Reference: https://github.com/visgl/deck.gl/blob/8.2-release/modules/layers/src/bitmap-layer/bitmap-layer-fragment.js\n * Reference: https://github.com/hubmapconsortium/vitessce-image-viewer/blob/06231ae02cac1ff57ba458c71e9bc59ed2fc4f8b/src/layers/XRLayer/xr-layer-fragment-colormap.webgl1.glsl\n */\nexport const fragmentShader = glsl`\n#define SHADER_NAME heatmap-bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#pragma glslify: rdbu = require(\"glsl-colormap/rdbu\")\n#pragma glslify: jet = require(\"glsl-colormap/jet\")\n#pragma glslify: viridis = require(\"glsl-colormap/viridis\")\n#pragma glslify: inferno = require(\"glsl-colormap/inferno\")\n#pragma glslify: magma = require(\"glsl-colormap/magma\")\n#pragma glslify: plasma = require(\"glsl-colormap/plasma\")\n\n// The texture (GL.LUMINANCE & Uint8Array).\nuniform sampler2D uBitmapTexture;\n\n// What are the dimensions of the texture (width, height)?\nuniform vec2 uTextureSize;\n\n// How many consecutive pixels should be aggregated together along each axis?\nuniform vec2 uAggSize;\n\n// What are the values of the color scale sliders?\nuniform vec2 uColorScaleRange;\n\n// The texture coordinate, varying (interpolated between values set by the vertex shader).\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n  // Compute 1 pixel in texture coordinates\n  vec2 onePixel = vec2(1.0, 1.0) / uTextureSize;\n  \n  vec2 viewCoord = vec2(floor(vTexCoord.x * uTextureSize.x), floor(vTexCoord.y * uTextureSize.y));\n\n  // Compute (x % aggSizeX, y % aggSizeY).\n  // These values will be the number of values to the left / above the current position to consider.\n  vec2 modAggSize = vec2(-1.0 * mod(viewCoord.x, uAggSize.x), -1.0 * mod(viewCoord.y, uAggSize.y));\n\n  // Take the sum of values along each axis.\n  float intensitySum = 0.0;\n  vec2 offsetPixels = vec2(0.0, 0.0);\n\n  for(int i = 0; i < 16; i++) {\n    // Check to break outer loop early.\n    // Uniforms cannot be used as conditions in GLSL for loops.\n    if(float(i) >= uAggSize.y) {\n      // Done in the y direction.\n      break;\n    }\n\n    offsetPixels = vec2(offsetPixels.x, (modAggSize.y + float(i)) * onePixel.y);\n\n    for(int j = 0; j < 16; j++) {\n      // Check to break inner loop early.\n      // Uniforms cannot be used as conditions in GLSL for loops.\n      if(float(j) >= uAggSize.x) {\n        // Done in the x direction.\n        break;\n      }\n\n      offsetPixels = vec2((modAggSize.x + float(j)) * onePixel.x, offsetPixels.y);\n      intensitySum += texture2D(uBitmapTexture, vTexCoord + offsetPixels).r;\n    }\n  }\n  \n  // Compute the mean value.\n  float intensityMean = intensitySum / (uAggSize.x * uAggSize.y);\n  \n  // Re-scale using the color scale slider values.\n  float scaledIntensityMean = (intensityMean - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\n\n  gl_FragColor = __colormap(clamp(scaledIntensityMean, 0.0, 1.0));\n\n  geometry.uv = vTexCoord;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","import { BitmapLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { CompositeLayer } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { PIXELATED_TEXTURE_PARAMETERS } from './heatmap-constants';\n\n\n// These are the same defaultProps as for BitmapLayer.\nconst defaultProps = {\n  ...BitmapLayer.defaultProps,\n  image: { type: 'object', value: null, async: true },\n  bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n  desaturate: {\n    type: 'number', min: 0, max: 1, value: 0,\n  },\n  transparentColor: { type: 'color', value: [0, 0, 0, 0] },\n  tintColor: { type: 'color', value: [255, 255, 255] },\n};\n\nexport default class PixelatedBitmapLayer extends CompositeLayer {\n  renderLayers() {\n    const { image } = this.props;\n    return new BitmapLayer(this.props, {\n      id: `${this.props.id}-wrapped`,\n      image,\n      textureParameters: PIXELATED_TEXTURE_PARAMETERS,\n    });\n  }\n}\n\nPixelatedBitmapLayer.layerName = 'PixelatedBitmapLayer';\nPixelatedBitmapLayer.defaultProps = defaultProps;\n","/* eslint-disable no-underscore-dangle */\nimport { COORDINATE_SYSTEM, CompositeLayer } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { TextLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport {\n  AXIS_LABEL_TEXT_SIZE,\n  AXIS_TITLE_TEXT_SIZE,\n  AXIS_MARGIN,\n  THEME_TO_TEXT_COLOR,\n  AXIS_FONT_FAMILY,\n} from './heatmap-constants';\n\nexport default class HeatmapCompositeTextLayer extends CompositeLayer {\n  _renderAxisTopLayers() {\n    const {\n      axisTopLabelData, matrixLeft, width, matrixWidth, viewWidth, theme,\n      targetX, targetY, axisTopTitle, cellWidth, axisOffsetTop, scaleFactor,\n    } = this.props;\n    const showAxisTopLabels = cellWidth >= AXIS_LABEL_TEXT_SIZE;\n    const axisLabelTop = targetY + (axisOffsetTop - AXIS_MARGIN) / 2 / scaleFactor;\n    return [\n      new TextLayer({\n        id: 'axisTopLabels',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: axisTopLabelData,\n        getText: d => d[1],\n        getPosition: d => [matrixLeft + ((d[0] + 0.5) / width) * matrixWidth, axisLabelTop],\n        getTextAnchor: 'start',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (showAxisTopLabels ? AXIS_LABEL_TEXT_SIZE : 0),\n        getAngle: 75,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getPosition: [axisLabelTop, matrixLeft, matrixWidth, viewWidth],\n          getSize: [showAxisTopLabels],\n          getColor: [theme],\n        },\n      }),\n      new TextLayer({\n        id: 'axisTopTitle',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: [{ title: axisTopTitle }],\n        getText: d => d.title,\n        getPosition: [targetX, targetY],\n        getTextAnchor: 'middle',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (!showAxisTopLabels ? AXIS_TITLE_TEXT_SIZE : 0),\n        getAngle: 0,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getSize: [showAxisTopLabels],\n          getColor: [theme],\n        },\n      }),\n    ];\n  }\n\n  _renderAxisLeftLayers() {\n    const {\n      axisLeftLabelData, matrixTop, height, matrixHeight,\n      viewHeight, theme, axisLeftTitle, targetX, targetY, cellHeight, axisOffsetLeft,\n      scaleFactor,\n    } = this.props;\n    const showAxisLeftLabels = cellHeight >= AXIS_LABEL_TEXT_SIZE;\n    const axisLabelLeft = targetX + (axisOffsetLeft - AXIS_MARGIN) / 2 / scaleFactor;\n    return [\n      new TextLayer({\n        id: 'axisLeftLabels',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: axisLeftLabelData,\n        getText: d => d[1],\n        getPosition: d => [axisLabelLeft, matrixTop + ((d[0] + 0.5) / height) * matrixHeight],\n        getTextAnchor: 'end',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (showAxisLeftLabels ? AXIS_LABEL_TEXT_SIZE : 0),\n        getAngle: 0,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getPosition: [axisLabelLeft, matrixTop, matrixHeight, viewHeight],\n          getSize: [showAxisLeftLabels],\n          getColor: [theme],\n        },\n      }),\n      new TextLayer({\n        id: 'axisLeftTitle',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: [{ title: axisLeftTitle }],\n        getText: d => d.title,\n        getPosition: [targetX, targetY],\n        getTextAnchor: 'middle',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (!showAxisLeftLabels ? AXIS_TITLE_TEXT_SIZE : 0),\n        getAngle: 90,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getSize: [showAxisLeftLabels],\n          getColor: [theme],\n        },\n      }),\n    ];\n  }\n\n  renderLayers() {\n    return [\n      this._renderAxisTopLayers(),\n      this._renderAxisLeftLayers(),\n    ];\n  }\n}\n\nHeatmapCompositeTextLayer.layerName = 'HeatmapCompositeTextLayer';\n","import { quadtree } from 'd3-quadtree';\n\n/**\n * Create a d3-quadtree object for cells data points.\n * @param {array} cellsEntries Array of [cellId, cell] tuples,\n * resulting from running Object.entries on the cells object.\n * @param {function} getCellCoords Given a cell object, return the\n * spatial/scatterplot coordinates [x, y].\n * @returns {object} Quadtree instance.\n */\nexport function createCellsQuadTree(cellsEntries, getCellCoords) {\n  // Use the cellsEntries variable since it is already\n  // an array, converted by Object.entries().\n  // Only use cellsEntries in quadtree calculation if there is\n  // centroid data in the cells (i.e not just ids).\n  // eslint-disable-next-line no-unused-vars\n  if (!cellsEntries || !cellsEntries.length || !getCellCoords(cellsEntries[0][1])) {\n    // Abort if the cells data is not yet available.\n    return null;\n  }\n  const tree = quadtree()\n    .x(d => getCellCoords(d[1])[0])\n    .y(d => getCellCoords(d[1])[1])\n    .addAll(cellsEntries);\n  return tree;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z\"\n});\n\nfunction SvgNearMe(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNearMe, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/near_me.2a308adc.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"       M19 19h2v2h-2v-2zm0-2h2v-2h-2v2z       M3 13h2v-2H3v2zm0 4h2v-2H3v2z       m0-8h2V7H3v2zm0-4h2V3H3v2z       m4 0h2V3H7v2zm8 16h2v-2h-2v2z       m-4 0h2v-2h-2v2z       m4 0h2v-2h-2v2z       m-8 0h2v-2H7v2z       m-4 0h2v-2H3v2z       M11 5h2v-2h-2v2z       M15 5h2v-2h-2v2z       M19 5h2v-2h-2v2z       M19 9h2v-2h-2v2z       M19 13h2v-2h-2v2z     \"\n});\n\nfunction SvgSelectionRectangle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSelectionRectangle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/selection_rectangle.aa477261.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSelectionLasso(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0,3)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      strokeWidth: 0.343565\n    },\n    d: \"M 23.942314,4.6958443 C 23.446206,1.8868581 19.727461,0 14.687364,0 13.437819,0 12.150138,0.11543779 10.859708,0.34287772 4.1629423,1.5250844 -0.58168816,5.2884937 0.05768601,8.911385 c 0.25355086,1.439193 1.35605049,2.63583 3.04638949,3.461072 -0.2569865,0.387198 -0.4074679,0.826617 -0.4074679,1.29524 0,1.337498 1.1863293,2.457176 2.7639791,2.728248 l -1.3615475,2.333149 c -0.1576963,0.271073 -0.066308,0.61876 0.2047647,0.776457 0.090014,0.05291 0.1886171,0.07799 0.2858459,0.07799 0.1951448,0 0.3851362,-0.100665 0.4912977,-0.281723 l 1.6803757,-2.88148 C 8.41868,16.20561 9.6895264,15.063601 9.6998333,13.683844 c 6.872e-4,-0.0055 0.00137,-0.01065 0.00137,-0.01615 0,-0.02336 -0.00344,-0.04569 -0.00481,-0.06837 1.1292977,-0.0213 2.2847067,-0.130211 3.4435507,-0.334975 6.69711,-1.181863 11.44174,-4.9456164 10.802366,-8.5685077 z M 3.83312,13.667353 c 0,-0.30749 0.1281497,-0.59849 0.3470005,-0.848261 0.1219655,0.04295 0.2456489,0.08383 0.3717372,0.123339 l 1.2234344,2.352045 C 4.6865351,15.149835 3.83312,14.46408 3.83312,13.667353 Z M 7.0141869,15.216144 6.0223152,13.309702 5.4008064,12.114097 c 0.121622,-0.03161 0.2477103,-0.05634 0.3772342,-0.07387 0.1367388,-0.0189 0.2772568,-0.02886 0.420867,-0.02886 0.5067581,0 0.980534,0.11956 1.3701366,0.317454 0.5696305,0.289968 0.9554538,0.750345 0.9904974,1.262944 0.00137,0.02542 0.0055,0.05016 0.0055,0.07593 0,0.698124 -0.6562089,1.310356 -1.5508518,1.548447 z m 5.9185921,-3.126441 c -1.217251,0.214728 -2.429691,0.323982 -3.6060571,0.324669 -0.5765018,-0.911821 -1.7614569,-1.53917 -3.1278143,-1.53917 -0.4717146,0 -0.921441,0.07593 -1.332001,0.211292 -0.3061162,0.100665 -0.5878394,0.237403 -0.8427645,0.39991 C 2.4598914,10.828133 1.4360682,9.8579062 1.2319907,8.7035283 0.72660678,5.8381974 5.2307418,2.5475333 11.067221,1.5175259 c 1.222061,-0.2161023 2.439998,-0.3246688 3.620143,-0.3246688 4.371863,0 7.694479,1.5250844 8.080645,3.7101568 0.505041,2.8653309 -3.998751,6.1566821 -9.83523,7.1866891 z\",\n    id: \"path10\"\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSelectionLasso, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/selection_lasso.00e80a33.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { SELECTION_TYPE } from 'nebula.gl';\nimport { ReactComponent as PointerIconSVG } from '../../assets/tools/near_me.svg';\nimport { ReactComponent as SelectRectangleIconSVG } from '../../assets/tools/selection_rectangle.svg';\nimport { ReactComponent as SelectLassoIconSVG } from '../../assets/tools/selection_lasso.svg';\n\nexport function IconButton(props) {\n  const {\n    alt, onClick, isActive, children,\n  } = props;\n  const inactive = 'btn btn-outline-secondary mr-2 icon';\n  const active = `${inactive} active`;\n  return (\n    <button\n      className={isActive ? active : inactive}\n      onClick={onClick}\n      type=\"button\"\n      title={alt}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default function ToolMenu(props) {\n  const {\n    setActiveTool,\n    activeTool,\n    visibleTools = { pan: true, selectRectangle: true, selectLasso: true },\n  } = props;\n  return (\n    <div className=\"tool\">\n      {visibleTools.pan && (\n      <IconButton\n        alt=\"pointer tool\"\n        onClick={() => setActiveTool(null)}\n        isActive={activeTool === null}\n      ><PointerIconSVG />\n      </IconButton>\n      )}\n      {visibleTools.selectRectangle ? (\n        <IconButton\n          alt=\"select rectangle\"\n          onClick={() => setActiveTool(SELECTION_TYPE.RECTANGLE)}\n          isActive={activeTool === SELECTION_TYPE.RECTANGLE}\n        ><SelectRectangleIconSVG />\n        </IconButton>\n      ) : null}\n      {visibleTools.selectLasso ? (\n        <IconButton\n          alt=\"select lasso\"\n          onClick={() => setActiveTool(SELECTION_TYPE.POLYGON)}\n          isActive={activeTool === SELECTION_TYPE.POLYGON}\n        ><SelectLassoIconSVG />\n        </IconButton>\n      ) : null}\n    </div>\n  );\n}\n","export const getCursorWithTool = () => 'crosshair';\nexport const getCursor = interactionState => (interactionState.isDragging\n  ? 'grabbing' : 'default'\n);\n","import React, { PureComponent } from 'react';\nimport DeckGL, { OrthographicView, OrbitView } from 'deck.gl';\nimport ToolMenu from './ToolMenu';\nimport { DEFAULT_GL_OPTIONS } from '../utils';\nimport { getCursor, getCursorWithTool } from './cursor';\n\n/**\n * Abstract class component intended to be inherited by\n * the Spatial and Scatterplot class components.\n * Contains a common constructor, common DeckGL callbacks,\n * and common render function.\n */\nexport default class AbstractSpatialOrScatterplot extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gl: null,\n      tool: null,\n    };\n\n    this.viewport = null;\n\n    this.onViewStateChange = this.onViewStateChange.bind(this);\n    this.onInitializeViewInfo = this.onInitializeViewInfo.bind(this);\n    this.onWebGLInitialized = this.onWebGLInitialized.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onHover = this.onHover.bind(this);\n  }\n\n  /**\n   * Called by DeckGL upon a viewState change,\n   * for example zoom or pan interaction.\n   * Emit the new viewState to the `setViewState`\n   * handler prop.\n   * @param {object} params\n   * @param {object} params.viewState The next deck.gl viewState.\n   */\n  onViewStateChange({ viewState: nextViewState }) {\n    const {\n      setViewState, viewState, layers, spatialAxisFixed,\n    } = this.props;\n    const use3d = layers?.some(l => l.use3d);\n    setViewState({\n      ...nextViewState,\n      // If the axis is fixed, just use the current target in state i.e don't change target.\n      target: spatialAxisFixed && use3d ? viewState.target : nextViewState.target,\n    });\n  }\n\n  /**\n   * Called by DeckGL upon viewport\n   * initialization.\n   * @param {object} viewState\n   * @param {object} viewState.viewport\n   */\n  onInitializeViewInfo({ viewport }) {\n    this.viewport = viewport;\n  }\n\n  /**\n   * Called by DeckGL upon initialization,\n   * helps to understand when to pass layers\n   * to the DeckGL component.\n   * @param {object} gl The WebGL context object.\n   */\n  onWebGLInitialized(gl) {\n    this.setState({ gl });\n  }\n\n  /**\n   * Called by the ToolMenu buttons.\n   * Emits the new tool value to the\n   * `onToolChange` prop.\n   * @param {string} tool Name of tool.\n   */\n  onToolChange(tool) {\n    const { onToolChange: onToolChangeProp } = this.props;\n    this.setState({ tool });\n    if (onToolChangeProp) {\n      onToolChangeProp(tool);\n    }\n  }\n\n  /**\n   * Create the DeckGL layers.\n   * @returns {object[]} Array of\n   * DeckGL layer objects.\n   * Intended to be overriden by descendants.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  getLayers() {\n    return [];\n  }\n\n  // eslint-disable-next-line consistent-return\n  onHover(info) {\n    const { coordinate, layer, sourceLayer } = info;\n    const {\n      setCellHighlight, cellHighlight, setComponentHover, layers,\n    } = this.props;\n    const hasBitmask = (layers || []).some(l => l.type === 'bitmask');\n    if (!setCellHighlight) {\n      return null;\n    }\n    if (!sourceLayer || !coordinate) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { channelData, bounds } = sourceLayer.props;\n    if (!channelData) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { data, width } = channelData;\n    if (!data) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    // Tiled layer needs a custom layerZoomScale.\n    if (sourceLayer.id.includes('bitmask')) {\n      const { tileSize } = layer.props.loader[0];\n      const { z } = sourceLayer.props.tileId;\n      // The zoomed out layer needs to use the fixed zoom at which it is rendered.\n      // See the following for why we have this calculation with 512:\n      // https://github.com/visgl/deck.gl/blob/2b15bc459c6534ea38ce1153f254ce0901f51d6f/modules/geo-layers/src/tile-layer/utils.js#L130.\n      const layerZoomScale = Math.max(\n        1,\n        2 ** Math.round(-z + Math.log2(512 / tileSize)),\n      );\n      const dataCoords = [\n        Math.floor((coordinate[0] - bounds[0]) / layerZoomScale),\n        Math.floor((coordinate[1] - bounds[3]) / layerZoomScale),\n      ];\n      const coords = dataCoords[1] * width + dataCoords[0];\n      const hoverData = data.map(d => d[coords]);\n      const cellId = hoverData.find(i => i > 0);\n      if (cellId !== Number(cellHighlight)) {\n        if (setComponentHover) {\n          setComponentHover();\n        }\n        // eslint-disable-next-line no-unused-expressions\n        setCellHighlight(cellId ? String(cellId) : null);\n      }\n    }\n  }\n\n  /**\n   * Emits a function to project from the\n   * cell ID space to the scatterplot or\n   * spatial coordinate space, via the\n   * `updateViewInfo` prop.\n   */\n  viewInfoDidUpdate(getCellCoords) {\n    const { updateViewInfo, cells, uuid } = this.props;\n    const { viewport } = this;\n    if (updateViewInfo && viewport) {\n      updateViewInfo({\n        uuid,\n        project: (cellId) => {\n          const cell = cells[cellId];\n          try {\n            const [positionX, positionY] = getCellCoords(cell);\n            return viewport.project([positionX, positionY]);\n          } catch (e) {\n            return [null, null];\n          }\n        },\n      });\n    }\n  }\n\n  /**\n   * Intended to be overriden by descendants.\n   */\n  componentDidUpdate() {\n\n  }\n\n  /**\n   * A common render function for both Spatial\n   * and Scatterplot components.\n   */\n  render() {\n    const {\n      deckRef, viewState, uuid, layers: layerProps,\n    } = this.props;\n    const { gl, tool } = this.state;\n    const layers = this.getLayers();\n    const use3d = (layerProps || []).some(l => l.use3d);\n\n    const showCellSelectionTools = this.cellsLayer !== null\n      || (this.cellsEntries.length && this.cellsEntries[0][1].xy);\n    const showPanTool = this.cellsLayer !== null || layerProps.findIndex(l => l.type === 'bitmask' || l.type === 'raster') >= 0;\n    // For large datasets or ray casting, the visual quality takes only a small\n    // hit in exchange for much better performance by setting this to false:\n    // https://deck.gl/docs/api-reference/core/deck#usedevicepixels\n    const useDevicePixels = this.cellsEntries.length < 100000 && !use3d;\n\n    return (\n      <>\n        <ToolMenu\n          activeTool={tool}\n          setActiveTool={this.onToolChange}\n          visibleTools={{\n            pan: showPanTool,\n            selectRectangle: showCellSelectionTools,\n            selectLasso: showCellSelectionTools,\n          }}\n        />\n        <DeckGL\n          id={`deckgl-overlay-${uuid}`}\n          ref={deckRef}\n          views={[\n            use3d\n              ? new OrbitView({ id: 'orbit', controller: true, orbitAxis: 'Y' })\n              : new OrthographicView({\n                id: 'ortho',\n              }),\n          ]} // id is a fix for https://github.com/uber/deck.gl/issues/3259\n          layers={\n            gl && viewState.target.slice(0, 2).every(i => typeof i === 'number')\n              ? layers\n              : []\n          }\n          glOptions={DEFAULT_GL_OPTIONS}\n          onWebGLInitialized={this.onWebGLInitialized}\n          onViewStateChange={this.onViewStateChange}\n          viewState={viewState}\n          useDevicePixels={useDevicePixels}\n          controller={tool ? { dragPan: false } : true}\n          getCursor={tool ? getCursorWithTool : getCursor}\n          onHover={this.onHover}\n        >\n          {this.onInitializeViewInfo}\n        </DeckGL>\n      </>\n    );\n  }\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\nimport { quadtree } from 'd3-quadtree';\n\n/**\n * Returns a closure that returns a constant value.\n */\nfunction constant(v) {\n  return (() => v);\n}\n\n/**\n * Adds a tiny bit of randomness to a number.\n */\nfunction jiggle(v) {\n  return v + (Math.random() - 0.5) * 1e-6;\n}\n\n/**\n * A force function to be used with d3.forceSimulation.\n * This has been adapted for use here, with comments explaining each part.\n * Reference: https://bl.ocks.org/cmgiven/547658968d365bcc324f3e62e175709b\n */\nexport function forceCollideRects() {\n  // D3 implements things with function prototypes rather than classes.\n  // Pretend these variables are the \"instance members\" of a class.\n  // Note that this function actually returns the internal force() function,\n  // but that the force() function is a closure with access to these instance members.\n\n  let nodes;\n  let masses;\n  let strength = 1;\n  let iterations = 1;\n\n  let sizes;\n  let size = constant([0, 0]);\n\n  // Given a node, return the center point along the x-axis.\n  function xCenter(d) {\n    return d.x + d.vx + sizes[d.index][0] / 2;\n  }\n\n  // Given a node, return the center point along the y-axis.\n  function yCenter(d) {\n    return d.y + d.vy + sizes[d.index][1] / 2;\n  }\n\n  // Given a quadtree node, initialize its .size property.\n  function prepare(quad) {\n    if (quad.data) {\n      // This is a leaf node, so we set quad.size to the node's size.\n      // (No need to compute the max of internal nodes,\n      // since leaf nodes do not have any internal nodes).\n      quad.size = sizes[quad.data.index];\n    } else {\n      quad.size = [0, 0];\n      // Internal nodes of the quadtree are represented\n      // as four-element arrays in left-to-right, top-to-bottom order.\n      // Here, we are setting quad.size to [maxWidth, maxHeight]\n      // among the internal nodes of this current `quad` node.\n      for (let i = 0; i < 4; i++) {\n        if (quad[i] && quad[i].size) {\n          quad.size[0] = Math.max(quad.size[0], quad[i].size[0]);\n          quad.size[1] = Math.max(quad.size[1], quad[i].size[1]);\n        }\n      }\n    }\n  }\n\n  function force() {\n    let node;\n    let nodeSize;\n    let nodeMass;\n    let xi;\n    let yi;\n\n    // Create a quadtree based on node center points.\n    // Initialize each quadtree node's .size property by calling\n    // the prepare() function on each quadtree node.\n    const tree = quadtree(nodes, xCenter, yCenter).visitAfter(prepare);\n\n    // Update the .vx and .vy properties of both `node` and `data`\n    // (the current node pair).\n    function apply(quad, x0, y0, x1, y1) {\n      // `quad` is a quadtree node.\n      const { data } = quad;\n      const xSize = (nodeSize[0] + quad.size[0]) / 2;\n      const ySize = (nodeSize[1] + quad.size[1]) / 2;\n\n      if (data && data.index > node.index) {\n        // This is a leaf node because `data` is defined.\n        // `x` is the difference in x centers between `node` and `data`.\n        // `y` is the difference in y centers between `node` and `data`.\n        let x = jiggle(xi - xCenter(data));\n        let y = jiggle(yi - yCenter(data));\n        const xd = Math.abs(x) - xSize;\n        const yd = Math.abs(y) - ySize;\n\n        // If `xd` and `yd` is less than zero,\n        // then there is an overlap between the two nodes.\n        if (xd < 0 && yd < 0) {\n          const l = Math.sqrt(x * x + y * y);\n          const m = masses[data.index] / (nodeMass + masses[data.index]);\n\n          // We move the nodes either in the x or y direction.\n          // Nodes are moved proportionally to:\n          // their distance apart (`l`), their amount of overlap (`xd` or `yd`), their masses (`m`),\n          // and the strength parameter (`strength`).\n          if (Math.abs(xd) < Math.abs(yd)) {\n            node.vx -= (x *= xd / l * strength) * m;\n            data.vx += x * (1 - m);\n          } else {\n            node.vy -= (y *= yd / l * strength) * m;\n            data.vy += y * (1 - m);\n          }\n        }\n        // When the quadtree.visit callback returns _true_ for a node,\n        // then the node's children will _not_ be visited.\n        return x0 > xi + xSize || x1 < xi - xSize || y0 > yi + ySize || y1 < yi - ySize;\n      }\n      return false;\n    }\n\n    function iterate() {\n      // On every iteration, use the `apply` function to visit every node\n      // which has an index greater than the current node's index,\n      // (visiting every node pair).\n      for (let j = 0; j < nodes.length; j++) {\n        node = nodes[j];\n        nodeSize = sizes[j];\n        nodeMass = masses[j];\n        xi = xCenter(node);\n        yi = yCenter(node);\n\n        tree.visit(apply);\n      }\n    }\n\n    // Do the specified number of iterations.\n    for (let i = 0; i < iterations; i++) {\n      iterate();\n    }\n  }\n\n  // The \"constructor\".\n  // Takes a list of nodes as input.\n  force.initialize = (v) => {\n    nodes = v;\n    // Get the size [w, h] of each node using the size getter function.\n    sizes = nodes.map(size);\n    // Get the mass of each node,\n    // which is the sum of its horizontal and vertical edge lengths.\n    masses = sizes.map(d => d[0] + d[1]);\n  };\n\n  // Set the number of iterations.\n  // If no value is provided as a parameter, this acts as a getter function.\n  force.iterations = (...v) => {\n    if (v.length) {\n      iterations = +v[0];\n      return force;\n    }\n    return iterations;\n  };\n\n  // Set the strength value.\n  // If no value is provided as a parameter, this acts as a getter function.\n  force.strength = (...v) => {\n    if (v.length) {\n      strength = +v[0];\n      return force;\n    }\n    return strength;\n  };\n\n  // Set the size function.\n  // The size function takes a node as a parameter and returns its size.\n  // If no size function is provided as a parameter, this acts as a getter function.\n  force.size = (...v) => {\n    if (v.length) {\n      size = (typeof v[0] === 'function' ? v[0] : constant(v[0]));\n      return force;\n    }\n    return size;\n  };\n\n  // Returns the force closure.\n  return force;\n}\n","import React, { forwardRef } from 'react';\nimport { PolygonLayer, TextLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { forceSimulation } from 'd3-force';\nimport { SelectableScatterplotLayer, getSelectionLayers } from '../../layers';\nimport { cellLayerDefaultProps, DEFAULT_COLOR } from '../utils';\nimport {\n  createCellsQuadTree,\n} from '../shared-spatial-scatterplot/quadtree';\nimport AbstractSpatialOrScatterplot from '../shared-spatial-scatterplot/AbstractSpatialOrScatterplot';\nimport { forceCollideRects } from '../shared-spatial-scatterplot/force-collide-rects';\n\nconst CELLS_LAYER_ID = 'scatterplot';\nconst LABEL_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\nconst NUM_FORCE_SIMULATION_TICKS = 100;\nconst LABEL_UPDATE_ZOOM_DELTA = 0.25;\n\n// Default getter function props.\nconst makeDefaultGetCellPosition = mapping => (cellEntry) => {\n  const { mappings } = cellEntry[1];\n  if (!(mapping in mappings)) {\n    const available = Object.keys(mappings).map(s => `\"${s}\"`).join(', ');\n    throw new Error(`Expected to find \"${mapping}\", but available mappings are: ${available}`);\n  }\n  const mappedCell = mappings[mapping];\n  // The negative applied to the y-axis is because\n  // graphics rendering has the y-axis positive going south.\n  return [mappedCell[0], -mappedCell[1], 0];\n};\nconst makeDefaultGetCellCoords = mapping => cell => cell.mappings[mapping];\nconst makeDefaultGetCellColors = cellColors => cellEntry => (\n  cellColors && cellColors.get(cellEntry[0])\n) || DEFAULT_COLOR;\nconst makeDefaultGetCellIsSelected = cellSelection => cellEntry => (\n  cellSelection\n    ? cellSelection.includes(cellEntry[0])\n    : true // If nothing is selected, everything is selected.\n);\n\n/**\n * React component which renders a scatterplot from cell data, typically tSNE or PCA.\n * @param {object} props\n * @param {string} props.uuid A unique identifier for this component.\n * @param {string} props.theme The current vitessce theme.\n * @param {object} props.viewState The deck.gl view state.\n * @param {function} props.setViewState Function to call to update the deck.gl view state.\n * @param {object} props.cells\n * @param {string} props.mapping The name of the coordinate mapping field,\n * for each cell, for example \"PCA\" or \"t-SNE\".\n * @param {Map} props.cellColors Mapping of cell IDs to colors.\n * @param {array} props.cellSelection Array of selected cell IDs.\n * @param {array} props.cellFilter Array of filtered cell IDs. By default, null.\n * @param {number} props.cellRadiusScale The value for `radiusScale` to pass\n * to the deck.gl cells ScatterplotLayer.\n * @param {number} props.cellOpacity The value for `opacity` to pass\n * to the deck.gl cells ScatterplotLayer.\n * @param {function} props.getCellCoords Getter function for cell coordinates\n * (used by the selection layer).\n * @param {function} props.getCellPosition Getter function for cell [x, y, z] position.\n * @param {function} props.getCellColor Getter function for cell color as [r, g, b] array.\n * @param {function} props.getCellIsSelected Getter function for cell layer isSelected.\n * @param {function} props.setCellSelection\n * @param {function} props.setCellHighlight\n * @param {function} props.updateViewInfo\n * @param {function} props.onToolChange Callback for tool changes\n * (lasso/pan/rectangle selection tools).\n * @param {function} props.onCellClick Getter function for cell layer onClick.\n */\nclass Scatterplot extends AbstractSpatialOrScatterplot {\n  constructor(props) {\n    super(props);\n\n    // To avoid storing large arrays/objects\n    // in React state, this component\n    // uses instance variables.\n    // All instance variables used in this class:\n    this.cellsEntries = [];\n    this.cellsQuadTree = null;\n    this.cellsLayer = null;\n    this.cellSetsForceSimulation = forceCollideRects();\n    this.cellSetsLabelPrevZoom = null;\n    this.cellSetsLayers = [];\n\n    // Initialize data and layers.\n    this.onUpdateCellsData();\n    this.onUpdateCellsLayer();\n    this.onUpdateCellSetsLayers();\n  }\n\n  createCellsLayer() {\n    const { cellsEntries } = this;\n    const {\n      theme,\n      mapping,\n      getCellPosition = makeDefaultGetCellPosition(mapping),\n      cellRadiusScale = 0.2,\n      cellOpacity = 1.0,\n      cellFilter,\n      cellSelection,\n      setCellHighlight,\n      setComponentHover,\n      getCellIsSelected = makeDefaultGetCellIsSelected(\n        cellsEntries.length === cellSelection.length ? null : cellSelection,\n      ),\n      cellColors,\n      getCellColor = makeDefaultGetCellColors(cellColors),\n      onCellClick,\n    } = this.props;\n    const filteredCellsEntries = (cellFilter\n      ? cellsEntries.filter(cellEntry => cellFilter.includes(cellEntry[0]))\n      : cellsEntries);\n\n    return new SelectableScatterplotLayer({\n      id: CELLS_LAYER_ID,\n      backgroundColor: (theme === 'dark' ? [0, 0, 0] : [241, 241, 241]),\n      isSelected: getCellIsSelected,\n      opacity: cellOpacity,\n      radiusScale: cellRadiusScale,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 10,\n      getPosition: getCellPosition,\n      getColor: getCellColor,\n      getLineWidth: 0,\n      onClick: (info) => {\n        if (onCellClick) {\n          onCellClick(info);\n        }\n      },\n      ...cellLayerDefaultProps(\n        filteredCellsEntries, undefined, setCellHighlight, setComponentHover,\n      ),\n    });\n  }\n\n  createCellSetsLayers() {\n    const {\n      theme,\n      cellSetPolygons,\n      viewState,\n      cellSetPolygonsVisible,\n      cellSetLabelsVisible,\n      cellSetLabelSize,\n    } = this.props;\n\n    const result = [];\n\n    if (cellSetPolygonsVisible) {\n      result.push(new PolygonLayer({\n        id: 'cell-sets-polygon-layer',\n        data: cellSetPolygons,\n        stroked: true,\n        filled: false,\n        wireframe: true,\n        lineWidthMaxPixels: 1,\n        getPolygon: d => d.hull,\n        getLineColor: d => d.color,\n        getLineWidth: 1,\n      }));\n    }\n\n    if (cellSetLabelsVisible) {\n      const { zoom } = viewState;\n      const nodes = cellSetPolygons.map(p => ({\n        x: p.centroid[0],\n        y: p.centroid[1],\n        label: p.name,\n      }));\n\n      const collisionForce = this.cellSetsForceSimulation\n        .size(d => ([\n          cellSetLabelSize * 1 / (2 ** zoom) * 4 * d.label.length,\n          cellSetLabelSize * 1 / (2 ** zoom) * 1.5,\n        ]));\n\n      forceSimulation()\n        .nodes(nodes)\n        .force('collision', collisionForce)\n        .tick(NUM_FORCE_SIMULATION_TICKS);\n\n      result.push(new TextLayer({\n        id: 'cell-sets-text-layer',\n        data: nodes,\n        getPosition: d => ([d.x, d.y]),\n        getText: d => d.label,\n        getColor: (theme === 'dark' ? [255, 255, 255] : [0, 0, 0]),\n        getSize: cellSetLabelSize,\n        getAngle: 0,\n        getTextAnchor: 'middle',\n        getAlignmentBaseline: 'center',\n        fontFamily: LABEL_FONT_FAMILY,\n        fontWeight: 'normal',\n      }));\n    }\n\n    return result;\n  }\n\n  createSelectionLayers() {\n    const {\n      viewState,\n      mapping,\n      getCellCoords = makeDefaultGetCellCoords(mapping),\n      setCellSelection,\n    } = this.props;\n    const { tool } = this.state;\n    const { cellsQuadTree } = this;\n    const flipYTooltip = true;\n    return getSelectionLayers(\n      tool,\n      viewState.zoom,\n      CELLS_LAYER_ID,\n      getCellCoords,\n      setCellSelection,\n      cellsQuadTree,\n      flipYTooltip,\n    );\n  }\n\n  getLayers() {\n    const {\n      cellsLayer,\n      cellSetsLayers,\n    } = this;\n    return [\n      cellsLayer,\n      ...cellSetsLayers,\n      ...this.createSelectionLayers(),\n    ];\n  }\n\n  onUpdateCellsData() {\n    const {\n      cells = {},\n      mapping,\n      getCellCoords = makeDefaultGetCellCoords(mapping),\n    } = this.props;\n    const cellsEntries = Object.entries(cells);\n    this.cellsEntries = cellsEntries;\n    this.cellsQuadTree = createCellsQuadTree(cellsEntries, getCellCoords);\n  }\n\n  onUpdateCellsLayer() {\n    this.cellsLayer = this.createCellsLayer();\n  }\n\n  onUpdateCellSetsLayers(onlyViewStateChange) {\n    // Because the label sizes for the force simulation depend on the zoom level,\n    // we _could_ run the simulation every time the zoom level changes.\n    // However, this has a performance impact in firefox.\n    if (onlyViewStateChange) {\n      const { viewState, cellSetLabelsVisible } = this.props;\n      const { zoom } = viewState;\n      const { cellSetsLabelPrevZoom } = this;\n      // Instead, we can just check if the zoom level has changed\n      // by some relatively large delta, to be more conservative\n      // about re-running the force simulation.\n      if (cellSetLabelsVisible\n        && (\n          cellSetsLabelPrevZoom === null\n          || Math.abs(cellSetsLabelPrevZoom - zoom) > LABEL_UPDATE_ZOOM_DELTA\n        )\n      ) {\n        this.cellSetsLayers = this.createCellSetsLayers();\n        this.cellSetsLabelPrevZoom = zoom;\n      }\n    } else {\n      // Otherwise, something more substantial than just\n      // the viewState has changed, such as the label array\n      // itself, so we always want to update the layer\n      // in this case.\n      this.cellSetsLayers = this.createCellSetsLayers();\n    }\n  }\n\n  viewInfoDidUpdate() {\n    const {\n      mapping,\n      getCellPosition = makeDefaultGetCellPosition(mapping),\n    } = this.props;\n    super.viewInfoDidUpdate(cell => getCellPosition([null, cell]));\n  }\n\n  /**\n   * Here, asynchronously check whether props have\n   * updated which require re-computing memoized variables,\n   * followed by a re-render.\n   * This function does not follow React conventions or paradigms,\n   * it is only implemented this way to try to squeeze out\n   * performance.\n   * @param {object} prevProps The previous props to diff against.\n   */\n  componentDidUpdate(prevProps) {\n    this.viewInfoDidUpdate();\n\n    const shallowDiff = propName => (prevProps[propName] !== this.props[propName]);\n    if (['cells'].some(shallowDiff)) {\n      // Cells data changed.\n      this.onUpdateCellsData();\n      this.forceUpdate();\n    }\n\n    if ([\n      'cells', 'cellFilter', 'cellSelection', 'cellColors', 'cellRadiusScale',\n    ].some(shallowDiff)) {\n      // Cells layer props changed.\n      this.onUpdateCellsLayer();\n      this.forceUpdate();\n    }\n    if ([\n      'cellSetPolygons', 'cellSetPolygonsVisible',\n      'cellSetLabelsVisible', 'cellSetLabelSize',\n    ].some(shallowDiff)) {\n      // Cell sets layer props changed.\n      this.onUpdateCellSetsLayers(false);\n      this.forceUpdate();\n    }\n    if (shallowDiff('viewState')) {\n      // The viewState prop has changed (due to zoom or pan).\n      this.onUpdateCellSetsLayers(true);\n      this.forceUpdate();\n    }\n  }\n\n  // render() is implemented in the abstract parent class.\n}\n\n/**\n * Need this wrapper function here,\n * since we want to pass a forwardRef\n * so that outer components can\n * access the grandchild DeckGL ref,\n * but we are using a class component.\n */\nconst ScatterplotWrapper = forwardRef((props, deckRef) => (\n  <Scatterplot\n    {...props}\n    deckRef={deckRef}\n  />\n));\nexport default ScatterplotWrapper;\n","import React, { useEffect, useRef } from 'react';\n\nexport default function Tooltip(props) {\n  const {\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n\n  const ref = useRef(null);\n  const isNarrow = (parentWidth < 500);\n  // Do collision detection based on the bounds of the tooltip ancestor element.\n  useEffect(() => {\n    const el = ref.current;\n    const offsetPercentage = isNarrow ? -5 : 10;\n    const translateX = (x > parentWidth / 2) ? -(100 + offsetPercentage) : offsetPercentage;\n    const translateY = (y > parentHeight / 2) ? -(100 + offsetPercentage) : offsetPercentage;\n    const scale = isNarrow ? 0.75 : 1.0;\n    el.style.transform = `translateX(${translateX}%) translateY(${translateY}%) scale(${scale})`;\n    el.style.whiteSpace = (isNarrow ? 'normal' : 'nowrap');\n  });\n\n  return (\n    <div\n      ref={ref}\n      className=\"cell-tooltip bg-primary\"\n      style={{\n        left: `${x}px`,\n        top: `${y}px`,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport Tooltip from './Tooltip';\n\n/**\n * A tooltip component that also incorporates a crosshair element.\n * @param {object} props\n * @param {string} props.parentUuid A unique identifier corresponding to the plot\n * with which this scatterplot is associated.\n * @param {string} props.sourceUuid A unique identifier corresponding to the plot\n * from which this tooltip originated.\n * @param {number} props.x The x coordinate for the tooltip.\n * @param {number} props.y The y coordinate for the tooltip.\n * @param {number} props.parentWidth The width of the parent plot container element.\n * @param {number} props.parentHeight The height of the parent plot container element.\n * @param {React.Component} props.children The tooltip contents as a react component.\n */\nexport default function Tooltip2D(props) {\n  const {\n    parentUuid,\n    sourceUuid,\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n  // Check if out of bounds.\n  if (x < 0 || x > parentWidth || y < 0 || y > parentHeight) {\n    return null;\n  }\n  // Show tooltip or crosshair?\n  const isTooltipVisible = (parentUuid === sourceUuid);\n  const crosshairWidth = 1;\n  return (\n    <>\n      {isTooltipVisible ? (\n        <Tooltip\n          x={x}\n          y={y}\n          parentWidth={parentWidth}\n          parentHeight={parentHeight}\n        >\n          {children}\n        </Tooltip>\n      ) : (\n        <>\n          {x !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: `${x - crosshairWidth / 2}px`,\n                top: 0,\n                width: `${crosshairWidth}px`,\n                height: `${parentHeight}px`,\n              }}\n            />\n          ) : null}\n          {y !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: 0,\n                top: `${y - crosshairWidth / 2}px`,\n                width: `${parentWidth}px`,\n                height: `${crosshairWidth}px`,\n              }}\n            />\n          ) : null}\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function TooltipContent(props) {\n  const {\n    info,\n  } = props;\n\n  return (\n    <table>\n      <tbody>\n        {Object.entries(info).map(([key, value]) => (\n          <tr key={key}>\n            <th>{key}</th>\n            <td>{value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function ScatterplotTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    cellHighlight,\n    width,\n    height,\n    getCellInfo,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, x, y] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      ...(viewInfo && viewInfo.project ? viewInfo.project(cellHighlight) : [null, null]),\n    ]\n  ) : ([null, null, null]));\n\n  return (\n    (cellInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        sourceUuid={sourceUuid}\n        parentWidth={width}\n        parentHeight={height}\n      >\n        <TooltipContent info={cellInfo} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  box: {\n    boxSizing: 'border-box',\n  },\n  checkbox: {\n    padding: '3px',\n    color: theme.palette.primaryForeground,\n    '&:checked': {\n      color: theme.palette.primaryForeground,\n    },\n    '& input': {\n      height: '100%',\n    },\n  },\n  slider: {\n    color: theme.palette.primaryForeground,\n    minWidth: '60px',\n    padding: '10px 0 6px 0',\n  },\n  sliderValueLabel: {\n    '& span': {\n      '& span': {\n        color: theme.palette.primaryBackground,\n      },\n    },\n  },\n  tableContainer: {\n    overflow: 'hidden',\n  },\n  labelCell: {\n    padding: '2px 8px 2px 16px',\n  },\n  inputCell: {\n    padding: '2px 16px 2px 8px',\n    overflow: 'visible',\n  },\n  select: {\n    '& select': {\n      fontSize: '.875rem',\n    },\n  },\n}));\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport { useStyles } from './styles';\n\nexport default function OptionsContainer(props) {\n  const {\n    children,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.box}>\n      <TableContainer className={classes.tableContainer}>\n        <Table className={classes.table} size=\"small\">\n          <TableBody>\n            {children}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from './styles';\n\nexport default function CellColorEncodingOption(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n  } = props;\n\n  const classes = useStyles();\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  function handleColorEncodingChange(event) {\n    setCellColorEncoding(event.target.value);\n  }\n\n  return (\n    <TableRow>\n      <TableCell className={classes.labelCell} htmlFor=\"cell-color-encoding-select\">\n        {observationsLabelNice} Color Encoding\n      </TableCell>\n      <TableCell className={classes.inputCell}>\n        <Select\n          native\n          className={classes.select}\n          value={cellColorEncoding}\n          onChange={handleColorEncodingChange}\n          inputProps={{\n            id: 'cell-color-encoding-select',\n          }}\n        >\n          <option value=\"cellSetSelection\">Cell Sets</option>\n          <option value=\"geneSelection\">Gene Expression</option>\n        </Select>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\n\nexport default function ScatterplotOptions(props) {\n  const {\n    observationsLabel,\n    cellRadius,\n    setCellRadius,\n    cellSetLabelsVisible,\n    setCellSetLabelsVisible,\n    cellSetLabelSize,\n    setCellSetLabelSize,\n    cellSetPolygonsVisible,\n    setCellSetPolygonsVisible,\n    cellColorEncoding,\n    setCellColorEncoding,\n  } = props;\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  const classes = useStyles();\n\n  function handleRadiusChange(event, value) {\n    setCellRadius(value);\n  }\n\n  function handleLabelVisibilityChange(event) {\n    setCellSetLabelsVisible(event.target.checked);\n  }\n\n  function handleLabelSizeChange(event, value) {\n    setCellSetLabelSize(value);\n  }\n\n  function handlePolygonVisibilityChange(event) {\n    setCellSetPolygonsVisible(event.target.checked);\n  }\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Labels Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetLabelsVisible}\n            onChange={handleLabelVisibilityChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Label Size\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={!cellSetLabelsVisible}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellSetLabelSize}\n            onChange={handleLabelSizeChange}\n            aria-labelledby=\"cell-set-label-size-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={8}\n            max={36}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Polygons Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetPolygonsVisible}\n            onChange={handlePolygonVisibilityChange}\n            name=\"scatterplot-option-cell-set-polygons\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Radius\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellRadius}\n            onChange={handleRadiusChange}\n            aria-labelledby=\"cell-radius-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.25}\n            min={0.25}\n            max={8}\n          />\n        </TableCell>\n      </TableRow>\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n    </OptionsContainer>\n  );\n}\n","import React, {\n  useState, useEffect, useCallback, useMemo,\n} from 'react';\nimport { extent } from 'd3-array';\nimport clamp from 'lodash/clamp';\nimport isEqual from 'lodash/isEqual';\nimport TitleInfo from '../TitleInfo';\nimport { pluralize, capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { setCellSelection, mergeCellSets } from '../utils';\nimport { getCellSetPolygons } from '../sets/cell-set-utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useGeneSelection,\n  useExpressionAttrs,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport Scatterplot from './Scatterplot';\nimport ScatterplotTooltipSubscriber from './ScatterplotTooltipSubscriber';\nimport ScatterplotOptions from './ScatterplotOptions';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetComponentHover,\n  useSetComponentViewInfo,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst SCATTERPLOT_DATA_TYPES = ['cells', 'expression-matrix', 'cell-sets'];\n\n/**\n * A subscriber component for the scatterplot.\n * @param {object} props\n * @param {number} props.uuid The unique identifier for this component.\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {boolean} props.disableTooltip Should the tooltip be disabled?\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title An override value for the component title.\n */\nexport default function ScatterplotSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    disableTooltip = false,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    title: titleOverride,\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    embeddingZoom: zoom,\n    embeddingTargetX: targetX,\n    embeddingTargetY: targetY,\n    embeddingTargetZ: targetZ,\n    embeddingType: mapping,\n    cellFilter,\n    cellHighlight,\n    geneSelection,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    embeddingCellSetPolygonsVisible: cellSetPolygonsVisible,\n    embeddingCellSetLabelsVisible: cellSetLabelsVisible,\n    embeddingCellSetLabelSize: cellSetLabelSize,\n    embeddingCellRadius: cellRadius,\n  }, {\n    setEmbeddingZoom: setZoom,\n    setEmbeddingTargetX: setTargetX,\n    setEmbeddingTargetY: setTargetY,\n    setEmbeddingTargetZ: setTargetZ,\n    setCellFilter,\n    setCellSetSelection,\n    setCellHighlight,\n    setCellSetColor,\n    setCellColorEncoding,\n    setAdditionalCellSets,\n    setEmbeddingCellSetPolygonsVisible: setCellSetPolygonsVisible,\n    setEmbeddingCellSetLabelsVisible: setCellSetLabelsVisible,\n    setEmbeddingCellSetLabelSize: setCellSetLabelSize,\n    setEmbeddingCellRadius: setCellRadius,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.scatterplot, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [width, height, deckRef] = useDeckCanvasSize();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    SCATTERPLOT_DATA_TYPES,\n  );\n\n  const title = titleOverride || `Scatterplot (${mapping})`;\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells, cellsCount] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [cellSets] = useCellSetsData(\n    loaders,\n    dataset,\n    setItemIsReady,\n    addUrl,\n    false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  const [cellRadiusScale, setCellRadiusScale] = useState(0.2);\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const setCellSelectionProp = useCallback((v) => {\n    setCellSelection(\n      v, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n    );\n  }, [additionalCellSets, cellSetColor, setCellColorEncoding,\n    setAdditionalCellSets, setCellSetColor, setCellSetSelection]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: attrs,\n  }), [cellColorEncoding, geneSelection, mergedCellSets,\n    cellSetSelection, cellSetColor, expressionData, attrs]);\n\n  // cellSetPolygonCache is an array of tuples like [(key0, val0), (key1, val1), ...],\n  // where the keys are cellSetSelection arrays.\n  const [cellSetPolygonCache, setCellSetPolygonCache] = useState([]);\n  const cacheHas = (cache, key) => cache.findIndex(el => isEqual(el[0], key)) !== -1;\n  const cacheGet = (cache, key) => cache.find(el => isEqual(el[0], key))?.[1];\n  const cellSetPolygons = useMemo(() => {\n    if ((cellSetLabelsVisible || cellSetPolygonsVisible)\n      && !cacheHas(cellSetPolygonCache, cellSetSelection)\n      && mergedCellSets?.tree?.length\n      && Object.values(cells).length\n      && cellSetColor?.length) {\n      const newCellSetPolygons = getCellSetPolygons({\n        cells,\n        mapping,\n        cellSets: mergedCellSets,\n        cellSetSelection,\n        cellSetColor,\n      });\n      setCellSetPolygonCache(cache => [...cache, [cellSetSelection, newCellSetPolygons]]);\n      return newCellSetPolygons;\n    }\n    return cacheGet(cellSetPolygonCache, cellSetSelection) || [];\n  }, [cellSetPolygonsVisible, cellSetPolygonCache, cellSetLabelsVisible,\n    cells, mapping, mergedCellSets, cellSetSelection, cellSetColor]);\n\n\n  const cellSelection = useMemo(() => Array.from(cellColors.keys()), [cellColors]);\n\n  // After cells have loaded or changed,\n  // compute the cell radius scale based on the\n  // extents of the cell coordinates on the x/y axes.\n  useEffect(() => {\n    const cellValues = cells && Object.values(cells);\n    if (cellValues?.length) {\n      const cellCoordinates = Object.values(cells)\n        .map(c => c.mappings[mapping]);\n      const xExtent = extent(cellCoordinates, c => c[0]);\n      const yExtent = extent(cellCoordinates, c => c[1]);\n      const xRange = xExtent[1] - xExtent[0];\n      const yRange = yExtent[1] - yExtent[0];\n      const diagonalLength = Math.sqrt((xRange ** 2) + (yRange ** 2));\n      // The 300 value here is a heuristic.\n      const newScale = clamp(diagonalLength / 300, 0, 0.2);\n      if (newScale) {\n        setCellRadiusScale(newScale);\n      } if (typeof targetX !== 'number' || typeof targetY !== 'number') {\n        const newTargetX = xExtent[0] + xRange / 2;\n        const newTargetY = yExtent[0] + yRange / 2;\n        const newZoom = Math.log2(Math.min(width / xRange, height / yRange));\n        setTargetX(newTargetX);\n        // Graphics rendering has the y-axis going south so we need to multiply by negative one.\n        setTargetY(-newTargetY);\n        setZoom(newZoom);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cells, mapping]);\n\n  const getCellInfo = useCallback((cellId) => {\n    const cellInfo = cells[cellId];\n    return {\n      [`${capitalize(observationsLabel)} ID`]: cellId,\n      ...(cellInfo ? cellInfo.factors : {}),\n    };\n  }, [cells, observationsLabel]);\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${cellsCount} ${pluralize(observationsLabel, observationsPluralLabel, cellsCount)}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n      options={(\n        <ScatterplotOptions\n          observationsLabel={observationsLabel}\n          cellRadius={cellRadius}\n          setCellRadius={setCellRadius}\n          cellSetLabelsVisible={cellSetLabelsVisible}\n          setCellSetLabelsVisible={setCellSetLabelsVisible}\n          cellSetLabelSize={cellSetLabelSize}\n          setCellSetLabelSize={setCellSetLabelSize}\n          cellSetPolygonsVisible={cellSetPolygonsVisible}\n          setCellSetPolygonsVisible={setCellSetPolygonsVisible}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n        />\n      )}\n    >\n      <Scatterplot\n        ref={deckRef}\n        uuid={uuid}\n        theme={theme}\n        viewState={{ zoom, target: [targetX, targetY, targetZ] }}\n        setViewState={({ zoom: newZoom, target }) => {\n          setZoom(newZoom);\n          setTargetX(target[0]);\n          setTargetY(target[1]);\n          setTargetZ(target[2]);\n        }}\n        cells={cells}\n        mapping={mapping}\n        cellFilter={cellFilter}\n        cellSelection={cellSelection}\n        cellHighlight={cellHighlight}\n        cellColors={cellColors}\n        cellSetPolygons={cellSetPolygons}\n\n        cellSetLabelSize={cellSetLabelSize}\n        cellSetLabelsVisible={cellSetLabelsVisible}\n        cellSetPolygonsVisible={cellSetPolygonsVisible}\n\n        setCellFilter={setCellFilter}\n        setCellSelection={setCellSelectionProp}\n        setCellHighlight={setCellHighlight}\n        cellRadiusScale={cellRadiusScale * cellRadius}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n      />\n      {!disableTooltip && (\n      <ScatterplotTooltipSubscriber\n        parentUuid={uuid}\n        cellHighlight={cellHighlight}\n        width={width}\n        height={height}\n        getCellInfo={getCellInfo}\n      />\n      )}\n    </TitleInfo>\n  );\n}\n","import React, { forwardRef } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { ScatterplotLayer, PolygonLayer, COORDINATE_SYSTEM } from 'deck.gl';\nimport { Matrix4 } from 'math.gl';\nimport { ScaleBarLayer, MultiscaleImageLayer } from '@hms-dbmi/viv';\nimport { SelectablePolygonLayer, getSelectionLayers } from '../../layers';\nimport { cellLayerDefaultProps, PALETTE, DEFAULT_COLOR } from '../utils';\nimport { getSourceFromLoader } from '../../utils';\nimport { square, getLayerLoaderTuple, renderSubBitmaskLayers } from './utils';\nimport AbstractSpatialOrScatterplot from '../shared-spatial-scatterplot/AbstractSpatialOrScatterplot';\nimport {\n  createCellsQuadTree,\n} from '../shared-spatial-scatterplot/quadtree';\n\nconst CELLS_LAYER_ID = 'cells-layer';\nconst MOLECULES_LAYER_ID = 'molecules-layer';\nconst NEIGHBORHOODS_LAYER_ID = 'neighborhoods-layer';\n\n// Default getter function props.\nconst defaultGetCellCoords = cell => cell.xy;\nconst makeDefaultGetCellPolygon = radius => (cellEntry) => {\n  const cell = cellEntry[1];\n  return cell.poly?.length ? cell.poly : square(cell.xy[0], cell.xy[1], radius);\n};\nconst makeDefaultGetCellColors = cellColors => cellEntry => (\n  cellColors && cellColors.get(cellEntry[0])\n) || DEFAULT_COLOR;\nconst makeDefaultGetCellIsSelected = cellSelection => cellEntry => (\n  cellSelection\n    ? cellSelection.includes(cellEntry[0])\n    : true // If nothing is selected, everything is selected.\n);\n\n/**\n * React component which expresses the spatial relationships between cells and molecules.\n * @param {object} props\n * @param {string} props.uuid A unique identifier for this component,\n * used to determine when to show tooltips vs. crosshairs.\n * @param {number} props.height Height of the DeckGL canvas, used when\n * rendering the scale bar layer.\n * @param {number} props.width Width of the DeckGL canvas, used when\n * rendering the scale bar layer.\n * @param {object} props.viewState The DeckGL viewState object.\n * @param {function} props.setViewState A handler for updating the DeckGL\n * viewState object.\n * @param {object} props.molecules Molecules data.\n * @param {object} props.cells Cells data.\n * @param {object} props.neighborhoods Neighborhoods data.\n * @param {number} props.lineWidthScale Width of cell border in view space (deck.gl).\n * @param {number} props.lineWidthMaxPixels Max width of the cell border in pixels (deck.gl).\n * @param {object} props.imageLayerLoaders An object mapping raster layer index to Viv loader\n * instances.\n * @param {object} props.cellColors Map from cell IDs to colors [r, g, b].\n * @param {function} props.getCellCoords Getter function for cell coordinates\n * (used by the selection layer).\n * @param {function} props.getCellColor Getter function for cell color as [r, g, b] array.\n * @param {function} props.getCellPolygon Getter function for cell polygons.\n * @param {function} props.getCellIsSelected Getter function for cell layer isSelected.\n * @param {function} props.getMoleculeColor\n * @param {function} props.getMoleculePosition\n * @param {function} props.getNeighborhoodPolygon\n * @param {function} props.updateViewInfo Handler for DeckGL viewport updates,\n * used when rendering tooltips and crosshairs.\n * @param {function} props.onCellClick Getter function for cell layer onClick.\n */\nclass Spatial extends AbstractSpatialOrScatterplot {\n  constructor(props) {\n    super(props);\n\n    // To avoid storing large arrays/objects\n    // in React state, this component\n    // uses instance variables.\n    // All instance variables used in this class:\n    this.cellsEntries = [];\n    this.moleculesEntries = [];\n    this.cellsQuadTree = null;\n    this.cellsLayer = null;\n    this.moleculesLayer = null;\n    this.neighborhoodsLayer = null;\n    this.imageLayers = [];\n    this.layerLoaderSelections = {};\n    // Better for the bitmask layer when there is no color data to use this.\n    // 2048 is best for performance and for stability (4096 texture size is not always supported).\n    this.randomColorData = {\n      data: new Uint8Array(2048 * 2048 * 3).map(\n        (_, j) => (j < 4 ? 0 : Math.round(255 * Math.random())),\n      ),\n      // This buffer should be able to hold colors for 2048 x 2048 ~ 4 million cells.\n      height: 2048,\n      width: 2048,\n    };\n    this.color = { ...this.randomColorData };\n\n    // Initialize data and layers.\n    this.onUpdateCellsData();\n    this.onUpdateCellsLayer();\n    this.onUpdateMoleculesData();\n    this.onUpdateMoleculesLayer();\n    this.onUpdateNeighborhoodsData();\n    this.onUpdateNeighborhoodsLayer();\n    this.onUpdateImages();\n  }\n\n  createCellsLayer(layerDef) {\n    const {\n      radius, stroked, visible, opacity,\n    } = layerDef;\n    const { cellsEntries } = this;\n    const {\n      cellFilter,\n      cellSelection,\n      setCellHighlight,\n      setComponentHover,\n      getCellIsSelected = makeDefaultGetCellIsSelected(\n        cellsEntries.length === cellSelection.length ? null : cellSelection,\n      ),\n      cellColors,\n      getCellColor = makeDefaultGetCellColors(cellColors),\n      getCellPolygon = makeDefaultGetCellPolygon(radius),\n      onCellClick,\n      lineWidthScale = 10,\n      lineWidthMaxPixels = 2,\n    } = this.props;\n    const filteredCellsEntries = (cellFilter\n      ? cellsEntries.filter(cellEntry => cellFilter.includes(cellEntry[0]))\n      : cellsEntries);\n\n    // Graphics rendering has the y-axis positive going south,\n    // so we need to flip it for rendering tooltips.\n    const flipYTooltip = true;\n\n    return new SelectablePolygonLayer({\n      id: CELLS_LAYER_ID,\n      backgroundColor: [0, 0, 0],\n      isSelected: getCellIsSelected,\n      getPolygon: getCellPolygon,\n      updateTriggers: {\n        getFillColor: [opacity],\n        getLineWidth: [stroked],\n      },\n      getFillColor: (cellEntry) => {\n        const color = getCellColor(cellEntry);\n        color[3] = opacity * 255;\n        return color;\n      },\n      getLineColor: (cellEntry) => {\n        const color = getCellColor(cellEntry);\n        color[3] = 255;\n        return color;\n      },\n      onClick: (info) => {\n        if (onCellClick) {\n          onCellClick(info);\n        }\n      },\n      visible,\n      getLineWidth: stroked ? 1 : 0,\n      lineWidthScale,\n      lineWidthMaxPixels,\n      ...cellLayerDefaultProps(\n        filteredCellsEntries, undefined, setCellHighlight,\n        setComponentHover, flipYTooltip,\n      ),\n    });\n  }\n\n  createMoleculesLayer(layerDef) {\n    const {\n      setMoleculeHighlight,\n      getMoleculeColor = d => PALETTE[d[2] % PALETTE.length],\n      getMoleculePosition = d => [d[0], d[1], 0],\n    } = this.props;\n    const { moleculesEntries } = this;\n\n    return new ScatterplotLayer({\n      id: MOLECULES_LAYER_ID,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: moleculesEntries,\n      pickable: true,\n      autoHighlight: true,\n      radiusMaxPixels: 3,\n      opacity: layerDef.opacity,\n      visible: layerDef.visible,\n      getRadius: layerDef.radius,\n      getPosition: getMoleculePosition,\n      getLineColor: getMoleculeColor,\n      getFillColor: getMoleculeColor,\n      onHover: (info) => {\n        if (setMoleculeHighlight) {\n          if (info.object) {\n            setMoleculeHighlight(info.object[3]);\n          } else {\n            setMoleculeHighlight(null);\n          }\n        }\n      },\n    });\n  }\n\n  createNeighborhoodsLayer(layerDef) {\n    const {\n      getNeighborhoodPolygon = (neighborhoodsEntry) => {\n        const neighborhood = neighborhoodsEntry[1];\n        return neighborhood.poly;\n      },\n    } = this.props;\n    const { neighborhoodsEntries } = this;\n\n    return new PolygonLayer({\n      id: NEIGHBORHOODS_LAYER_ID,\n      getPolygon: getNeighborhoodPolygon,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: neighborhoodsEntries,\n      pickable: true,\n      autoHighlight: true,\n      stroked: true,\n      filled: false,\n      getElevation: 0,\n      getLineWidth: 10,\n      visible: layerDef.visible,\n    });\n  }\n\n  createSelectionLayers() {\n    const { viewState, getCellCoords = defaultGetCellCoords, setCellSelection } = this.props;\n    const { tool } = this.state;\n    const { cellsQuadTree } = this;\n    return getSelectionLayers(\n      tool,\n      viewState.zoom,\n      CELLS_LAYER_ID,\n      getCellCoords,\n      setCellSelection,\n      cellsQuadTree,\n    );\n  }\n\n  createScaleBarLayer() {\n    const {\n      viewState, width, height, imageLayerLoaders = {}, layers,\n    } = this.props;\n    const use3d = (layers || []).some(i => i.use3d);\n    // Just get the first layer/loader since they should all be spatially\n    // resolved and therefore have the same unit size scale.\n    const loaders = Object.values(imageLayerLoaders);\n    if (!viewState || !width || !height || loaders.length < 1) return null;\n    const loader = loaders[0];\n    if (!loader) return null;\n    const source = getSourceFromLoader(loader);\n    if (!source.meta) return null;\n    const { physicalSizes } = source.meta;\n    if (physicalSizes && !use3d) {\n      const { x } = physicalSizes;\n      const { unit, size } = x;\n      if (unit && size) {\n        return new ScaleBarLayer({\n          id: 'scalebar-layer',\n          loader,\n          unit,\n          size,\n          viewState: { ...viewState, width, height },\n        });\n      }\n      return null;\n    }\n    return null;\n  }\n\n  createImageLayer(rawLayerDef, loader, i) {\n    const layerDef = {\n      ...rawLayerDef,\n      channels: rawLayerDef.channels\n        .filter(channel => channel.selection && channel.color && channel.slider),\n    };\n\n    // We need to keep the same loaderSelection array reference,\n    // otherwise the Viv layer will not be re-used as we want it to,\n    // since loaderSelection is one of its `updateTriggers`.\n    // Reference: https://github.com/hms-dbmi/viv/blob/ad86d0f/src/layers/MultiscaleImageLayer/MultiscaleImageLayer.js#L127\n    let loaderSelection;\n    const nextLoaderSelection = layerDef.channels.map(c => c.selection);\n    const prevLoaderSelection = this.layerLoaderSelections[layerDef.index];\n    if (isEqual(prevLoaderSelection, nextLoaderSelection)) {\n      loaderSelection = prevLoaderSelection;\n    } else {\n      loaderSelection = nextLoaderSelection;\n      this.layerLoaderSelections[layerDef.index] = nextLoaderSelection;\n    }\n    const layerProps = {\n      colormap: layerDef.colormap,\n      opacity: layerDef.opacity,\n      transparentColor: layerDef.transparentColor,\n      colors: layerDef.channels.map(c => c.color),\n      sliders: layerDef.channels.map(c => c.slider),\n      resolution: layerDef.resolution,\n      renderingMode: layerDef.renderingMode,\n      xSlice: layerDef.xSlice,\n      ySlice: layerDef.ySlice,\n      zSlice: layerDef.zSlice,\n      callback: layerDef.callback,\n      visibilities: layerDef.channels.map(\n        c => (!layerDef.visible && typeof layerDef.visible === 'boolean' ? false : c.visible),\n      ),\n    };\n\n    if (!loader || !layerProps) return null;\n    const { metadata: { transform }, data } = loader;\n    let modelMatrix;\n    if (transform) {\n      const { scale, translate } = transform;\n      modelMatrix = new Matrix4().translate([translate.x, translate.y, 0]).scale(scale);\n    } else if (layerDef.modelMatrix) {\n      // eslint-disable-next-line prefer-destructuring\n      modelMatrix = new Matrix4(layerDef.modelMatrix);\n    }\n    if (rawLayerDef.type === 'bitmask') {\n      return new MultiscaleImageLayer({\n        // `bitmask` is used by the AbstractSpatialOrScatterplot\n        // https://github.com/vitessce/vitessce/pull/927/files#diff-9cab35a2ca0c5b6d9754b177810d25079a30ca91efa062d5795181360bc3ff2cR111\n        id: `bitmask-layer-${layerDef.index}-${i}`,\n        channelIsOn: layerProps.visibilities,\n        opacity: layerProps.opacity,\n        modelMatrix,\n        hoveredCell: Number(this.props.cellHighlight),\n        renderSubLayers: renderSubBitmaskLayers,\n        loader: data,\n        loaderSelection,\n        // For some reason, deck.gl doesn't recognize the prop diffing\n        // unless these are separated out.  I don't think it's a bug, just\n        // has to do with the fact that we don't have it in the `defaultProps`,\n        // could be wrong though.\n        cellColorData: this.color.data,\n        cellColorHeight: this.color.height,\n        cellColorWidth: this.color.width,\n        excludeBackground: true,\n        onViewportLoad: layerProps.callback,\n      });\n    }\n    const [Layer, layerLoader] = getLayerLoaderTuple(\n      data,\n      layerDef.use3d,\n    );\n\n    return new Layer({\n      loader: layerLoader,\n      id: `${layerDef.use3d ? 'volume' : 'image'}-layer-${\n        layerDef.index\n      }-${i}`,\n      colorValues: layerProps.colors,\n      sliderValues: layerProps.sliders,\n      loaderSelection,\n      channelIsOn: layerProps.visibilities,\n      opacity: layerProps.opacity,\n      colormap: layerProps.colormap,\n      modelMatrix,\n      transparentColor: layerProps.transparentColor,\n      resolution: layerProps.resolution,\n      renderingMode: layerProps.renderingMode,\n      pickable: false,\n      xSlice: layerProps.xSlice,\n      ySlice: layerProps.ySlice,\n      zSlice: layerProps.zSlice,\n      onViewportLoad: layerProps.callback,\n    });\n  }\n\n  createImageLayers() {\n    const { layers, imageLayerLoaders = {}, rasterLayersCallbacks = [] } = this.props;\n    const use3d = (layers || []).some(i => i.use3d);\n    const use3dIndex = (layers || []).findIndex(i => i.use3d);\n    return (layers || [])\n      .filter(layer => (layer.type === 'raster' || layer.type === 'bitmask'))\n      .filter(layer => (use3d ? layer.use3d === use3d : true))\n      .map((layer, i) => this.createImageLayer(\n        { ...layer, callback: rasterLayersCallbacks[use3d ? use3dIndex : i] },\n        imageLayerLoaders[layer.index], i,\n      ));\n  }\n\n  getLayers() {\n    const {\n      imageLayers,\n      cellsLayer,\n      neighborhoodsLayer,\n      moleculesLayer,\n    } = this;\n    return [\n      ...imageLayers,\n      cellsLayer,\n      neighborhoodsLayer,\n      moleculesLayer,\n      this.createScaleBarLayer(),\n      ...this.createSelectionLayers(),\n    ];\n  }\n\n  onUpdateCellsData() {\n    const {\n      cells = {},\n      getCellCoords = defaultGetCellCoords,\n    } = this.props;\n    const cellsEntries = Object.entries(cells);\n    this.cellsEntries = cellsEntries;\n    this.cellsQuadTree = createCellsQuadTree(cellsEntries, getCellCoords);\n  }\n\n  onUpdateCellsLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'cells');\n    if (layerDef) {\n      this.cellsLayer = this.createCellsLayer(layerDef);\n    } else {\n      this.cellsLayer = null;\n    }\n  }\n\n  onUpdateCellColors() {\n    const color = this.randomColorData;\n    const { size } = this.props.cellColors;\n    if (typeof size === 'number') {\n      const cellIds = this.props.cellColors.keys();\n      color.data = new Uint8Array(color.height * color.width * 3).fill(128);\n      // 0th cell id is the empty space of the image i.e black color.\n      color.data[0] = 0;\n      color.data[1] = 0;\n      color.data[2] = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      for (const id of cellIds) {\n        if (id > 0) {\n          const cellColor = this.props.cellColors.get(id);\n          if (cellColor) {\n            color.data.set(cellColor.slice(0, 3), Number(id) * 3);\n          }\n        }\n      }\n    }\n    this.color = color;\n  }\n\n  onUpdateMoleculesData() {\n    const { molecules = {} } = this.props;\n    const moleculesEntries = Object\n      .entries(molecules)\n      .flatMap(([molecule, coords], index) => coords.map(([x, y]) => [\n        x, y, index, molecule,\n      ]));\n    this.moleculesEntries = moleculesEntries;\n  }\n\n  onUpdateMoleculesLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'molecules');\n    if (layerDef) {\n      this.moleculesLayer = this.createMoleculesLayer(layerDef);\n    } else {\n      this.moleculesLayer = null;\n    }\n  }\n\n  onUpdateNeighborhoodsData() {\n    const { neighborhoods = {} } = this.props;\n    const neighborhoodsEntries = Object\n      .entries(neighborhoods);\n    this.neighborhoodsEntries = neighborhoodsEntries;\n  }\n\n  onUpdateNeighborhoodsLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'neighborhoods');\n    if (layerDef) {\n      this.neighborhoodsLayer = this.createNeighborhoodsLayer(layerDef);\n    } else {\n      this.neighborhoodsLayer = null;\n    }\n  }\n\n  onUpdateImages() {\n    this.imageLayers = this.createImageLayers();\n  }\n\n  viewInfoDidUpdate() {\n    const { getCellCoords = defaultGetCellCoords } = this.props;\n    super.viewInfoDidUpdate(getCellCoords);\n  }\n\n  /**\n   * Here, asynchronously check whether props have\n   * updated which require re-computing memoized variables,\n   * followed by a re-render.\n   * This function does not follow React conventions or paradigms,\n   * it is only implemented this way to try to squeeze out\n   * performance.\n   * @param {object} prevProps The previous props to diff against.\n   */\n  componentDidUpdate(prevProps) {\n    this.viewInfoDidUpdate();\n\n    const shallowDiff = propName => (prevProps[propName] !== this.props[propName]);\n    if (['cells'].some(shallowDiff)) {\n      // Cells data changed.\n      this.onUpdateCellsData();\n      this.forceUpdate();\n    }\n\n    if ([\n      'layers', 'cells', 'cellFilter', 'cellSelection', 'cellColors',\n    ].some(shallowDiff)) {\n      // Cells layer props changed.\n      this.onUpdateCellsLayer();\n      this.forceUpdate();\n    }\n\n    if (['cellColors'].some(shallowDiff)) {\n      // Cells Color layer props changed.\n      this.onUpdateCellColors();\n      this.forceUpdate();\n    }\n\n    if (['molecules'].some(shallowDiff)) {\n      // Molecules data changed.\n      this.onUpdateMoleculesData();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'molecules'].some(shallowDiff)) {\n      // Molecules layer props changed.\n      this.onUpdateMoleculesLayer();\n      this.forceUpdate();\n    }\n\n    if (['neighborhoods'].some(shallowDiff)) {\n      // Neighborhoods data changed.\n      this.onUpdateNeighborhoodsData();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'neighborhoods'].some(shallowDiff)) {\n      // Neighborhoods layer props changed.\n      this.onUpdateNeighborhoodsLayer();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'imageLayerLoaders', 'cellColors', 'cellHighlight', 'rasterLayersCallbacks'].some(shallowDiff)) {\n      // Image layers changed.\n      this.onUpdateImages();\n      this.forceUpdate();\n    }\n  }\n\n  // render() is implemented in the abstract parent class.\n}\n\n/**\n * Need this wrapper function here,\n * since we want to pass a forwardRef\n * so that outer components can\n * access the grandchild DeckGL ref,\n * but we are using a class component.\n */\nconst SpatialWrapper = forwardRef((props, deckRef) => <Spatial {...props} deckRef={deckRef} />);\nexport default SpatialWrapper;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\n\nconst useStyles = makeStyles(() => createStyles({\n  cameraLabel: {\n    padding: '0px 0px 0px 16px',\n  },\n  box: {\n    padding: '0px',\n  },\n  button: {\n    padding: '0px 0px 0px 8px',\n  },\n}));\n\nconst ToggleFixedAxisButton = ({\n  setSpatialAxisFixed,\n  spatialAxisFixed,\n  use3d,\n}) => {\n  const classes = useStyles();\n  return (\n    <TableRow>\n      <TableCell className={classes.cameraLabel}>\n      Fix Camera Axis\n      </TableCell>\n      <TableCell className={classes.box}>\n        <Checkbox\n          onClick={() => setSpatialAxisFixed(!spatialAxisFixed)}\n          disabled={!use3d}\n          checked={Boolean(spatialAxisFixed)}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default function SpatialOptions(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n    setSpatialAxisFixed,\n    spatialAxisFixed,\n    use3d,\n  } = props;\n\n  return (\n    <OptionsContainer>\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n      <ToggleFixedAxisButton\n        setSpatialAxisFixed={setSpatialAxisFixed}\n        spatialAxisFixed={spatialAxisFixed}\n        use3d={use3d}\n      />\n    </OptionsContainer>\n  );\n}\n","import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function SpatialTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    cellHighlight,\n    width,\n    height,\n    getCellInfo,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, x, y] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      ...(viewInfo && viewInfo.project ? viewInfo.project(cellHighlight) : [null, null]),\n    ]\n  ) : ([null, null, null]));\n\n  return (\n    (cellInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        sourceUuid={sourceUuid}\n        parentWidth={width}\n        parentHeight={height}\n      >\n        <TooltipContent info={cellInfo} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n","import React, { useEffect, useMemo, useCallback } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { setCellSelection, mergeCellSets } from '../utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useGeneSelection,\n  useMoleculesData,\n  useNeighborhoodsData,\n  useRasterData,\n  useExpressionAttrs,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport Spatial from './Spatial';\nimport SpatialOptions from './SpatialOptions';\nimport SpatialTooltipSubscriber from './SpatialTooltipSubscriber';\nimport { makeSpatialSubtitle, getInitialSpatialTargets } from './utils';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetComponentHover,\n  useSetComponentViewInfo,\n  useAuxiliaryCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst SPATIAL_DATA_TYPES = [\n  'cells', 'molecules', 'raster', 'cell-sets', 'expression-matrix',\n];\n\n/**\n * A subscriber component for the spatial plot.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function SpatialSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    subobservationsLabelOverride: subobservationsLabel = 'molecule',\n    subobservationsPluralLabelOverride: subobservationsPluralLabel = `${subobservationsLabel}s`,\n    theme,\n    disableTooltip = false,\n    title = 'Spatial',\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    spatialZoom: zoom,\n    spatialTargetX: targetX,\n    spatialTargetY: targetY,\n    spatialTargetZ: targetZ,\n    spatialRotationX: rotationX,\n    spatialRotationY: rotationY,\n    spatialRotationZ: rotationZ,\n    spatialRotationOrbit: rotationOrbit,\n    spatialOrbitAxis: orbitAxis,\n    spatialRasterLayers: rasterLayers,\n    spatialCellsLayer: cellsLayer,\n    spatialMoleculesLayer: moleculesLayer,\n    spatialNeighborhoodsLayer: neighborhoodsLayer,\n    cellFilter,\n    cellHighlight,\n    geneSelection,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    spatialAxisFixed,\n  }, {\n    setSpatialZoom: setZoom,\n    setSpatialTargetX: setTargetX,\n    setSpatialTargetY: setTargetY,\n    setSpatialTargetZ: setTargetZ,\n    setSpatialRotationX: setRotationX,\n    setSpatialRotationOrbit: setRotationOrbit,\n    setSpatialOrbitAxis: setOrbitAxis,\n    setSpatialRasterLayers: setRasterLayers,\n    setSpatialCellsLayer: setCellsLayer,\n    setSpatialMoleculesLayer: setMoleculesLayer,\n    setSpatialNeighborhoodsLayer: setNeighborhoodsLayer,\n    setCellFilter,\n    setCellSetSelection,\n    setCellHighlight,\n    setCellSetColor,\n    setCellColorEncoding,\n    setAdditionalCellSets,\n    setMoleculeHighlight,\n    setSpatialAxisFixed,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.spatial, coordinationScopes);\n\n  const [\n    {\n      rasterLayersCallbacks,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const use3d = rasterLayers?.some(l => l.use3d);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    SPATIAL_DATA_TYPES,\n  );\n  const [width, height, deckRef] = useDeckCanvasSize();\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  // Also clear the array of automatically-initialized layers.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells, cellsCount] = useCellsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialCellsLayer: setCellsLayer },\n    { spatialCellsLayer: cellsLayer },\n  );\n  const [molecules, moleculesCount, locationsCount] = useMoleculesData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialMoleculesLayer: setMoleculesLayer },\n    { spatialMoleculesLayer: moleculesLayer },\n  );\n  const [neighborhoods] = useNeighborhoodsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialNeighborhoodsLayer: setNeighborhoodsLayer },\n    { spatialNeighborhoodsLayer: neighborhoodsLayer },\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialRasterLayers: setRasterLayers },\n    { spatialRasterLayers: rasterLayers },\n  );\n\n  const layers = useMemo(() => {\n    // Only want to pass in cells layer once if there is not `bitmask`.\n    // We pass in the cells data regardless because it is needed for selection,\n    // but the rendering layer itself is not needed.\n    const canPassInCellsLayer = !imageLayerMeta.some(l => l?.metadata?.isBitmask);\n    return [\n      ...(moleculesLayer ? [{ ...moleculesLayer, type: 'molecules' }] : []),\n      ...((cellsLayer && canPassInCellsLayer) ? [{ ...cellsLayer, type: 'cells' }] : []),\n      ...(neighborhoodsLayer ? [{ ...neighborhoodsLayer, type: 'neighborhoods' }] : []),\n      ...(rasterLayers ? rasterLayers.map(l => ({ ...l, type: (l.type && ['raster', 'bitmask'].includes(l.type) ? l.type : 'raster') })) : []),\n    ];\n  }, [cellsLayer, moleculesLayer, neighborhoodsLayer, rasterLayers, imageLayerMeta]);\n\n  useEffect(() => {\n    if ((typeof targetX !== 'number' || typeof targetY !== 'number')) {\n      const {\n        initialTargetX, initialTargetY, initialTargetZ, initialZoom,\n      } = getInitialSpatialTargets({\n        width,\n        height,\n        cells,\n        imageLayerLoaders,\n        useRaster: Boolean(loaders[dataset].loaders.raster),\n        use3d,\n      });\n      setTargetX(initialTargetX);\n      setTargetY(initialTargetY);\n      setTargetZ(initialTargetZ);\n      setZoom(initialZoom);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageLayerLoaders, cells, targetX, targetY, setTargetX, setTargetY, setZoom, use3d]);\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const setCellSelectionProp = useCallback((v) => {\n    setCellSelection(\n      v, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n    );\n  }, [additionalCellSets, cellSetColor, setCellColorEncoding,\n    setAdditionalCellSets, setCellSetColor, setCellSetSelection]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: attrs,\n  }), [cellColorEncoding, geneSelection, mergedCellSets,\n    cellSetColor, cellSetSelection, expressionData, attrs]);\n\n  const cellSelection = useMemo(() => Array.from(cellColors.keys()), [cellColors]);\n\n  const getCellInfo = (cellId) => {\n    const cell = cells[cellId];\n    if (cell) {\n      return {\n        [`${capitalize(observationsLabel)} ID`]: cellId,\n        ...cell.factors,\n      };\n    }\n    return null;\n  };\n\n  const setViewState = ({\n    zoom: newZoom,\n    target,\n    rotationX: newRotationX,\n    rotationOrbit: newRotationOrbit,\n    orbitAxis: newOrbitAxis,\n  }) => {\n    setZoom(newZoom);\n    setTargetX(target[0]);\n    setTargetY(target[1]);\n    setTargetZ(target[2]);\n    setRotationX(newRotationX);\n    setRotationOrbit(newRotationOrbit);\n    setOrbitAxis(newOrbitAxis);\n  };\n\n  const subtitle = makeSpatialSubtitle({\n    observationsCount: cellsCount,\n    observationsLabel,\n    observationsPluralLabel,\n    subobservationsCount: moleculesCount,\n    subobservationsLabel,\n    subobservationsPluralLabel,\n    locationsCount,\n  });\n  return (\n    <TitleInfo\n      title={title}\n      info={subtitle}\n      isSpatial\n      urls={urls}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      options={(\n        <SpatialOptions\n          observationsLabel={observationsLabel}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n          setSpatialAxisFixed={setSpatialAxisFixed}\n          spatialAxisFixed={spatialAxisFixed}\n          use3d={use3d}\n        />\n      )}\n    >\n      <Spatial\n        ref={deckRef}\n        uuid={uuid}\n        width={width}\n        height={height}\n        viewState={{\n          zoom,\n          target: [targetX, targetY, targetZ],\n          rotationX,\n          rotationY,\n          rotationZ,\n          rotationOrbit,\n          orbitAxis,\n        }}\n        setViewState={setViewState}\n        layers={layers}\n        cells={cells}\n        cellFilter={cellFilter}\n        cellSelection={cellSelection}\n        cellHighlight={cellHighlight}\n        cellColors={cellColors}\n        molecules={molecules}\n        neighborhoods={neighborhoods}\n        imageLayerLoaders={imageLayerLoaders}\n        setCellFilter={setCellFilter}\n        setCellSelection={setCellSelectionProp}\n        setCellHighlight={setCellHighlight}\n        setMoleculeHighlight={setMoleculeHighlight}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        rasterLayersCallbacks={rasterLayersCallbacks}\n        spatialAxisFixed={spatialAxisFixed}\n      />\n      {!disableTooltip && (\n        <SpatialTooltipSubscriber\n          parentUuid={uuid}\n          cellHighlight={cellHighlight}\n          width={width}\n          height={height}\n          getCellInfo={getCellInfo}\n        />\n      )}\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    opacity: 0.5,\n    height: '80px',\n    bottom: 0,\n    right: 0,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    padding: '10px 0',\n    transition: 'opacity 0.1s',\n    '&:hover': {\n      opacity: 1.0,\n    },\n  },\n}));\n\nexport default function HeatmapControls(props) {\n  const {\n    colorScaleLo,\n    colorScaleHi,\n    onColorScaleChange,\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Box component=\"div\" m={1} className={classes.box}>\n      <Slider\n        orientation=\"vertical\"\n        value={[colorScaleLo, colorScaleHi]}\n        onChange={onColorScaleChange}\n        aria-labelledby=\"colorscale-slider\"\n        min={0.0}\n        max={1.0}\n        step={0.005}\n      />\n    </Box>\n  );\n}\n","import clamp from 'lodash/clamp';\nimport range from 'lodash/range';\n\nimport {\n  AXIS_LABEL_TEXT_SIZE,\n  AXIS_MIN_SIZE,\n  AXIS_MAX_SIZE,\n} from '../../layers/heatmap-constants';\n\nexport function getGeneByCellTile(view, {\n  tileSize, tileI, tileJ, numCells, numGenes, cellOrdering, cells,\n}) {\n  const tileData = new Uint8Array(tileSize * tileSize);\n  let offset;\n  let value;\n  let cellI;\n  let geneI;\n  let sortedCellI;\n\n  const tileSizeRange = range(tileSize);\n\n  tileSizeRange.forEach((j) => {\n    // Need to iterate over cells in the outer loop.\n    cellI = (tileJ * tileSize) + j;\n    if (cellI < numCells) {\n      sortedCellI = cells.indexOf(cellOrdering[cellI]);\n      if (sortedCellI >= -1) {\n        tileSizeRange.forEach((i) => {\n          geneI = (tileI * tileSize) + i;\n          value = view[sortedCellI * numGenes + geneI];\n          offset = ((tileSize - i - 1) * tileSize + j);\n          tileData[offset] = value;\n        });\n      }\n    }\n  });\n  return tileData;\n}\n\nexport function getCellByGeneTile(view, {\n  tileSize, tileI, tileJ, numCells, numGenes, cellOrdering, cells,\n}) {\n  const tileData = new Uint8Array(tileSize * tileSize);\n  let offset;\n  let value;\n  let cellI;\n  let geneI;\n  let sortedCellI;\n\n  const tileSizeRange = range(tileSize);\n\n  tileSizeRange.forEach((i) => {\n    // Need to iterate over cells in the outer loop.\n    cellI = (tileI * tileSize) + i;\n    if (cellI < numCells) {\n      sortedCellI = cells.indexOf(cellOrdering[cellI]);\n      if (sortedCellI >= -1) {\n        tileSizeRange.forEach((j) => {\n          geneI = (tileJ * tileSize) + j;\n          if (geneI < numGenes) {\n            value = view[sortedCellI * numGenes + geneI];\n          } else {\n            value = 0;\n          }\n          offset = ((tileSize - i - 1) * tileSize + j);\n          tileData[offset] = value;\n        });\n      }\n    }\n  });\n\n  return tileData;\n}\n\n/**\n * Called before a layer is drawn to determine whether it should be rendered.\n * Reference: https://deck.gl/docs/api-reference/core/deck#layerfilter\n * @param {object} params A viewport, layer pair.\n * @param {object} params.layer The layer to check.\n * @param {object} params.viewport The viewport to check.\n * @returns {boolean} Should this layer be rendered in this viewport?\n */\nexport function layerFilter({ layer, viewport }) {\n  if (viewport.id === 'axisLeft') {\n    return layer.id.startsWith('axisLeft');\n  } if (viewport.id === 'axisTop') {\n    return layer.id.startsWith('axisTop');\n  } if (viewport.id === 'heatmap') {\n    return layer.id.startsWith('heatmap');\n  } if (viewport.id === 'colorsLeft') {\n    return layer.id.startsWith('colorsLeft');\n  } if (viewport.id === 'colorsTop') {\n    return layer.id.startsWith('colorsTop');\n  }\n  return false;\n}\n\n/**\n * Get the size of the left and top heatmap axes,\n * taking into account the maximum label string lengths.\n * @param {boolean} transpose Is the heatmap transposed?\n * @param {number} geneLabelMaxLength What is the maximum length gene label?\n * @param {number} cellLabelMaxLength What is the maximum length cell label?\n * @returns {number[]} [axisOffsetLeft, axisOffsetTop]\n */\nexport function getAxisSizes(transpose, geneLabelMaxLength, cellLabelMaxLength) {\n  const axisOffsetLeft = clamp(\n    (transpose ? geneLabelMaxLength : cellLabelMaxLength) * AXIS_LABEL_TEXT_SIZE,\n    AXIS_MIN_SIZE,\n    AXIS_MAX_SIZE,\n  );\n  const axisOffsetTop = clamp(\n    (transpose ? cellLabelMaxLength : geneLabelMaxLength) * AXIS_LABEL_TEXT_SIZE,\n    AXIS_MIN_SIZE,\n    AXIS_MAX_SIZE,\n  );\n  return [axisOffsetLeft, axisOffsetTop];\n}\n\n/**\n * Convert a mouse coordinate (x, y) to a heatmap coordinate (col index, row index).\n * @param {number} mouseX The mouse X of interest.\n * @param {number} mouseY The mouse Y of interest.\n * @param {object} param2 An object containing current sizes and scale factors.\n * @returns {number[]} [colI, rowI]\n */\nexport function mouseToHeatmapPosition(mouseX, mouseY, {\n  offsetLeft, offsetTop, targetX, targetY, scaleFactor, matrixWidth, matrixHeight, numRows, numCols,\n}) {\n  // TODO: use linear algebra\n  const viewMouseX = mouseX - offsetLeft;\n  const viewMouseY = mouseY - offsetTop;\n\n  if (viewMouseX < 0 || viewMouseY < 0) {\n    // The mouse is outside the heatmap.\n    return [null, null];\n  }\n\n  // Determine the rowI and colI values based on the current viewState.\n  const bboxTargetX = targetX * scaleFactor + matrixWidth * scaleFactor / 2;\n  const bboxTargetY = targetY * scaleFactor + matrixHeight * scaleFactor / 2;\n\n  const bboxLeft = bboxTargetX - matrixWidth / 2;\n  const bboxTop = bboxTargetY - matrixHeight / 2;\n\n  const zoomedOffsetLeft = bboxLeft / (matrixWidth * scaleFactor);\n  const zoomedOffsetTop = bboxTop / (matrixHeight * scaleFactor);\n\n  const zoomedViewMouseX = viewMouseX / (matrixWidth * scaleFactor);\n  const zoomedViewMouseY = viewMouseY / (matrixHeight * scaleFactor);\n\n  const zoomedMouseX = zoomedOffsetLeft + zoomedViewMouseX;\n  const zoomedMouseY = zoomedOffsetTop + zoomedViewMouseY;\n\n  const rowI = Math.floor(zoomedMouseY * numRows);\n  const colI = Math.floor(zoomedMouseX * numCols);\n  return [colI, rowI];\n}\n\n/**\n * Convert a heatmap coordinate (col index, row index) to a mouse coordinate (x, y).\n * @param {number} colI The column index of interest.\n * @param {number} rowI The row index of interest.\n * @param {object} param2 An object containing current sizes and scale factors.\n * @returns {number[]} [x, y]\n */\nexport function heatmapToMousePosition(colI, rowI, {\n  offsetLeft, offsetTop, targetX, targetY, scaleFactor, matrixWidth, matrixHeight, numRows, numCols,\n}) {\n  // TODO: use linear algebra\n  let zoomedMouseY = null;\n  let zoomedMouseX = null;\n\n  if (rowI !== null) {\n    const minY = -matrixHeight * scaleFactor / 2;\n    const maxY = matrixHeight * scaleFactor / 2;\n    const totalHeight = maxY - minY;\n\n    const minInViewY = (targetY * scaleFactor) - (matrixHeight / 2);\n    const maxInViewY = (targetY * scaleFactor) + (matrixHeight / 2);\n    const inViewHeight = maxInViewY - minInViewY;\n\n    const normalizedRowY = (rowI + 0.5) / numRows;\n    const globalRowY = minY + (normalizedRowY * totalHeight);\n\n    if (minInViewY <= globalRowY && globalRowY <= maxInViewY) {\n      zoomedMouseY = offsetTop + ((globalRowY - minInViewY) / inViewHeight) * matrixHeight;\n    }\n  }\n  if (colI !== null) {\n    const minX = -matrixWidth * scaleFactor / 2;\n    const maxX = matrixWidth * scaleFactor / 2;\n    const totalWidth = maxX - minX;\n\n    const minInViewX = (targetX * scaleFactor) - (matrixWidth / 2);\n    const maxInViewX = (targetX * scaleFactor) + (matrixWidth / 2);\n    const inViewWidth = maxInViewX - minInViewX;\n\n    const normalizedRowX = (colI + 0.5) / numCols;\n    const globalRowX = minX + (normalizedRowX * totalWidth);\n\n    if (minInViewX <= globalRowX && globalRowX <= maxInViewX) {\n      zoomedMouseX = offsetLeft + ((globalRowX - minInViewX) / inViewWidth) * matrixWidth;\n    }\n  }\n  return [zoomedMouseX, zoomedMouseY];\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/NavigatorConcurrentHardware/hardwareConcurrency\n// We need to give a different way of getting this for safari, so 4 is probably a safe bet\n// for parallel processing in the meantime.  More can't really hurt since they'll just block\n// each other and not the UI thread, which is the real benefit.\nconst defaultPoolSize = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency || 4 : null;\n\n/**\n * Pool for workers to decode chunks of the images.\n * This is a line-for-line copy of GeoTIFFs old implementation: https://github.com/geotiffjs/geotiff.js/blob/v1.0.0-beta.6/src/pool.js\n */\nexport default class Pool {\n  /**\n   * @constructor\n   * @param {object} Worker The worker class to be used for processing.\n   */\n  constructor(Worker) {\n    this.workers = [];\n    this.idleWorkers = [];\n    this.waitQueue = [];\n    this.decoder = null;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < defaultPoolSize; ++i) {\n      const w = new Worker();\n      this.workers.push(w);\n      this.idleWorkers.push(w);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async process() {\n    throw new Error('Pool needs to implement \"process\" method');\n  }\n\n  async waitForWorker() {\n    const idleWorker = this.idleWorkers.pop();\n    if (idleWorker) {\n      return idleWorker;\n    }\n    const waiter = {};\n    const promise = new Promise((resolve) => {\n      waiter.resolve = resolve;\n    });\n\n    this.waitQueue.push(waiter);\n    return promise;\n  }\n\n  async finishTask(currentWorker) {\n    const waiter = this.waitQueue.pop();\n    if (waiter) {\n      waiter.resolve(currentWorker);\n    } else {\n      this.idleWorkers.push(currentWorker);\n    }\n  }\n\n  destroy() {\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.workers.length; ++i) {\n      this.workers[i].terminate();\n    }\n  }\n}\n","import Worker from './heatmap.worker'; // eslint-disable-line import/no-unresolved\nimport Pool from '../../Pool';\n\n/**\n * Pool for workers to decode chunks of the images.\n * This is a line-for-line copy of GeoTIFFs old implementation: https://github.com/geotiffjs/geotiff.js/blob/v1.0.0-beta.6/src/pool.js\n */\nexport default class HeatmapPool extends Pool {\n  constructor() {\n    super(Worker);\n  }\n\n  /**\n   * Process each heatmap tile\n   * @param {object} params The arguments passed to the heatmap worker.\n   * @param {string} params.curr The current task uuid.\n   * @param {number} params.xTiles How many tiles required in the x direction?\n   * @param {number} params.yTiles How many tiles required in the y direction?\n   * @param {number} params.tileSize How many entries along each tile axis?\n   * @param {string[]} params.cellOrdering The current ordering of cells.\n   * @param {string[]} params.rows The name of each row (cell ID).\n   * Does not take transpose into account (always cells).\n   * @param {string[]} params.cols The name of each column (gene ID).\n   * Does not take transpose into account (always genes).\n   * @param {ArrayBuffer} params.data The array buffer.\n   * Need to transfer back to main thread when done.\n   * @param {boolean} params.transpose Is the heatmap transposed?\n   * @returns {array} [message, transfers]\n   * @returns {Promise.<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async process(args) {\n    const currentWorker = await this.waitForWorker();\n    return new Promise((resolve, reject) => {\n      currentWorker.onmessage = (event) => {\n        // this.workers.push(currentWorker);\n        this.finishTask(currentWorker);\n        resolve(event.data);\n      };\n      currentWorker.onerror = (error) => {\n        // this.workers.push(currentWorker);\n        this.finishTask(currentWorker);\n        reject(error);\n      };\n      currentWorker.postMessage(['getTile', args], [args.data]);\n    });\n  }\n}\n","import React, {\n  useRef, useState, useCallback, useMemo, useEffect, useReducer, forwardRef,\n} from 'react';\nimport uuidv4 from 'uuid/v4';\nimport DeckGL from 'deck.gl';\nimport { OrthographicView } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport range from 'lodash/range';\nimport clamp from 'lodash/clamp';\nimport isEqual from 'lodash/isEqual';\nimport { max } from 'd3-array';\nimport HeatmapControls from './HeatmapControls';\nimport HeatmapCompositeTextLayer from '../../layers/HeatmapCompositeTextLayer';\nimport PixelatedBitmapLayer from '../../layers/PixelatedBitmapLayer';\nimport HeatmapBitmapLayer from '../../layers/HeatmapBitmapLayer';\nimport {\n  DEFAULT_GL_OPTIONS,\n  createDefaultUpdateCellsHover,\n  createDefaultUpdateGenesHover,\n  createDefaultUpdateViewInfo,\n  copyUint8Array,\n} from '../utils';\nimport {\n  layerFilter,\n  getAxisSizes,\n  mouseToHeatmapPosition,\n  heatmapToMousePosition,\n} from './utils';\nimport {\n  TILE_SIZE, MAX_ROW_AGG, MIN_ROW_AGG,\n  COLOR_BAR_SIZE,\n  AXIS_MARGIN,\n} from '../../layers/heatmap-constants';\nimport HeatmapWorkerPool from './HeatmapWorkerPool';\n/**\n * A heatmap component for cell x gene matrices.\n * @param {object} props\n * @param {string} props.uuid The uuid of this component,\n * used by tooltips to determine whether to render a tooltip or\n * a crosshair.\n * @param {string} props.theme The current theme name.\n * @param {object} props.initialViewState The initial viewState for\n * DeckGL.\n * @param {number} props.width The width of the canvas.\n * @param {number} props.height The height of the canvas.\n * @param {object} props.expressionMatrix An object { rows, cols, matrix },\n * where matrix is a flat Uint8Array, rows is a list of cell ID strings,\n * and cols is a list of gene ID strings.\n * @param {Map} props.cellColors Map of cell ID to color. Optional.\n * If defined, the key ordering is used to order the cell axis of the heatmap.\n * @param {function} props.clearPleaseWait The clear please wait callback,\n * called when the expression matrix has loaded (is not null).\n * @param {function} props.setCellHighlight Callback function called on\n * hover with the cell ID. Optional.\n * @param {function} props.setGeneHighlight Callback function called on\n * hover with the gene ID. Optional.\n * @param {function} props.updateViewInfo Callback function that gets called with an\n * object { uuid, project() } where project is a function that maps (cellId, geneId)\n * to canvas (x,y) coordinates. Used to show tooltips. Optional.\n * @param {boolean} props.transpose By default, false.\n * @param {string} props.variablesTitle By default, 'Genes'.\n * @param {string} props.observationsTitle By default, 'Cells'.\n */\nconst Heatmap = forwardRef((props, deckRef) => {\n  const {\n    uuid,\n    theme,\n    viewState: rawViewState,\n    setViewState,\n    setHeatmapControls,\n    heatmapControls = [0, 1],\n    width: viewWidth,\n    height: viewHeight,\n    expressionMatrix: expression,\n    cellColors,\n    clearPleaseWait,\n    setComponentHover,\n    setCellHighlight = createDefaultUpdateCellsHover('Heatmap'),\n    setGeneHighlight = createDefaultUpdateGenesHover('Heatmap'),\n    updateViewInfo = createDefaultUpdateViewInfo('Heatmap'),\n    setIsRendering = () => {},\n    transpose = false,\n    variablesTitle = 'Genes',\n    observationsTitle = 'Cells',\n  } = props;\n\n  const viewState = {\n    ...rawViewState,\n    target: (transpose ? [rawViewState.target[1], rawViewState.target[0]] : rawViewState.target),\n    minZoom: 0,\n  };\n\n  const axisLeftTitle = (transpose ? variablesTitle : observationsTitle);\n  const axisTopTitle = (transpose ? observationsTitle : variablesTitle);\n\n  const workerPool = useMemo(() => new HeatmapWorkerPool(), []);\n\n  useEffect(() => {\n    if (clearPleaseWait && expression) {\n      clearPleaseWait('expression-matrix');\n    }\n  }, [clearPleaseWait, expression]);\n\n  const tilesRef = useRef();\n  const dataRef = useRef();\n  const [axisLeftLabels, setAxisLeftLabels] = useState([]);\n  const [axisTopLabels, setAxisTopLabels] = useState([]);\n  const [colorScaleLo, setColorScaleLo] = useState(heatmapControls[0]);\n  const [colorScaleHi, setColorScaleHi] = useState(heatmapControls[1]);\n\n  // Callback function for the color scale slider change event.\n  const onColorScaleChange = useCallback((event, newValue) => {\n    setColorScaleLo(newValue[0]);\n    setColorScaleHi(newValue[1]);\n    setHeatmapControls(newValue);\n  }, [setHeatmapControls]);\n\n  // Since we are storing the tile data in a ref,\n  // and updating it asynchronously when the worker finishes,\n  // we need to tie it to a piece of state through this iteration value.\n  const [tileIteration, incTileIteration] = useReducer(i => i + 1, 0);\n\n  // We need to keep a backlog of the tasks for the worker thread,\n  // since the array buffer can only be held by one thread at a time.\n  const [backlog, setBacklog] = useState([]);\n\n  // Store a reference to the matrix Uint8Array in the dataRef,\n  // since we need to access its array buffer to transfer\n  // it back and forth from the worker thread.\n  useEffect(() => {\n    // Store the expression matrix Uint8Array in the dataRef.\n    if (expression && expression.matrix) {\n      dataRef.current = copyUint8Array(expression.matrix);\n    }\n  }, [dataRef, expression]);\n\n  // Check if the ordering of axis labels needs to be changed,\n  // for example if the cells \"selected\" (technically just colored)\n  // have changed.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    const newCellOrdering = (!cellColors || cellColors.size === 0\n      ? expression.rows\n      : Array.from(cellColors.keys())\n    );\n    const oldCellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n\n    if (!isEqual(oldCellOrdering, newCellOrdering)) {\n      if (transpose) {\n        setAxisTopLabels(newCellOrdering);\n      } else {\n        setAxisLeftLabels(newCellOrdering);\n      }\n    }\n  }, [expression, cellColors, axisTopLabels, axisLeftLabels, transpose]);\n\n  // Set the genes ordering.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    if (transpose) {\n      setAxisLeftLabels(expression.cols);\n    } else {\n      setAxisTopLabels(expression.cols);\n    }\n  }, [expression, transpose]);\n\n  const [cellLabelMaxLength, geneLabelMaxLength] = useMemo(() => {\n    if (!expression) {\n      return [0, 0];\n    }\n    return [\n      max(expression.rows.map(cellId => cellId.length)),\n      max(expression.cols.map(geneId => geneId.length)),\n    ];\n  }, [expression]);\n\n  const width = axisTopLabels.length;\n  const height = axisLeftLabels.length;\n\n  const [axisOffsetLeft, axisOffsetTop] = getAxisSizes(\n    transpose, geneLabelMaxLength, cellLabelMaxLength,\n  );\n\n  const offsetTop = axisOffsetTop + COLOR_BAR_SIZE;\n  const offsetLeft = axisOffsetLeft + COLOR_BAR_SIZE;\n\n  const matrixWidth = viewWidth - offsetLeft;\n  const matrixHeight = viewHeight - offsetTop;\n\n  const matrixLeft = -matrixWidth / 2;\n  const matrixRight = matrixWidth / 2;\n  const matrixTop = -matrixHeight / 2;\n  const matrixBottom = matrixHeight / 2;\n\n  const xTiles = Math.ceil(width / TILE_SIZE);\n  const yTiles = Math.ceil(height / TILE_SIZE);\n\n  const widthRatio = 1 - (TILE_SIZE - (width % TILE_SIZE)) / (xTiles * TILE_SIZE);\n  const heightRatio = 1 - (TILE_SIZE - (height % TILE_SIZE)) / (yTiles * TILE_SIZE);\n\n  const tileWidth = (matrixWidth / widthRatio) / (xTiles);\n  const tileHeight = (matrixHeight / heightRatio) / (yTiles);\n\n  const scaleFactor = 2 ** viewState.zoom;\n  const cellHeight = (matrixHeight * scaleFactor) / height;\n  const cellWidth = (matrixWidth * scaleFactor) / width;\n\n  // Get power of 2 between 1 and 16,\n  // for number of cells to aggregate together in each direction.\n  const aggSizeX = clamp(2 ** Math.ceil(Math.log2(1 / cellWidth)), MIN_ROW_AGG, MAX_ROW_AGG);\n  const aggSizeY = clamp(2 ** Math.ceil(Math.log2(1 / cellHeight)), MIN_ROW_AGG, MAX_ROW_AGG);\n\n  const [targetX, targetY] = viewState.target;\n\n  // Emit the viewInfo object on viewState updates\n  // (used by tooltips / crosshair elements).\n  useEffect(() => {\n    updateViewInfo({\n      uuid,\n      project: (cellId, geneId) => {\n        const colI = transpose ? axisTopLabels.indexOf(cellId) : axisTopLabels.indexOf(geneId);\n        const rowI = transpose ? axisLeftLabels.indexOf(geneId) : axisLeftLabels.indexOf(cellId);\n        return heatmapToMousePosition(\n          colI, rowI, {\n            offsetLeft,\n            offsetTop,\n            targetX: viewState.target[0],\n            targetY: viewState.target[1],\n            scaleFactor,\n            matrixWidth,\n            matrixHeight,\n            numRows: height,\n            numCols: width,\n          },\n        );\n      },\n    });\n  }, [uuid, updateViewInfo, transpose, axisTopLabels, axisLeftLabels, offsetLeft,\n    offsetTop, viewState, scaleFactor, matrixWidth, matrixHeight, height, width]);\n\n\n  // Listen for viewState changes.\n  // Do not allow the user to zoom and pan outside of the initial window.\n  const onViewStateChange = useCallback(({ viewState: nextViewState }) => {\n    const { zoom: nextZoom } = nextViewState;\n    const nextScaleFactor = 2 ** nextZoom;\n\n    const minTargetX = nextZoom === 0 ? 0 : -(matrixRight - (matrixRight / nextScaleFactor));\n    const maxTargetX = -1 * minTargetX;\n\n    const minTargetY = nextZoom === 0 ? 0 : -(matrixBottom - (matrixBottom / nextScaleFactor));\n    const maxTargetY = -1 * minTargetY;\n\n    // Manipulate view state if necessary to keep the user in the window.\n    const nextTarget = [\n      clamp(nextViewState.target[0], minTargetX, maxTargetX),\n      clamp(nextViewState.target[1], minTargetY, maxTargetY),\n    ];\n\n    setViewState({\n      zoom: nextZoom,\n      target: (transpose ? [nextTarget[1], nextTarget[0]] : nextTarget),\n    });\n  }, [matrixRight, matrixBottom, transpose, setViewState]);\n\n  // If `expression` or `cellOrdering` have changed,\n  // then new tiles need to be generated,\n  // so add a new task to the backlog.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    // Use a uuid to give the task a unique ID,\n    // to help identify where in the list it is located\n    // after the worker thread asynchronously sends the data back\n    // to this thread.\n    if (\n      axisTopLabels && axisLeftLabels && xTiles && yTiles\n    ) {\n      setBacklog(prev => [...prev, uuidv4()]);\n    }\n  }, [dataRef, expression, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  // When the backlog has updated, a new worker job can be submitted if:\n  // - the backlog has length >= 1 (at least one job is waiting), and\n  // - buffer.byteLength is not zero, so the worker does not currently \"own\" the buffer.\n  useEffect(() => {\n    if (backlog.length < 1) {\n      return;\n    }\n    const curr = backlog[backlog.length - 1];\n    if (dataRef.current && dataRef.current.buffer.byteLength) {\n      const { rows, cols, matrix } = expression;\n      const promises = range(yTiles).map(i => range(xTiles).map(async j => workerPool.process({\n        curr,\n        tileI: i,\n        tileJ: j,\n        tileSize: TILE_SIZE,\n        cellOrdering: transpose ? axisTopLabels : axisLeftLabels,\n        rows,\n        cols,\n        transpose,\n        data: matrix.buffer.slice(),\n      })));\n      const process = async () => {\n        const tiles = await Promise.all(promises.flat());\n        tilesRef.current = tiles.map(i => i.tile);\n        incTileIteration();\n        dataRef.current = new Uint8Array(tiles[0].buffer);\n        const { curr: currWork } = tiles[0];\n        setBacklog((prev) => {\n          const currIndex = prev.indexOf(currWork);\n          return prev.slice(currIndex + 1, prev.length);\n        });\n      };\n      process();\n    }\n  }, [axisLeftLabels, axisTopLabels, backlog, expression, transpose, xTiles, yTiles, workerPool]);\n\n  useEffect(() => {\n    setIsRendering(backlog.length > 0);\n  }, [backlog, setIsRendering]);\n\n  // Update the heatmap tiles if:\n  // - new tiles are available (`tileIteration` has changed), or\n  // - the matrix bounds have changed, or\n  // - the `aggSizeX` or `aggSizeY` have changed, or\n  // - the cell ordering has changed.\n  const heatmapLayers = useMemo(() => {\n    if (!tilesRef.current || backlog.length) {\n      return [];\n    }\n    function getLayer(i, j, tile) {\n      return new HeatmapBitmapLayer({\n        id: `heatmapLayer-${tileIteration}-${i}-${j}`,\n        image: tile,\n        bounds: [\n          matrixLeft + j * tileWidth,\n          matrixTop + i * tileHeight,\n          matrixLeft + (j + 1) * tileWidth,\n          matrixTop + (i + 1) * tileHeight,\n        ],\n        aggSizeX,\n        aggSizeY,\n        colorScaleLo,\n        colorScaleHi,\n        updateTriggers: {\n          image: [axisLeftLabels, axisTopLabels],\n          bounds: [tileHeight, tileWidth],\n        },\n      });\n    }\n    const layers = tilesRef\n      .current.map((tile, index) => getLayer(Math.floor(index / xTiles), index % xTiles, tile));\n    return layers;\n  }, [backlog, tileIteration, matrixLeft, tileWidth, matrixTop, tileHeight,\n    aggSizeX, aggSizeY, colorScaleLo, colorScaleHi, axisLeftLabels, axisTopLabels, xTiles]);\n\n\n  // Map cell and gene names to arrays with indices,\n  // to prepare to render the names in TextLayers.\n  const axisTopLabelData = useMemo(() => axisTopLabels.map((d, i) => [i, d]), [axisTopLabels]);\n  const axisLeftLabelData = useMemo(() => axisLeftLabels.map((d, i) => [i, d]), [axisLeftLabels]);\n\n  // Generate the axis label, axis title, and loading indicator text layers.\n  const textLayers = [\n    new HeatmapCompositeTextLayer({\n      targetX,\n      targetY,\n      scaleFactor,\n      axisLeftLabelData,\n      matrixTop,\n      height,\n      matrixHeight,\n      cellHeight,\n      cellWidth,\n      axisTopLabelData,\n      matrixLeft,\n      width,\n      matrixWidth,\n      viewHeight,\n      viewWidth,\n      theme,\n      axisLeftTitle,\n      axisTopTitle,\n      axisOffsetLeft,\n      axisOffsetTop,\n    }),\n  ];\n\n  // Create the left color bar with a BitmapLayer.\n  // TODO: find a way to do aggregation for this as well.\n  const cellColorsTiles = useMemo(() => {\n    if (!cellColors) {\n      return null;\n    }\n\n    let cellId;\n    let offset;\n    let color;\n    let rowI;\n\n    const cellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n    const colorBarTileWidthPx = (transpose ? TILE_SIZE : 1);\n    const colorBarTileHeightPx = (transpose ? 1 : TILE_SIZE);\n\n    const result = range((transpose ? xTiles : yTiles)).map((i) => {\n      const tileData = new Uint8ClampedArray(TILE_SIZE * 1 * 4);\n\n      range(TILE_SIZE).forEach((tileY) => {\n        rowI = (i * TILE_SIZE) + tileY; // the row / cell index\n        if (rowI < cellOrdering.length) {\n          cellId = cellOrdering[rowI];\n          color = cellColors.get(cellId);\n          offset = (transpose ? tileY : (TILE_SIZE - tileY - 1)) * 4;\n          if (color) {\n            const [rValue, gValue, bValue] = color;\n            tileData[offset + 0] = rValue;\n            tileData[offset + 1] = gValue;\n            tileData[offset + 2] = bValue;\n            tileData[offset + 3] = 255;\n          }\n        }\n      });\n\n      return new ImageData(tileData, colorBarTileWidthPx, colorBarTileHeightPx);\n    });\n\n    return result;\n  }, [cellColors, transpose, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  const cellColorsLayers = useMemo(() => (cellColorsTiles\n    ? cellColorsTiles\n      .map((tile, i) => new PixelatedBitmapLayer({\n        id: `${(transpose ? 'colorsTopLayer' : 'colorsLeftLayer')}-${i}-${uuidv4()}`,\n        image: tile,\n        bounds: (transpose ? [\n          matrixLeft + i * tileWidth,\n          -matrixHeight / 2,\n          matrixLeft + (i + 1) * tileWidth,\n          matrixHeight / 2,\n        ] : [\n          -matrixWidth / 2,\n          matrixTop + i * tileHeight,\n          matrixWidth / 2,\n          matrixTop + (i + 1) * tileHeight,\n        ]),\n      }))\n    : []), [cellColorsTiles, matrixTop, matrixLeft, matrixHeight,\n    matrixWidth, tileWidth, tileHeight, transpose]);\n\n  const layers = heatmapLayers\n    .concat(textLayers)\n    .concat(cellColorsLayers);\n\n  // Set up the onHover function.\n  function onHover(info, event) {\n    if (!expression) {\n      return;\n    }\n    const { x: mouseX, y: mouseY } = event.offsetCenter;\n    const [colI, rowI] = mouseToHeatmapPosition(mouseX, mouseY, {\n      offsetLeft,\n      offsetTop,\n      targetX,\n      targetY,\n      scaleFactor,\n      matrixWidth,\n      matrixHeight,\n      numRows: height,\n      numCols: width,\n    });\n\n    if (colI === null) {\n      if (transpose) {\n        setCellHighlight(null);\n      } else {\n        setGeneHighlight(null);\n      }\n    }\n\n    if (rowI === null) {\n      if (transpose) {\n        setGeneHighlight(null);\n      } else {\n        setCellHighlight(null);\n      }\n    }\n\n    const obsI = expression.rows.indexOf(transpose\n      ? axisTopLabels[colI]\n      : axisLeftLabels[rowI]);\n    const varI = expression.cols.indexOf(transpose\n      ? axisLeftLabels[rowI]\n      : axisTopLabels[colI]);\n\n    const obsId = expression.rows[obsI];\n    const varId = expression.cols[varI];\n    if (setComponentHover) {\n      setComponentHover();\n    }\n    setCellHighlight(obsId || null);\n    setGeneHighlight(varId || null);\n  }\n\n  return (\n    <>\n      <DeckGL\n        id={`deckgl-overlay-${uuid}`}\n        ref={deckRef}\n        views={[\n          // Note that there are multiple views here,\n          // but only one viewState.\n          new OrthographicView({\n            id: 'heatmap',\n            controller: true,\n            x: offsetLeft,\n            y: offsetTop,\n            width: matrixWidth,\n            height: matrixHeight,\n          }),\n          new OrthographicView({\n            id: 'axisLeft',\n            controller: false,\n            x: (transpose ? COLOR_BAR_SIZE : 0),\n            y: offsetTop,\n            width: axisOffsetLeft,\n            height: matrixHeight,\n          }),\n          new OrthographicView({\n            id: 'axisTop',\n            controller: false,\n            x: offsetLeft,\n            y: (transpose ? 0 : COLOR_BAR_SIZE),\n            width: matrixWidth,\n            height: axisOffsetTop,\n          }),\n          new OrthographicView({\n            id: 'colorsLeft',\n            controller: false,\n            x: axisOffsetLeft,\n            y: offsetTop,\n            width: COLOR_BAR_SIZE - AXIS_MARGIN,\n            height: matrixHeight,\n          }),\n          new OrthographicView({\n            id: 'colorsTop',\n            controller: false,\n            x: offsetLeft,\n            y: axisOffsetTop,\n            width: matrixWidth,\n            height: COLOR_BAR_SIZE - AXIS_MARGIN,\n          }),\n        ]}\n        layers={layers}\n        layerFilter={layerFilter}\n        getCursor={interactionState => (interactionState.isDragging ? 'grabbing' : 'default')}\n        glOptions={DEFAULT_GL_OPTIONS}\n        onViewStateChange={onViewStateChange}\n        viewState={viewState}\n        onHover={onHover}\n      />\n      <HeatmapControls\n        colorScaleLo={colorScaleLo}\n        colorScaleHi={colorScaleHi}\n        onColorScaleChange={onColorScaleChange}\n      />\n    </>\n  );\n});\n\nexport default Heatmap;\n","import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function HeatmapTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    width, height, transpose,\n    getCellInfo, getGeneInfo,\n    cellHighlight, geneHighlight,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, cellCoord] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      (viewInfo && viewInfo.project\n        ? viewInfo.project(cellHighlight, null)[(transpose ? 0 : 1)]\n        : null),\n    ]\n  ) : ([null, null]));\n\n  const [geneInfo, geneCoord] = (geneHighlight && getGeneInfo ? (\n    [\n      getGeneInfo(geneHighlight),\n      (viewInfo && viewInfo.project\n        ? viewInfo.project(null, geneHighlight)[(transpose ? 1 : 0)]\n        : null),\n    ]\n  ) : ([null, null]));\n\n  const x = (transpose ? cellCoord : geneCoord);\n  const y = (transpose ? geneCoord : cellCoord);\n\n  return (\n    (cellInfo || geneInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        parentWidth={width}\n        parentHeight={height}\n        sourceUuid={sourceUuid}\n      >\n        <TooltipContent info={{ ...geneInfo, ...cellInfo }} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n","import React, {\n  useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { pluralize, capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { mergeCellSets } from '../utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useExpressionMatrixData,\n  useGeneSelection,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport {\n  useCoordination, useLoaders,\n  useSetComponentHover, useSetComponentViewInfo,\n} from '../../app/state/hooks';\nimport {\n  COMPONENT_COORDINATION_TYPES,\n} from '../../app/state/coordination';\nimport Heatmap from './Heatmap';\nimport HeatmapTooltipSubscriber from './HeatmapTooltipSubscriber';\n\nconst HEATMAP_DATA_TYPES = ['cells', 'cell-sets', 'expression-matrix'];\n\n/**\n * @param {object} props\n * @param {number} props.uuid The unique identifier for this component.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {boolean} props.transpose Whether to\n * render as cell-by-gene or gene-by-cell.\n * @param {string} props.observationsLabelOverride The singular\n * form of the name of the observation.\n * @param {string} props.observationsPluralLabelOverride The\n * plural form of the name of the observation.\n * @param {string} props.variablesLabelOverride The singular\n * form of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.disableTooltip Whether to disable the\n * tooltip on mouse hover.\n */\nexport default function HeatmapSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent, theme, transpose,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    disableTooltip = false,\n    title = 'Heatmap',\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    heatmapZoomX: zoomX,\n    heatmapTargetX: targetX,\n    heatmapTargetY: targetY,\n    geneSelection,\n    cellHighlight,\n    geneHighlight,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    geneExpressionColormapRange: heatmapControls,\n  }, {\n    setHeatmapZoomX: setZoomX,\n    setHeatmapZoomY: setZoomY,\n    setHeatmapTargetX: setTargetX,\n    setHeatmapTargetY: setTargetY,\n    setCellHighlight,\n    setGeneHighlight,\n    setCellSetSelection,\n    setCellSetColor,\n    setGeneExpressionColormapRange: setHeatmapControls,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.heatmap, coordinationScopes);\n\n  const observationsTitle = capitalize(observationsPluralLabel);\n  const variablesTitle = capitalize(variablesPluralLabel);\n\n  const [isRendering, setIsRendering] = useState(false);\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    HEATMAP_DATA_TYPES,\n  );\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [width, height, deckRef] = useDeckCanvasSize();\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [expressionMatrix] = useExpressionMatrixData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: expressionMatrix,\n  }), [cellColorEncoding, mergedCellSets, geneSelection,\n    cellSetColor, cellSetSelection, expressionData, expressionMatrix]);\n\n  const getCellInfo = useCallback((cellId) => {\n    if (cellId) {\n      const cellInfo = cells[cellId];\n      return {\n        [`${capitalize(observationsLabel)} ID`]: cellId,\n        ...(cellInfo ? cellInfo.factors : {}),\n      };\n    }\n    return null;\n  }, [cells, observationsLabel]);\n\n  const getGeneInfo = useCallback((geneId) => {\n    if (geneId) {\n      return { [`${capitalize(variablesLabel)} ID`]: geneId };\n    }\n    return null;\n  }, [variablesLabel]);\n\n  const cellsCount = expressionMatrix && expressionMatrix.rows\n    ? expressionMatrix.rows.length : 0;\n  const genesCount = expressionMatrix && expressionMatrix.cols\n    ? expressionMatrix.cols.length : 0;\n  const selectedCount = cellColors.size;\n  return (\n    <TitleInfo\n      title={title}\n      info={`${cellsCount} ${pluralize(observationsLabel, observationsPluralLabel, cellsCount)} × ${genesCount} ${pluralize(variablesLabel, variablesPluralLabel, genesCount)},\n             with ${selectedCount} ${pluralize(observationsLabel, observationsPluralLabel, selectedCount)} selected`}\n      urls={urls}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady={isReady && !isRendering}\n    >\n      <Heatmap\n        ref={deckRef}\n        transpose={transpose}\n        viewState={{ zoom: zoomX, target: [targetX, targetY] }}\n        setViewState={({ zoom, target }) => {\n          setZoomX(zoom);\n          setZoomY(zoom);\n          setTargetX(target[0]);\n          setTargetY(target[1]);\n        }}\n        heatmapControls={heatmapControls}\n        setHeatmapControls={setHeatmapControls}\n        height={height}\n        width={width}\n        theme={theme}\n        uuid={uuid}\n        expressionMatrix={expressionMatrix}\n        cellColors={cellColors}\n        setIsRendering={setIsRendering}\n        setCellHighlight={setCellHighlight}\n        setGeneHighlight={setGeneHighlight}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        observationsTitle={observationsTitle}\n        variablesTitle={variablesTitle}\n      />\n      {!disableTooltip && (\n      <HeatmapTooltipSubscriber\n        parentUuid={uuid}\n        width={width}\n        height={height}\n        transpose={transpose}\n        getCellInfo={getCellInfo}\n        getGeneInfo={getGeneInfo}\n        cellHighlight={cellHighlight}\n        geneHighlight={geneHighlight}\n      />\n      )}\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LensIcon from '@material-ui/icons/Lens';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { VIEWER_PALETTE } from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '70px',\n    height: '40px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  button: {\n    padding: '3px',\n    width: '16px',\n  },\n  icon: {\n    width: '17px',\n    height: '17px',\n    stroke: theme.palette.action.selected,\n    'stroke-width': '1px',\n  },\n}));\n\nconst ColorPalette = ({ handleChange }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} aria-label=\"color-swatch\">\n      {VIEWER_PALETTE.map(color => (\n        <IconButton\n          className={classes.button}\n          key={color}\n          onClick={() => handleChange(color)}\n        >\n          <LensIcon\n            fontSize=\"small\"\n            style={{ color: `rgb(${color})` }}\n            className={classes.icon}\n          />\n        </IconButton>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPalette;\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PopperMenu, MuiSpan } from '../shared-mui/components';\n\nimport ColorPalette from './ColorPalette';\n\nconst useStyles = makeStyles(() => ({\n  menuButton: {\n    backgroundColor: 'transparent',\n  },\n  colors: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n}));\n\n/**\n * Dropdown for options for a channel on the three dots button.\n * @prop {function} handlePropertyChange Callback for changing property (color, IQR of sliders).\n * @prop {function} handleChannelRemove Callback for channel removal.\n * @prop {function} handleIQRUpdate Callback for IQR slider update.\n */\nfunction ChannelOptions({ handlePropertyChange, handleChannelRemove, handleIQRUpdate }) {\n  const [open, toggle] = useReducer(v => !v, false);\n\n  const classes = useStyles();\n\n  const handleColorSelect = (color) => {\n    handlePropertyChange('color', color);\n  };\n\n  const handleRemove = () => {\n    toggle();\n    handleChannelRemove();\n  };\n\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<MoreVertIcon fontSize=\"small\" />}\n      buttonClassName={classes.menuButton}\n    >\n      <MenuItem dense disableGutters onClick={handleRemove}>\n        <MuiSpan>Remove</MuiSpan>\n      </MenuItem>\n      <MenuItem dense disableGutters onClick={handleIQRUpdate}>\n        <MuiSpan>Use IQR</MuiSpan>\n      </MenuItem>\n      <MenuItem dense disableGutters className={classes.colors}>\n        <ColorPalette handleChange={handleColorSelect} />\n      </MenuItem>\n    </PopperMenu>\n  );\n}\n\nexport default ChannelOptions;\n","import { DTYPE_VALUES } from '@hms-dbmi/viv';\n\nfunction getDomains() {\n  const domains = {};\n  const needMin = ['Int8', 'Int16', 'Int32'];\n  Object.keys(DTYPE_VALUES).forEach((dtype) => {\n    const { max } = DTYPE_VALUES[dtype];\n    const min = needMin.includes(dtype) ? -(max + 1) : 0;\n    domains[dtype] = [min, max];\n  });\n  return domains;\n}\n\nexport const DOMAINS = getDomains();\n","import React from 'react';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\n\n/**\n * Dropdown for selecting a channel.\n * @prop {function} handleChange Callback for each new selection.\n * @prop {array} channelOptions List of available selections, like ['DAPI', 'FITC', ...].\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {number} selectionIndex Current numeric index of a selection.\n */\nexport function ChannelSelectionDropdown({\n  handleChange,\n  disabled,\n  channelOptions,\n  selectionIndex,\n}) {\n  return (\n    <Select\n      native\n      value={selectionIndex}\n      onChange={e => handleChange(Number(e.target.value))}\n    >\n      {channelOptions.map((opt, i) => (\n        <option disabled={disabled} key={opt} value={i}>\n          {opt}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Checkbox for toggling on/off of a channel.\n * @prop {string} color Current color for this channel.\n * @prop {boolean} checked Whether or not this channel is \"on\".\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {function} toggle Callback for toggling on/off.\n */\nexport function ChannelVisibilityCheckbox({\n  color, checked, toggle, disabled,\n}) {\n  return (\n    <Checkbox\n      onChange={toggle}\n      checked={checked}\n      disabled={disabled}\n      style={{ color, '&$checked': { color } }}\n    />\n  );\n}\n","import React, { useCallback, useState, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport ChannelOptions from './ChannelOptions';\nimport { DOMAINS } from './constants';\nimport { getSourceFromLoader } from '../../utils';\nimport { getMultiSelectionStats } from './utils';\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n// Returns an rgb string for display, and changes the color (arr)\n// to use a grey for light theme + white color or if the colormap is on.\nexport const toRgbUIString = (on, arr, theme) => {\n  const color = (on || (theme === 'light' && arr.every(i => i === 255))) ? [220, 220, 220] : arr;\n  return `rgb(${color})`;\n};\n\nfunction abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) { --maxNaiveDigits; } // Wasted on \".\"\n  if (value < 1) { --maxNaiveDigits; } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n\n  const naive = Intl.NumberFormat(\n    'en-US',\n    {\n      maximumSignificantDigits: maxNaiveDigits,\n      useGrouping: false,\n    },\n  ).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n\n/**\n * Slider for controlling current colormap.\n * @prop {string} color Current color for this channel.\n * @prop {arry} slider Current value of the slider.\n * @prop {function} handleChange Callback for each slider change.\n * @prop {array} domain Current max/min allowable slider values.\n */\nfunction ChannelSlider({\n  color, slider = [0, 0], handleChange, domain = [0, 0], dtype, disabled,\n}) {\n  const [min, max] = domain;\n  const handleChangeDebounced = useCallback(\n    debounce(handleChange, 3, { trailing: true }), [handleChange],\n  );\n  const step = max - min < 500 && dtype === 'Float32' ? (max - min) / 500 : 1;\n  return (\n    <Slider\n      value={slider}\n      valueLabelFormat={abbreviateNumber}\n      onChange={(e, v) => handleChangeDebounced(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${color}-${slider}`}\n      min={min}\n      max={max}\n      step={step}\n      orientation=\"horizontal\"\n      style={{ color, marginTop: '7px' }}\n      disabled={disabled}\n    />\n  );\n}\n\n/**\n * Controller for the handling the colormapping sliders.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {array} slider Current slider range.\n * @prop {array} color Current color for this channel.\n * @prop {array} domain Current max/min for this channel.\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {boolean} colormapOn Whether or not the colormap (viridis, magma etc.) is on.\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {function} handleIQRUpdate When the IQR button is clicked, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n */\nfunction RasterChannelController({\n  visibility = false,\n  slider,\n  color,\n  channels,\n  channelId,\n  domainType: newDomainType,\n  dimName,\n  theme,\n  loader,\n  colormapOn,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  handleIQRUpdate,\n  selectionIndex,\n  isLoading,\n  use3d: newUse3d,\n}) {\n  const { dtype } = getSourceFromLoader(loader);\n  const [domain, setDomain] = useState(null);\n  const [domainType, setDomainType] = useState(null);\n  const [use3d, setUse3d] = useState(null);\n  const [selection, setSelection] = useState([{ ...channels[channelId].selection }]);\n  const rgbColor = toRgbUIString(colormapOn, color, theme);\n\n  useEffect(() => {\n    // Use mounted to prevent state updates/re-renders after the component has been unmounted.\n    // All state updates should happen within the mounted check.\n    let mounted = true;\n    if (dtype && loader && channels) {\n      const loaderSelection = [{ ...channels[channelId].selection }];\n      let domains;\n      const hasDomainChanged = newDomainType !== domainType;\n      const has3dChanged = use3d !== newUse3d;\n      const hasSelectionChanged = !isEqual(loaderSelection, selection);\n      if (hasDomainChanged || hasSelectionChanged || has3dChanged) {\n        if (newDomainType === 'Full') {\n          domains = [DOMAINS[dtype]];\n          const [newDomain] = domains;\n          if (mounted) {\n            setDomain(newDomain);\n            setDomainType(newDomainType);\n            if (hasSelectionChanged) {\n              setSelection(loaderSelection);\n            } if (has3dChanged) {\n              setUse3d(newUse3d);\n            }\n          }\n        } else {\n          getMultiSelectionStats({\n            loader: loader.data,\n            selections: loaderSelection,\n            use3d: newUse3d,\n          }).then((stats) => {\n            // eslint-disable-next-line prefer-destructuring\n            domains = stats.domains;\n            const [newDomain] = domains;\n            if (mounted) {\n              setDomain(newDomain);\n              setDomainType(newDomainType);\n              if (hasSelectionChanged) {\n                setSelection(loaderSelection);\n              } if (has3dChanged) {\n                setUse3d(newUse3d);\n              }\n            }\n          });\n        }\n      }\n    }\n    return () => { mounted = false; };\n  }, [domainType, channels, channelId, loader, dtype, newDomainType, selection, newUse3d, use3d]);\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"column\" m={1} justify=\"center\">\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={10}>\n          <ChannelSelectionDropdown\n            handleChange={v => handlePropertyChange('selection', createSelection(v))}\n            selectionIndex={selectionIndex}\n            channelOptions={channelOptions}\n            disabled={isLoading}\n          />\n        </Grid>\n        <Grid item xs={1} style={{ marginTop: '4px' }}>\n          <ChannelOptions\n            handlePropertyChange={handlePropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            disabled={isLoading}\n          />\n        </Grid>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={2}>\n          <ChannelVisibilityCheckbox\n            color={rgbColor}\n            checked={visibility}\n            toggle={() => handlePropertyChange('visible', !visibility)}\n            disabled={isLoading}\n          />\n        </Grid>\n        <Grid item xs={9}>\n          <ChannelSlider\n            color={rgbColor}\n            slider={slider}\n            domain={domain || DOMAINS[dtype]}\n            dtype={dtype}\n            handleChange={v => handlePropertyChange('slider', v)}\n            disabled={isLoading}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default RasterChannelController;\n","import React from 'react';\n\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */\nfunction BitmaskChannelController({\n  visibility = false,\n  dimName,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  selectionIndex,\n  disableOptions = false,\n}) {\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\">\n      <Grid item xs={2}>\n        <ChannelVisibilityCheckbox\n          color={[220, 220, 220]}\n          checked={visibility}\n          toggle={() => handlePropertyChange('visible', !visibility)}\n        />\n      </Grid>\n      <Grid item xs={9}>\n        <ChannelSelectionDropdown\n          handleChange={v => handlePropertyChange('selection', createSelection(v))}\n          selectionIndex={selectionIndex}\n          disableOptions={disableOptions}\n          channelOptions={channelOptions}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <IconButton onClick={handleChannelRemove} style={{ padding: '6px 6px 6px 0px' }}>\n          <RemoveCircleIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default BitmaskChannelController;\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport const useOptionStyles = withStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  span: {\n    width: '70px',\n    textAlign: 'center',\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  colors: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  popper: {\n    zIndex: 4,\n  },\n}));\n\nconst sharedControllerStyles = {\n  width: '100%',\n  flexDirection: 'column',\n};\n\nexport const useControllerSectionStyles = makeStyles(() => ({\n  root: {\n    ...sharedControllerStyles,\n    padding: '0px 8px',\n  },\n}));\n\nexport const StyledExpansionPanelDetails = withStyles(() => ({\n  root: {\n    ...sharedControllerStyles,\n    padding: '8px 8px 24px 8px',\n  },\n}))(ExpansionPanelDetails);\n\nexport const StyledExpansionPanelSummary = withStyles(theme => ({\n  root: {\n    padding: '0px 8px',\n  },\n  content: {\n    margin: '4px 0px',\n    minWidth: '0px',\n  },\n  expanded: {\n    marginBottom: theme.spacing(-3),\n    top: theme.spacing(-1),\n  },\n  expandIcon: {\n    '&$expanded': {\n      top: theme.spacing(-1.3),\n    },\n  },\n}))(ExpansionPanelSummary);\n\nexport const StyledInputLabel = withStyles(() => ({\n  root: {\n    fontSize: '14px',\n  },\n}))(InputLabel);\n\nexport const OverflowEllipsisGrid = withStyles(() => ({\n  item: {\n    width: '100%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n}))(Grid);\n\nexport const StyledSelectionSlider = withStyles(() => ({\n  root: {\n    marginTop: '7px',\n  },\n  markActive: {\n    backgroundColor: 'rgba(128, 128, 128, 0.7)',\n  },\n}))(Slider);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { useControllerSectionStyles } from './styles';\n\nexport default function VectorLayerController(props) {\n  const {\n    label,\n    layer,\n    layerType,\n    handleLayerChange,\n  } = props;\n\n  const slider = layer.opacity;\n  const isOn = layer.visible;\n\n  function handleSliderChange(v) {\n    if (layerType === 'cells') {\n      const stroked = v < 0.7;\n      handleLayerChange({ ...layer, opacity: v, stroked });\n    } else {\n      handleLayerChange({ ...layer, opacity: v });\n    }\n  }\n\n  function handleCheckBoxChange(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  const classes = useControllerSectionStyles();\n  return (\n    <Grid item style={{ marginTop: '10px' }}>\n      <Paper className={classes.root}>\n        <Typography\n          style={{\n            padding: '15px 8px 0px 8px',\n            marginBottom: '-5px',\n          }}\n        >\n          {label}\n        </Typography>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item xs={2}>\n            <Checkbox color=\"primary\" checked={isOn} onChange={(e, v) => handleCheckBoxChange(v)} />\n          </Grid>\n          <Grid item xs={9} style={{ paddingRight: '8px' }}>\n            <Slider\n              value={slider}\n              min={0}\n              max={1}\n              step={0.001}\n              onChange={(e, v) => handleSliderChange(v)}\n              style={{ marginTop: '7px' }}\n              orientation=\"horizontal\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport range from 'lodash/range';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { getDefaultInitialViewState } from '@hms-dbmi/viv';\n\nimport { getBoundingCube, getMultiSelectionStats } from './utils';\nimport { COLORMAP_OPTIONS } from '../utils';\nimport { DEFAULT_RASTER_DOMAIN_TYPE } from '../spatial/constants';\nimport { StyledSelectionSlider } from './styles';\n\nconst DOMAIN_OPTIONS = ['Full', 'Min/Max'];\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  // eslint-disable-next-line no-restricted-properties\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nconst getStatsForResolution = (loader, resolution) => {\n  const { shape, labels } = loader[resolution];\n  const height = shape[labels.indexOf('y')];\n  const width = shape[labels.indexOf('x')];\n  const depth = shape[labels.indexOf('z')];\n  const depthDownsampled = Math.floor(depth / (2 ** resolution));\n  // Check memory allocation limits for Float32Array (used in XR3DLayer for rendering)\n  const totalBytes = 4 * height * width * depthDownsampled;\n  return {\n    height, width, depthDownsampled, totalBytes,\n  };\n};\n\nconst canLoadResolution = (loader, resolution) => {\n  const { totalBytes } = getStatsForResolution(loader, resolution);\n  const maxHeapSize = window.performance?.memory\n    && window.performance?.memory?.jsHeapSizeLimit / 2;\n  const maxSize = maxHeapSize || (2 ** 31) - 1;\n  return totalBytes < maxSize;\n};\n\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {Object} loader Loader object with metadata.\n * @prop {function} handleMultiPropertyChange Function to propgate multiple layer changes at once.\n * This prevents updates from overridding each other.\n * @prop {number} resolution Current 3D resolution.\n * @prop {boolean} disable3d Whether or not to enable 3D selection\n * @prop {function} setRasterLayerCallback Setter for callbacks that fire after raster/volume loads.\n * @prop {function} setAreAllChannelsLoading Setter for whether or not a given channel is loading.\n * @prop {Object} setViewState Setter for the current view state.\n * @prop {number} spatialHeight Height of the spatial component.\n * @prop {number} spatialWidth Width of the spatial component.\n * @prop {object} channels Channels object.\n * @prop {boolean} use3d Whether or not 3D is enabled for this layer.\n */\nfunction VolumeDropdown({\n  loader: loaderWithMeta,\n  handleMultiPropertyChange,\n  resolution: currResolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  channels,\n  use3d,\n  modelMatrix,\n}) {\n  const selections = channels.map(i => i.selection);\n  const { data: loader } = loaderWithMeta;\n  const handleChange = async (val) => {\n    // val is the resolution - null indicates 2D\n    const shouldUse3D = typeof val === 'number';\n    setAreAllChannelsLoading(true);\n    setRasterLayerCallback(() => {\n      setAreAllChannelsLoading(false);\n      setRasterLayerCallback(null);\n    });\n    if (shouldUse3D) {\n      const [xSlice, ySlice, zSlice] = getBoundingCube(loader);\n      const propertiesChanged = {\n        resolution: val,\n        xSlice,\n        ySlice,\n        zSlice,\n        use3d: shouldUse3D,\n      };\n      // Only make the fetch if needed i.e if the 3d was just being turned on.\n      if (!use3d) {\n        const { sliders } = await getMultiSelectionStats({\n          loader,\n          selections,\n          use3d: shouldUse3D,\n        });\n        propertiesChanged.channels = [...channels];\n        propertiesChanged.channels.forEach((ch, i) => {\n          // eslint-disable-next-line no-param-reassign\n          ch.slider = sliders[i];\n        });\n      }\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange(propertiesChanged);\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 1.5, true, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: 0,\n        rotationOrbit: 0,\n      });\n    } else {\n      const { sliders } = await getMultiSelectionStats({\n        loader, selections, use3d: shouldUse3D,\n      });\n      const newChannels = [...channels];\n      newChannels.forEach((ch, i) => {\n        // eslint-disable-next-line no-param-reassign\n        ch.slider = sliders[i];\n      });\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange({\n        resolution: val,\n        use3d: shouldUse3D,\n        spatialAxisFixed: false,\n        channels: newChannels,\n      });\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 0.5, false, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: null,\n        rotationOrbit: null,\n        orbitAxis: null,\n      });\n    }\n  };\n  const { labels, shape } = Array.isArray(loader) ? loader[0] : loader;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  return (\n    <>\n      <Select\n        native\n        value={currResolution}\n        onChange={e => handleChange(\n          e.target.value === '2D' ? e.target.value : Number(e.target.value),\n        )\n        }\n      >\n        {\n          <option key=\"2D\" value=\"2D\">\n            2D Visualization\n          </option>\n        }\n        {Array.from({ length: loader.length })\n          .fill(0)\n          // eslint-disable-next-line no-unused-vars\n          .map((_, resolution) => {\n            if (loader) {\n              if (canLoadResolution(loader, resolution)) {\n                const {\n                  height,\n                  width,\n                  depthDownsampled,\n                  totalBytes,\n                } = getStatsForResolution(loader, resolution);\n                return (\n                  <option\n                    key={`(${height}, ${width}, ${depthDownsampled})`}\n                    value={resolution}\n                    disabled={\n                      disable3d\n                      || !hasZStack\n                    }\n                  >\n                    {`3D: ${resolution}x Downsampled, ~${formatBytes(\n                      totalBytes,\n                    )} per channel, (${height}, ${width}, ${depthDownsampled})`}\n                  </option>\n                );\n              }\n            }\n            return null;\n          })}\n      </Select>\n    </>\n  );\n}\n\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {string} value Currently selected value for the colormap.\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in colormap.\n */\nfunction ColormapSelect({ value, inputId, handleChange }) {\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value === '' ? null : e.target.value)}\n      value={value}\n      inputProps={{ name: 'colormap', id: inputId }}\n      style={{ width: '100%' }}\n    >\n      <option aria-label=\"None\" value=\"\">None</option>\n      {COLORMAP_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction TransparentColorCheckbox({ value, handleChange }) {\n  return (\n    <Checkbox\n      style={{ float: 'left', padding: 0 }}\n      color=\"default\"\n      onChange={() => {\n        if (value) {\n          handleChange(null);\n        } else {\n          handleChange([0, 0, 0]);\n        }\n      }}\n      checked={Boolean(value)}\n    />\n  );\n}\n\n/**\n * Wrapper for the slider that updates opacity.\n * @prop {string} value Currently selected value between 0 and 1.\n * @prop {function} handleChange Callback for every change in opacity.\n */\nfunction OpacitySlider({ value, handleChange }) {\n  return (\n    <Slider\n      value={value}\n      onChange={(e, v) => handleChange(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => 'opacity slider'}\n      min={0}\n      max={1}\n      step={0.01}\n      orientation=\"horizontal\"\n      style={{ marginTop: '7px' }}\n    />\n  );\n}\n\n/**\n * Wrapper for the dropdown that chooses the domain type.\n * @prop {string} value Currently selected value (i.e 'Max/Min').\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in domain.\n */\nfunction SliderDomainSelector({ value, inputId, handleChange }) {\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value)}\n      value={value}\n      inputProps={{ name: 'domain-selector', id: inputId }}\n      style={{ width: '100%' }}\n    >\n      {DOMAIN_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Wrapper for the slider that chooses global selections (z, t etc.).\n * @prop {string} field The dimension this selects for (z, t etc.).\n * @prop {number} value Currently selected index (1, 4, etc.).\n * @prop {function} handleChange Callback for every change in selection.\n * @prop {function} possibleValues All available values for the field.\n */\nfunction GlobalSelectionSlider({\n  field,\n  value,\n  handleChange,\n  possibleValues,\n}) {\n  return (\n    <StyledSelectionSlider\n      value={value}\n      // See https://github.com/hubmapconsortium/vitessce-image-viewer/issues/176 for why\n      // we have the two handlers.\n      onChange={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      onChangeCommitted={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${field} slider`}\n      marks={possibleValues.map(val => ({ value: val }))}\n      min={Number(possibleValues[0])}\n      max={Number(possibleValues.slice(-1))}\n      orientation=\"horizontal\"\n      step={null}\n    />\n  );\n}\n\n/**\n * Wrapper for each of the options to show its name and then its UI component.\n * @prop {string} name Display name for option.\n * @prop {number} opacity Current opacity value.\n * @prop {string} inputId An id for css.\n * @prop {object} children Components to be rendered next to the name (slider, dropdown etc.).\n */\nfunction LayerOption({ name, inputId, children }) {\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n      <Grid item xs={6}>\n        <InputLabel htmlFor={inputId}>{name}:</InputLabel>\n      </Grid>\n      <Grid item xs={6}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\n/**\n * Gloabl options for all channels (opacity, colormap, etc.).\n * @prop {string} colormap What colormap is currently selected (None, viridis etc.).\n * @prop {number} opacity Current opacity value.\n * @prop {function} handleColormapChange Callback for when colormap changes.\n * @prop {function} handleOpacityChange Callback for when opacity changes.\n * @prop {object} globalControlLabels All available options for global control (z and t).\n * @prop {function} handleGlobalChannelsSelectionChange Callback for global selection changes.\n * @prop {function} handleDomainChange Callback for domain type changes (full or min/max).\n * @prop {array} channels Current channel object for inferring the current global selection.\n * @prop {array} dimensions Currently available dimensions (channel, z, t etc.).\n * @prop {string} domainType One of Max/Min or Full (soon presets as well).\n * @prop {boolean} isRgb Whether or not the image is rgb (so we don't need colormap controllers).\n */\nfunction LayerOptions({\n  colormap,\n  opacity,\n  handleColormapChange,\n  handleOpacityChange,\n  handleTransparentColorChange,\n  globalControlLabels,\n  globalLabelValues,\n  handleGlobalChannelsSelectionChange,\n  handleSliderChange,\n  handleDomainChange,\n  transparentColor,\n  channels,\n  domainType,\n  isRgb,\n  shouldShowTransparentColor,\n  shouldShowDomain,\n  shouldShowColormap,\n  use3d,\n  loader,\n  handleMultiPropertyChange,\n  resolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) {\n  const { labels, shape } = Array.isArray(loader.data) ? loader.data[0] : loader.data;\n  const hasDimensionsAndChannels = labels.length > 0 && channels.length > 0;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  return (\n    <Grid container direction=\"column\" style={{ width: '100%' }}>\n      {hasZStack\n        && !disable3d\n        && (\n        <VolumeDropdown\n          loader={loader}\n          handleSliderChange={handleSliderChange}\n          handleDomainChange={handleDomainChange}\n          channels={channels}\n          handleMultiPropertyChange={handleMultiPropertyChange}\n          resolution={resolution}\n          disable3d={disable3d}\n          setRasterLayerCallback={setRasterLayerCallback}\n          setAreAllChannelsLoading={setAreAllChannelsLoading}\n          setViewState={setViewState}\n          spatialHeight={spatialHeight}\n          spatialWidth={spatialWidth}\n          use3d={use3d}\n          modelMatrix={modelMatrix}\n        />\n        )\n      }\n      {hasDimensionsAndChannels\n        && !use3d\n        && globalControlLabels.map(\n          field => shape[labels.indexOf(field)] > 1 && (\n          <LayerOption name={field} inputId={`${field}-slider`} key={field}>\n            <GlobalSelectionSlider\n              field={field}\n              value={globalLabelValues[field]}\n              handleChange={handleGlobalChannelsSelectionChange}\n              possibleValues={range(shape[labels.indexOf(field)])}\n            />\n          </LayerOption>\n          ),\n        )}\n      {!isRgb ? (\n        <>\n          {shouldShowColormap && (\n            <Grid item>\n              <LayerOption name=\"Colormap\" inputId=\"colormap-select\">\n                <ColormapSelect\n                  value={colormap || ''}\n                  inputId=\"colormap-select\"\n                  handleChange={handleColormapChange}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n          {shouldShowDomain && (\n            <Grid item>\n              <LayerOption name=\"Domain\" inputId=\"domain-selector\">\n                <SliderDomainSelector\n                  value={domainType || DEFAULT_RASTER_DOMAIN_TYPE}\n                  handleChange={(value) => {\n                    handleDomainChange(value);\n                  }}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n        </>\n      ) : null}\n      {!use3d && (\n        <Grid item>\n          <LayerOption name=\"Opacity\" inputId=\"opacity-slider\">\n            <OpacitySlider value={opacity} handleChange={handleOpacityChange} />\n          </LayerOption>\n        </Grid>\n      )}\n      {shouldShowTransparentColor && !use3d && (\n        <Grid item>\n          <LayerOption\n            name=\"Zero Transparent\"\n            inputId=\"transparent-color-selector\"\n          >\n            <TransparentColorCheckbox\n              value={transparentColor}\n              handleChange={handleTransparentColorChange}\n            />\n          </LayerOption>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default LayerOptions;\n","import React from 'react';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport { RENDERING_MODES, getDefaultInitialViewState } from '@hms-dbmi/viv';\nimport { abbreviateNumber, getBoundingCube } from './utils';\n\nconst useSlicerStyles = makeStyles(theme => createStyles({\n  enabled: {},\n  disabled: {\n    color: theme.palette.text.disabled,\n    // Because of the .5 opacity of the disabled color in the theme, and the fact\n    // that there are multiple overlaid parts to the slider,\n    // this needs to be set manually for the desired effect.\n    '& .MuiSlider-thumb': {\n      color: 'rgb(100, 100, 100, 1.0)',\n    },\n    '&  .MuiSlider-track': {\n      color: 'rgb(100, 100, 100, 1.0)',\n    },\n  },\n}));\n\nconst Slicer = ({\n  xSlice,\n  ySlice,\n  zSlice,\n  handleSlicerSetting,\n  loader,\n  use3d,\n}) => {\n  const [xSliceInit, ySliceInit, zSliceInit] = getBoundingCube(loader.data);\n  const sliceValuesAndSetSliceFunctions = [\n    [\n      xSlice,\n      xSliceNew => handleSlicerSetting('x', xSliceNew),\n      'x',\n      xSliceInit,\n    ],\n    [\n      ySlice,\n      ySliceNew => handleSlicerSetting('y', ySliceNew),\n      'y',\n      ySliceInit,\n    ],\n    [\n      zSlice,\n      zSliceNew => handleSlicerSetting('z', zSliceNew),\n      'z',\n      zSliceInit,\n    ],\n  ];\n  const classes = useSlicerStyles();\n  const Slicers = sliceValuesAndSetSliceFunctions.map(\n    ([val, setVal, label, [min, max]]) => (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        key={label}\n      >\n        <Grid item xs={1}>\n          <Typography\n            className={!use3d ? classes.disabled : classes.enabled}\n            style={{ marginBottom: 0 }}\n          >\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={11}>\n          <Slider\n            disabled={!use3d}\n            className={!use3d ? classes.disabled : classes.enabled}\n            value={val}\n            onChange={(e, v) => setVal(v)}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={v => abbreviateNumber(v)}\n            getAriaLabel={() => `${label} slider`}\n            min={min}\n            max={max}\n            step={0.005}\n            orientation=\"horizontal\"\n          />\n        </Grid>\n      </Grid>\n    ),\n  );\n  return (\n    <>\n      <Typography\n        className={!use3d ? classes.disabled : classes.enabled}\n        style={{ marginTop: 16, marginBottom: 0 }}\n      >\n        Clipping Planes:{' '}\n      </Typography>{' '}\n      {Slicers}\n    </>\n  );\n};\n\nconst renderingOptions = Object.values(RENDERING_MODES);\n\nfunction RenderingModeSelect({\n  handleRenderingModeChange,\n  renderingMode,\n  use3d,\n}) {\n  // Empty option allows for displaying the title of the dropdown fully in the UI.\n  const options = !use3d ? [...renderingOptions, ''] : renderingOptions;\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"rendering-mode-select\">Rendering Mode</InputLabel>\n      <Select\n        native\n        onChange={e => handleRenderingModeChange(e.target.value)}\n        value={use3d ? renderingMode : ''}\n        inputProps={{\n          name: 'rendering-mode',\n          id: 'rendering-mode-select',\n        }}\n        disabled={!use3d}\n      >\n        {options.map(name => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nconst ReCenterButton = ({\n  setViewState,\n  use3d,\n  spatialHeight,\n  spatialWidth,\n  loader,\n  modelMatrix,\n}) => (\n  <Grid item xs=\"auto\" key=\"recenter\">\n    <Button\n      onClick={() => {\n        const defaultViewState = getDefaultInitialViewState(\n          loader.data,\n          { height: spatialHeight, width: spatialWidth },\n          1.5,\n          use3d,\n          new Matrix4(modelMatrix),\n        );\n        setViewState({\n          ...defaultViewState,\n          rotationX: 0,\n          rotationOrbit: 0,\n        });\n      }\n        }\n      disabled={!use3d}\n      style={{\n        padding: 0,\n        marginBottom: 6,\n      }}\n    >\n        Re-Center\n    </Button>\n  </Grid>\n);\n\nconst VolumeOptions = ({\n  handleSlicerSetting,\n  handleRenderingModeChange,\n  renderingMode,\n  xSlice,\n  ySlice,\n  zSlice,\n  use3d,\n  loader,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) => (\n  <>\n    <RenderingModeSelect\n      handleRenderingModeChange={handleRenderingModeChange}\n      renderingMode={renderingMode}\n      use3d={use3d}\n    />\n    <Slicer\n      xSlice={xSlice}\n      ySlice={ySlice}\n      zSlice={zSlice}\n      handleSlicerSetting={handleSlicerSetting}\n      use3d={use3d}\n      loader={loader}\n    />\n    <ReCenterButton\n      setViewState={setViewState}\n      use3d={use3d}\n      spatialHeight={spatialHeight}\n      spatialWidth={spatialWidth}\n      loader={loader}\n      modelMatrix={modelMatrix}\n    />\n  </>\n);\n\nexport default VolumeOptions;\n","import React, { useState } from 'react';\nimport { MAX_SLIDERS_AND_CHANNELS, getChannelStats } from '@hms-dbmi/viv';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Slider from '@material-ui/core/Slider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport LayerOptions from './LayerOptions';\nimport VolumeOptions from './VolumeOptions';\nimport {\n  useControllerSectionStyles,\n  StyledExpansionPanelDetails,\n  StyledExpansionPanelSummary,\n  StyledInputLabel,\n  OverflowEllipsisGrid,\n} from './styles';\nimport { getMultiSelectionStats } from './utils';\n\nimport { GLOBAL_LABELS } from '../spatial/constants';\nimport { getSourceFromLoader, isRgb } from '../../utils';\nimport { DOMAINS } from './constants';\n\n\nfunction TabPanel(props) {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\n\n// Set the domain of the sliders based on either a full range or min/max.\nasync function getDomainsAndSliders(loader, loaderSelection, domainType, use3d) {\n  let domains;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data, selections: loaderSelection, use3d,\n  });\n  const { sliders } = stats;\n  if (domainType === 'Min/Max') {\n    // eslint-disable-next-line prefer-destructuring\n    domains = stats.domains;\n  } if (domainType === 'Full') {\n    const source = getSourceFromLoader(loader);\n    domains = loaderSelection.map(() => DOMAINS[source.dtype]);\n  }\n  return { domains, sliders };\n}\n\nconst buttonStyles = { borderStyle: 'dashed', marginTop: '10px', fontWeight: 400 };\n\n/**\n * Controller for the various imaging options (color, opactiy, sliders etc.)\n * @prop {object} imageData Image config object, one of the `images` in the raster schema.\n * @prop {object} layerId Randomly generated id for the image layer that this controller handles.\n * @prop {function} handleLayerRemove Callback for handling the removal of a layer.\n * @prop {object} loader Loader object for the current imaging layer.\n * @prop {function} handleLayerChange Callback for handling the changing of layer properties.\n */\nexport default function LayerController(props) {\n  const {\n    layer, name, loader, theme,\n    handleLayerRemove, handleLayerChange,\n    shouldShowTransparentColor,\n    shouldShowDomain, shouldShowColormap, ChannelController,\n    setViewState, disable3d, setRasterLayerCallback,\n    setAreLayerChannelsLoading, areLayerChannelsLoading, disabled,\n    spatialHeight, spatialWidth,\n  } = props;\n\n  const {\n    colormap,\n    opacity,\n    channels,\n    transparentColor,\n    renderingMode,\n    xSlice,\n    ySlice,\n    zSlice,\n    resolution,\n    use3d,\n    modelMatrix,\n  } = layer;\n  const firstSelection = channels[0]?.selection || {};\n\n  const { data, channels: channelOptions } = loader;\n  const [tab, setTab] = useState(0);\n\n  const handleTabChange = (event, newTab) => {\n    setTab(newTab);\n  };\n  const { labels, shape } = Array.isArray(data) ? data[data.length - 1] : data;\n  const [domainType, setDomainType] = useState(layer.domainType);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [globalLabelValues, setGlobalLabelValues] = useState(\n    GLOBAL_LABELS\n      .filter(field => typeof firstSelection[field] === 'number')\n      .reduce((o, key) => ({ ...o, [key]: firstSelection[key] }), {}),\n  );\n\n  function setVisible(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  function setColormap(v) {\n    handleLayerChange({ ...layer, colormap: v });\n  }\n\n  function setOpacity(v) {\n    handleLayerChange({ ...layer, opacity: v });\n  }\n\n  function setChannels(v) {\n    handleLayerChange({ ...layer, channels: v });\n  }\n  function setTransparentColor(v) {\n    handleLayerChange({ ...layer, transparentColor: v });\n  }\n  function setRenderingMode(v) {\n    handleLayerChange({ ...layer, renderingMode: v });\n  }\n\n  function handleMultiPropertyChange(obj) {\n    handleLayerChange({ ...layer, ...obj });\n  }\n\n  function handleSlicerSetting(slice, val) {\n    handleLayerChange({ ...layer, [`${slice}Slice`]: val });\n  }\n\n  function setChannelsAndDomainType(newChannels, newDomainType) {\n    handleLayerChange({\n      ...layer,\n      channels: newChannels,\n      domainType: newDomainType,\n    });\n  }\n\n  function setChannel(v, i) {\n    const newChannels = [...channels];\n    newChannels[i] = v;\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function addChannel(v) {\n    const newChannels = [...channels, v];\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function removeChannel(i) {\n    const newChannels = [...channels];\n    newChannels.splice(i, 1);\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  const setAreAllChannelsLoading = (val) => {\n    const newAreLayerChannelsLoading = channels.map(() => val);\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n  };\n\n  // Handles adding a channel, creating a default selection\n  // for the current global settings and domain type.\n  const handleChannelAdd = async () => {\n    const selection = {};\n    labels.forEach((label) => {\n      // Set new image to default selection for non-global selections (0)\n      // and use current global selection otherwise.\n      selection[label] = GLOBAL_LABELS.includes(label)\n        ? (globalLabelValues[label] || 0)\n        : 0;\n    });\n    const { domains, sliders } = await getDomainsAndSliders(loader, [selection], domainType, use3d);\n    const domain = domains[0];\n    const slider = domain;\n    const color = [255, 255, 255];\n    const visible = true;\n    const newChannelId = channels.length;\n    const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n    newAreLayerChannelsLoading[newChannelId] = true;\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n    const channel = {\n      selection, slider, visible, color,\n    };\n    setRasterLayerCallback(() => {\n      setChannel({ ...channel, slider: sliders[0] }, newChannelId);\n      const areLayerChannelsLoadingCallback = [...newAreLayerChannelsLoading];\n      areLayerChannelsLoadingCallback[newChannelId] = false;\n      setAreLayerChannelsLoading(areLayerChannelsLoadingCallback);\n      setRasterLayerCallback(null);\n    });\n    addChannel(channel);\n  };\n\n  const handleDomainChange = async (value) => {\n    setDomainType(value);\n    const loaderSelection = channels.map(\n      channel => channel.selection,\n    );\n    let sliders = channels.map(\n      channel => channel.slider,\n    );\n    const { domains } = await getDomainsAndSliders(\n      loader,\n      loaderSelection,\n      value,\n      use3d,\n    );\n\n    // If it's the right-most slider, we take the minimum of that and the new value.\n    // Otherwise, we use the maximum of the left-hand side and the new value.\n    sliders = sliders.map(\n      (slider, i) => {\n        const [left, right] = slider;\n        return [\n          Math.max(left, domains[i][0]),\n          Math.min(right, domains[i][1]),\n        ];\n      },\n    );\n\n    const newChannels = channels.map((c, i) => ({ ...c, slider: sliders[i] }));\n    setChannelsAndDomainType(newChannels, value);\n  };\n\n  // This call updates all channel selections with new global selection from the UI.\n  const handleGlobalChannelsSelectionChange = async ({ selection, event }) => {\n    const loaderSelection = channels.map(channel => ({\n      ...channel.selection,\n      ...selection,\n    }));\n    const canUpdateChannels = event.type === 'mouseup' || event.type === 'keydown';\n    // Only update domains on a mouseup event for the same reason as above.\n    if (canUpdateChannels) {\n      setAreAllChannelsLoading(true);\n      getDomainsAndSliders(loader, loaderSelection, domainType, use3d).then(({ sliders }) => {\n        const newChannelsWithSelection = channels.map(c => ({\n          ...c,\n          selection: { ...c.selection, ...selection },\n        }));\n        // Set the callback before changing the selection\n        // so the callback is used when the layer (re)loads its data.\n        setRasterLayerCallback(() => {\n          setRasterLayerCallback(null);\n          setAreAllChannelsLoading(false);\n          const newChannelsWithSliders = [...newChannelsWithSelection].map(\n            (c, i) => ({\n              ...c,\n              slider: sliders[i],\n            }),\n          );\n          setChannels(newChannelsWithSliders);\n        });\n        setChannels(newChannelsWithSelection);\n      });\n    }\n    setGlobalLabelValues(prev => ({ ...prev, ...selection }));\n  };\n\n  let channelControllers = [];\n  if (labels.length > 0) {\n    const channelLabel = labels.find(c => c === 'channel' || c === 'c') || labels[0];\n    // Create the channel controllers for each channel.\n    channelControllers = channels.map(\n      // c is an object like { color, selection, slider, visible }.\n      (c, channelId) => {\n        // Update the auxiliary store with the current loading state of a channel.\n        const setIsLoading = (val) => {\n          const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n          newAreLayerChannelsLoading[channelId] = val;\n          setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n        };\n        // Change one property of a channel (for now - soon\n        // nested structures allowing for multiple z/t selecitons at once, for example).\n        const handleChannelPropertyChange = (property, value) => {\n          // property is something like \"selection\" or \"slider.\"\n          // value is the actual change, like { channel: \"DAPI\" }.\n          const update = { [property]: value };\n          if (property === 'selection') {\n            // Channel is loading until the layer callback is called\n            // by the layer, which fetches the raster data.\n            setIsLoading(true);\n            update.selection = {\n              ...globalLabelValues,\n              ...update.selection,\n            };\n            setChannel({ ...c, ...update }, channelId);\n            // Call back for raster layer handles update of UI\n            // like sliders and the loading state of the channel.\n            setRasterLayerCallback(async () => {\n              const loaderSelection = [\n                { ...channels[channelId][property], ...value },\n              ];\n              const { sliders } = await getDomainsAndSliders(\n                loader, loaderSelection, domainType, use3d,\n              );\n              [update.slider] = sliders;\n              setChannel({ ...c, ...update }, channelId);\n              setRasterLayerCallback(null);\n              setIsLoading(false);\n            });\n          } else {\n            setChannel({ ...c, ...update }, channelId);\n          }\n        };\n        const handleChannelRemove = () => {\n          removeChannel(channelId);\n        };\n        const handleIQRUpdate = async () => {\n          const { data: loaderData } = loader;\n          const source = Array.isArray(loaderData) ? loaderData[loaderData.length - 1] : loaderData;\n          const raster = await source.getRaster({\n            selection: channels[channelId].selection,\n          });\n          const stats = getChannelStats(raster.data);\n          const { q1, q3 } = stats;\n          setChannel({ ...c, slider: [q1, q3] }, channelId);\n        };\n        return (\n          <ChannelController\n            // eslint-disable-next-line react/no-array-index-key\n            key={`channel-controller-${channelId}`}\n            dimName={channelLabel}\n            visibility={c.visible}\n            selectionIndex={c.selection[channelLabel]}\n            slider={c.slider}\n            color={c.color}\n            channels={channels}\n            channelId={channelId}\n            domainType={domainType}\n            loader={loader}\n            globalLabelValues={globalLabelValues}\n            theme={theme}\n            channelOptions={channelOptions}\n            colormapOn={Boolean(colormap)}\n            handlePropertyChange={handleChannelPropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            setRasterLayerCallback={setRasterLayerCallback}\n            isLoading={areLayerChannelsLoading[channelId]}\n            use3d={use3d}\n          />\n        );\n      },\n    );\n  }\n\n  const controllerSectionClasses = useControllerSectionStyles();\n\n  const { visible } = layer;\n  const visibleSetting = typeof visible === 'boolean' ? visible : true;\n  const Visibility = visibleSetting ? VisibilityIcon : VisibilityOffIcon;\n  // Only show Volume tabs if 3D is available.\n  const useVolumeTabs = !disable3d && shape[labels.indexOf('z')] > 1;\n  const FullController = (\n    <>\n      <LayerOptions\n        channels={channels}\n        opacity={opacity}\n        colormap={colormap}\n        transparentColor={transparentColor}\n        domainType={domainType}\n      // Only allow for global dimension controllers that\n      // exist in the `dimensions` part of the loader.\n        globalControlLabels={labels.filter(label => GLOBAL_LABELS.includes(label))}\n        globalLabelValues={globalLabelValues}\n        handleOpacityChange={setOpacity}\n        handleColormapChange={setColormap}\n        handleGlobalChannelsSelectionChange={handleGlobalChannelsSelectionChange}\n        handleTransparentColorChange={setTransparentColor}\n        isRgb={isRgb(loader)}\n        handleDomainChange={handleDomainChange}\n        shouldShowTransparentColor={shouldShowTransparentColor}\n        shouldShowDomain={shouldShowDomain}\n        shouldShowColormap={shouldShowColormap}\n        use3d={use3d}\n        loader={loader}\n        handleMultiPropertyChange={handleMultiPropertyChange}\n        resolution={resolution}\n        disable3d={disable3d}\n        setRasterLayerCallback={setRasterLayerCallback}\n        setAreAllChannelsLoading={setAreAllChannelsLoading}\n        setViewState={setViewState}\n        spatialHeight={spatialHeight}\n        spatialWidth={spatialWidth}\n        modelMatrix={modelMatrix}\n      />\n      {!isRgb(loader) ? channelControllers : null}\n      {!isRgb(loader) && (\n      <Button\n        disabled={channels.length === MAX_SLIDERS_AND_CHANNELS}\n        onClick={handleChannelAdd}\n        fullWidth\n        variant=\"outlined\"\n        style={buttonStyles}\n        startIcon={<AddIcon />}\n        size=\"small\"\n      >\n                Add Channel\n      </Button>\n      )}\n    </>\n  );\n  return (\n    <ExpansionPanel\n      className={controllerSectionClasses.root}\n      onChange={(e, expanded) => !disabled && setIsExpanded(expanded && e?.target?.attributes?.role?.value === 'presentation')}\n      TransitionProps={{ enter: false }}\n      expanded={!disabled && isExpanded}\n    >\n      <StyledExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`layer-${name}-controls`}\n      >\n        <Grid container direction=\"column\" m={1} justify=\"center\">\n          <OverflowEllipsisGrid item>\n            <Button\n              onClick={(e) => {\n                if (!disabled) {\n                  // Needed to prevent affecting the expansion panel from changing\n                  e.stopPropagation();\n                  const nextVisible = (typeof visible === 'boolean' ? !visible : false);\n                  setVisible(nextVisible);\n                }\n              }}\n              style={{\n                marginRight: 8, marginBottom: 2, padding: 0, minWidth: 0,\n              }}\n            >\n              <Visibility />\n            </Button>\n            {name}\n          </OverflowEllipsisGrid>\n          {!disabled && !isExpanded && !use3d && (\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n              <Grid item xs={6}>\n                <StyledInputLabel htmlFor={`layer-${name}-opacity-closed`}>Opacity:</StyledInputLabel>\n              </Grid>\n              <Grid item xs={6}>\n                <Slider\n                  id={`layer-${name}-opacity-closed`}\n                  value={opacity}\n                  onChange={(e, v) => setOpacity(v)}\n                  valueLabelDisplay=\"auto\"\n                  getAriaLabel={() => 'opacity slider'}\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  orientation=\"horizontal\"\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </StyledExpansionPanelSummary>\n      <StyledExpansionPanelDetails>\n        {useVolumeTabs ? (\n          <>\n            <Tabs\n              value={tab}\n              onChange={handleTabChange}\n              aria-label=\"simple tabs example\"\n              style={{ height: '24px', minHeight: '24px' }}\n            >\n              <Tab\n                label=\"Channels\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n                disableRipple\n              />\n              <Tab\n                label=\"Volume\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n              />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n              {FullController}\n            </TabPanel>\n            <TabPanel value={tab} index={1} style={{ marginTop: 4 }}>\n              <VolumeOptions\n                loader={loader}\n                handleSlicerSetting={handleSlicerSetting}\n                handleRenderingModeChange={setRenderingMode}\n                renderingMode={renderingMode}\n                xSlice={xSlice}\n                ySlice={ySlice}\n                zSlice={zSlice}\n                use3d={use3d}\n                setViewState={setViewState}\n                spatialHeight={spatialHeight}\n                spatialWidth={spatialWidth}\n                modelMatrix={modelMatrix}\n              />\n            </TabPanel>\n          </>\n        ) : FullController}\n        <Button\n          onClick={handleLayerRemove}\n          fullWidth\n          variant=\"outlined\"\n          style={buttonStyles}\n          size=\"small\"\n        >\n          Remove Image Layer\n        </Button>\n      </StyledExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PopperMenu } from '../shared-mui/components';\n\nconst useStyles = makeStyles(() => ({\n  addButton: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    fontWeight: 400,\n  },\n}));\n\nfunction ImageAddIcon() {\n  return (\n    <>\n      <AddIcon />\n      Add Image Layer\n    </>\n  );\n}\n\nfunction ImageAddButton({ imageOptions, handleImageAdd }) {\n  const [open, toggle] = useReducer(v => !v, false);\n  const classes = useStyles();\n\n  const handleAdd = (imgData) => {\n    toggle();\n    handleImageAdd(imgData);\n  };\n\n  if (!imageOptions) return null;\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<ImageAddIcon />}\n      buttonClassName={classes.addButton}\n    >\n      {imageOptions.map((imgData, i) => (\n        <MenuItem dense key={imgData.name} onClick={() => handleAdd(i)}>\n          <span>{imgData.name}</span>\n        </MenuItem>\n      ))}\n    </PopperMenu>\n  );\n}\n\nexport default ImageAddButton;\n","/* eslint-disable dot-notation */\nimport React, {\n  useEffect, useCallback, useRef, forwardRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TitleInfo from '../TitleInfo';\nimport RasterChannelController from './RasterChannelController';\nimport BitmaskChannelController from './BitmaskChannelController';\nimport VectorLayerController from './VectorLayerController';\nimport LayerController from './LayerController';\nimport ImageAddButton from './ImageAddButton';\nimport { useReady, useClosestVitessceContainerSize, useWindowDimensions } from '../hooks';\nimport { useCellsData, useMoleculesData, useRasterData } from '../data-hooks';\nimport {\n  useCoordination,\n  useLoaders,\n  useAuxiliaryCoordination,\n  useComponentLayout,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { initializeLayerChannels } from '../spatial/utils';\nimport { DEFAULT_RASTER_LAYER_PROPS } from '../spatial/constants';\n\nconst LAYER_CONTROLLER_DATA_TYPES = ['raster'];\n\n// LayerController is memoized to prevent updates from prop changes that\n// are caused by view state updates i.e zooming and panning within\n// the actual Spatial component.  Re-rendering this component is very\n// expensive so we have to be careful with props in this file in general.\nconst LayerControllerMemoized = React.memo(\n  forwardRef((props, ref) => {\n    const {\n      title,\n      removeGridComponent,\n      theme,\n      isReady,\n      moleculesLayer,\n      dataset,\n      setMoleculesLayer,\n      cellsLayer,\n      canShowCellVecmask,\n      setCellsLayer,\n      rasterLayers,\n      imageLayerLoaders,\n      imageLayerMeta,\n      rasterLayersCallbacks,\n      setRasterLayersCallbacks,\n      areLoadingRasterChannnels,\n      setAreLoadingRasterChannnels,\n      handleRasterLayerChange,\n      handleRasterLayerRemove,\n      disable3d,\n      globalDisable3d,\n      layerIs3DIndex,\n      setZoom,\n      setTargetX,\n      setTargetY,\n      setTargetZ,\n      setRotationX,\n      setRotationOrbit,\n      componentHeight,\n      componentWidth,\n      spatialLayout,\n      handleImageAdd,\n    } = props;\n    return (\n      <TitleInfo\n        title={title}\n        isScroll\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n      >\n        <div className=\"layer-controller-container\" ref={ref}>\n          {moleculesLayer && (\n            <VectorLayerController\n              key={`${dataset}-molecules`}\n              label=\"Molecules\"\n              layerType=\"molecules\"\n              layer={moleculesLayer}\n              handleLayerChange={setMoleculesLayer}\n            />\n          )}\n          {cellsLayer && canShowCellVecmask && (\n            <VectorLayerController\n              key={`${dataset}-cells`}\n              label=\"Cell Segmentations\"\n              layerType=\"cells\"\n              layer={cellsLayer}\n              handleLayerChange={setCellsLayer}\n            />\n          )}\n          {rasterLayers\n            && rasterLayers.map((layer, i) => {\n              const { index } = layer;\n              const loader = imageLayerLoaders[index];\n              const layerMeta = imageLayerMeta[index];\n              // Could also be bitmask at the moment.\n              const isRaster = !layerMeta?.metadata?.isBitmask;\n              const ChannelController = isRaster\n                ? RasterChannelController\n                : BitmaskChannelController;\n              // Set up the call back mechanism so that each layer manages\n              // callbacks/loading state for itself and its channels.\n              const setRasterLayerCallback = (cb) => {\n                const newRasterLayersCallbacks = [\n                  ...(rasterLayersCallbacks || []),\n                ];\n                newRasterLayersCallbacks[i] = cb;\n                setRasterLayersCallbacks(newRasterLayersCallbacks);\n              };\n              const areLayerChannelsLoading = (areLoadingRasterChannnels || [])[i] || [];\n              const setAreLayerChannelsLoading = (v) => {\n                const newAreLoadingRasterChannnels = [\n                  ...(areLoadingRasterChannnels || []),\n                ];\n                newAreLoadingRasterChannnels[i] = v;\n                setAreLoadingRasterChannnels(newAreLoadingRasterChannnels);\n              };\n              return loader && layerMeta ? (\n                <Grid\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${dataset}-raster-${index}-${i}`}\n                  item\n                  style={{ marginTop: '10px' }}\n                >\n                  <LayerController\n                    name={layerMeta.name}\n                    layer={layer}\n                    loader={loader}\n                    theme={theme}\n                    handleLayerChange={v => handleRasterLayerChange(v, i)}\n                    handleLayerRemove={() => handleRasterLayerRemove(i)}\n                    ChannelController={ChannelController}\n                    shouldShowTransparentColor={isRaster}\n                    shouldShowDomain={isRaster}\n                    shouldShowColormap={isRaster}\n                    // Disable 3D if given explicit instructions to do so\n                    // or if another layer is using 3D mode.\n                    disable3d={\n                      globalDisable3d\n                      || (disable3d || []).indexOf(layerMeta.name) >= 0\n                      || (typeof layerIs3DIndex === 'number'\n                        && layerIs3DIndex !== -1\n                        && layerIs3DIndex !== i)\n                    }\n                    disabled={\n                      typeof layerIs3DIndex === 'number'\n                      && layerIs3DIndex !== -1\n                      && layerIs3DIndex !== i\n                    }\n                    rasterLayersCallbacks={rasterLayersCallbacks}\n                    setRasterLayerCallback={setRasterLayerCallback}\n                    setViewState={({\n                      zoom: newZoom,\n                      target,\n                      rotationX: newRotationX,\n                      rotationOrbit: newRotationOrbit,\n                    }) => {\n                      setZoom(newZoom);\n                      setTargetX(target[0]);\n                      setTargetY(target[1]);\n                      setTargetZ(target[2]);\n                      setRotationX(newRotationX);\n                      setRotationOrbit(newRotationOrbit);\n                    }}\n                    setAreLayerChannelsLoading={setAreLayerChannelsLoading}\n                    areLayerChannelsLoading={areLayerChannelsLoading}\n                    spatialHeight={(componentHeight * spatialLayout.h) / 12}\n                    spatialWidth={(componentWidth * spatialLayout.w) / 12}\n                  />\n                </Grid>\n              ) : null;\n            })}\n          <Grid item>\n            <ImageAddButton\n              imageOptions={imageLayerMeta}\n              handleImageAdd={handleImageAdd}\n            />\n          </Grid>\n        </div>\n      </TitleInfo>\n    );\n  }),\n);\n\n/**\n * A subscriber component for the spatial layer controller.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {Object} props.disable3d Which layers should have 3D disabled (from `raster.json` names).\n * @param {Object} props.globalDisable3d Disable 3D for all layers. Overrides the `disable3d` prop.\n */\nfunction LayerControllerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Spatial Layers',\n    disable3d,\n    globalDisable3d,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [\n    {\n      dataset,\n      spatialRasterLayers: rasterLayers,\n      spatialCellsLayer: cellsLayer,\n      spatialMoleculesLayer: moleculesLayer,\n    },\n    {\n      setSpatialRasterLayers: setRasterLayers,\n      setSpatialCellsLayer: setCellsLayer,\n      setSpatialMoleculesLayer: setMoleculesLayer,\n      setSpatialTargetX: setTargetX,\n      setSpatialTargetY: setTargetY,\n      setSpatialTargetZ: setTargetZ,\n      setSpatialRotationX: setRotationX,\n      setSpatialRotationOrbit: setRotationOrbit,\n      setSpatialZoom: setZoom,\n    },\n  ] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const [\n    {\n      rasterLayersCallbacks,\n      areLoadingRasterChannnels,\n    },\n    {\n      setRasterLayersCallbacks,\n      setAreLoadingRasterChannnels,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n  // Spatial layout + window size is needed for the \"re-center\" button to work properly.\n  // Dimensions of the Spatial component can be inferred and used for resetting view state to\n  // a nice, centered view.\n  const [spatialLayout] = useComponentLayout('spatial', ['spatialRasterLayers'], coordinationScopes);\n  const layerControllerRef = useRef();\n  const [componentWidth, componentHeight] = useClosestVitessceContainerSize(layerControllerRef);\n  const { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    LAYER_CONTROLLER_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => { }, false,\n    { setSpatialRasterLayers: setRasterLayers },\n    { spatialRasterLayers: rasterLayers },\n  );\n\n  useCellsData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialCellsLayer: setCellsLayer },\n    { spatialCellsLayer: cellsLayer },\n  );\n  useMoleculesData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialMoleculesLayer: setMoleculesLayer },\n    { spatialMoleculesLayer: moleculesLayer },\n  );\n\n  // useCallback prevents new functions from propogating\n  // changes to the underlying component.\n  const handleImageAdd = useCallback(async (index) => {\n    const loader = imageLayerLoaders[index];\n    const newChannels = await initializeLayerChannels(\n      loader,\n      (rasterLayers[index] || {}).use3d,\n    );\n    const newLayer = {\n      index,\n      modelMatrix: imageLayerMeta[index]?.metadata?.transform?.matrix,\n      ...DEFAULT_RASTER_LAYER_PROPS,\n      channels: newChannels,\n      type: imageLayerMeta[index]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n    };\n    const newLayers = [...rasterLayers, newLayer];\n    setRasterLayers(newLayers);\n  }, [imageLayerLoaders, imageLayerMeta, rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerChange = useCallback((newLayer, i) => {\n    const newLayers = [...rasterLayers];\n    newLayers[i] = newLayer;\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerRemove = useCallback((i) => {\n    const newLayers = [...rasterLayers];\n    newLayers.splice(i, 1);\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const hasNoBitmask = (\n    imageLayerMeta.length ? imageLayerMeta : [{ metadata: { isBitmask: true } }]\n  ).every(l => !l?.metadata?.isBitmask);\n  // Only want to show vector cells controller if there is no bitmask\n  const canShowCellVecmask = hasNoBitmask;\n  const layerIs3DIndex = rasterLayers?.findIndex && rasterLayers.findIndex(layer => layer.use3d);\n  return (\n    <LayerControllerMemoized\n      ref={layerControllerRef}\n      title={title}\n      removeGridComponent={removeGridComponent}\n      theme={theme}\n      isReady={isReady}\n      moleculesLayer={moleculesLayer}\n      dataset={dataset}\n      setMoleculesLayer={setMoleculesLayer}\n      cellsLayer={cellsLayer}\n      canShowCellVecmask={canShowCellVecmask}\n      setCellsLayer={setCellsLayer}\n      rasterLayers={rasterLayers}\n      imageLayerLoaders={imageLayerLoaders}\n      imageLayerMeta={imageLayerMeta}\n      rasterLayersCallbacks={rasterLayersCallbacks}\n      setRasterLayersCallbacks={setRasterLayersCallbacks}\n      areLoadingRasterChannnels={areLoadingRasterChannnels}\n      setAreLoadingRasterChannnels={setAreLoadingRasterChannnels}\n      handleRasterLayerChange={handleRasterLayerChange}\n      handleRasterLayerRemove={handleRasterLayerRemove}\n      disable3d={disable3d}\n      globalDisable3d={globalDisable3d}\n      layerIs3DIndex={layerIs3DIndex}\n      setZoom={setZoom}\n      setTargetX={setTargetX}\n      setTargetY={setTargetY}\n      setTargetZ={setTargetZ}\n      setRotationX={setRotationX}\n      setRotationOrbit={setRotationOrbit}\n      // Fall back to window for height and width.\n      componentHeight={componentHeight || windowHeight}\n      componentWidth={componentWidth || windowWidth}\n      spatialLayout={spatialLayout}\n      handleImageAdd={handleImageAdd}\n    />\n  );\n}\n\nexport default LayerControllerSubscriber;\n","import React, {\n  useMemo, useEffect, useRef, Suspense, useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport dynamicImportPolyfill from 'dynamic-import-polyfill';\nimport register from 'higlass-register';\nimport { ZarrMultivecDataFetcher } from 'higlass-zarr-datafetchers';\nimport packageJson from '../../../package.json';\nimport { createWarningComponent, asEsModule } from '../utils';\nimport { useGridItemSize } from '../hooks';\nimport {\n  useCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst PIXI_BUNDLE_VERSION = packageJson.dependencies['window-pixi'];\nconst HIGLASS_BUNDLE_VERSION = packageJson.dependencies.higlass;\nconst BUNDLE_FILE_EXT = process.env.NODE_ENV === 'development' ? 'js' : 'min.js';\nconst PIXI_BUNDLE_URL = `https://unpkg.com/window-pixi@${PIXI_BUNDLE_VERSION}/dist/pixi.${BUNDLE_FILE_EXT}`;\nconst HIGLASS_BUNDLE_URL = `https://unpkg.com/higlass@${HIGLASS_BUNDLE_VERSION}/dist/hglib.${BUNDLE_FILE_EXT}`;\n\n\n// Initialize the dynamic __import__() function.\ndynamicImportPolyfill.initialize();\n\n// Register the zarr-multivec plugin data fetcher.\n// References:\n// https://github.com/higlass/higlass-register\n// https://github.com/higlass/higlass-zarr-datafetchers\nregister(\n  { dataFetcher: ZarrMultivecDataFetcher, config: ZarrMultivecDataFetcher.config },\n  { pluginType: 'dataFetcher' },\n);\n\n// Lazy load the HiGlass React component,\n// using dynamic imports with absolute URLs.\nconst HiGlassComponent = React.lazy(() => {\n  if (!window.React) {\n    window.React = React;\n  }\n  if (!window.ReactDOM) {\n    window.ReactDOM = ReactDOM;\n  }\n  return new Promise((resolve) => {\n    const handleImportError = (e) => {\n      console.warn(e);\n      resolve(asEsModule(createWarningComponent({\n        title: 'Could not load HiGlass',\n        message: 'The HiGlass scripts could not be dynamically imported.',\n      })));\n    };\n      // eslint-disable-next-line no-undef\n    __import__(PIXI_BUNDLE_URL).then(() => {\n      // eslint-disable-next-line no-undef\n      __import__(HIGLASS_BUNDLE_URL).then(() => {\n        // React.lazy promise must return an ES module with the\n        // component as the default export.\n        resolve(asEsModule(window.hglib.HiGlassComponent));\n      }).catch(handleImportError);\n    }).catch(handleImportError);\n  });\n});\n\n// Use an arbitrary size for normalization of the zoom level.\n// (800 means 800 px width for the full genome)\nconst HG_SIZE = 800;\n\n/**\n   * A wrapper around HiGlass (http://higlass.io/).\n   * The HiGlassComponent react component is loaded lazily.\n   * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n   * to the HiGlassComponent viewConfig prop.\n   * @prop {object} hgOptions An optional HiGlass object to pass\n   * to the HiGlassComponent hgOptions prop.\n   * @prop {function} removeGridComponent A grid component removal handler\n   * to pass to the TitleInfo component.\n   * @prop {function} onReady A callback function to signal that the component is ready.\n   */\nexport default function HiGlassLazy(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig: hgViewConfigProp,\n    hgOptions: hgOptionsProp,\n    genomeSize,\n    height,\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    genomicZoomX,\n    genomicZoomY,\n    genomicTargetX,\n    genomicTargetY,\n  }, {\n    setGenomicZoomX,\n    setGenomicZoomY,\n    setGenomicTargetX,\n    setGenomicTargetY,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.higlass, coordinationScopes);\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, computedHeight, containerRef] = useGridItemSize();\n  const [hgInstance, setHgInstance] = useState();\n  const isActiveRef = useRef();\n\n  const hgOptions = useMemo(() => ({\n    ...hgOptionsProp,\n    theme,\n  }), [hgOptionsProp, theme]);\n\n  const hgViewConfig = useMemo(() => {\n    // HiGlass needs the start and end absolute genome coordinates\n    const centerX = genomicTargetX;\n    const genomesPerUnitX = genomeSize / (2 ** genomicZoomX);\n    const unitX = width / HG_SIZE;\n    const initialXDomain = [\n      centerX - genomesPerUnitX * unitX / 2,\n      centerX + genomesPerUnitX * unitX / 2,\n    ];\n    const centerY = genomicTargetY;\n    const genomesPerUnitY = genomeSize / (2 ** genomicZoomY);\n    const unitY = height / HG_SIZE;\n    const initialYDomain = [\n      centerY - genomesPerUnitY * unitY / 2,\n      centerY + genomesPerUnitY * unitY / 2,\n    ];\n    return {\n      editable: false,\n      zoomFixed: false,\n      trackSourceServers: [\n        '//higlass.io/api/v1',\n      ],\n      exportViewUrl: '//higlass.io/api/v1/viewconfs',\n      views: [\n        {\n          uid: 'main',\n          ...hgViewConfigProp,\n          initialXDomain,\n          initialYDomain,\n        },\n      ],\n      zoomLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      locationLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      valueScaleLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n    };\n  }, [genomicTargetX, genomeSize, genomicZoomX, width, genomicTargetY,\n    genomicZoomY, height, hgViewConfigProp]);\n\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      isActiveRef.current = true;\n    };\n    const handleMouseLeave = () => {\n      isActiveRef.current = false;\n    };\n    const container = containerRef.current;\n    container.addEventListener('mouseenter', handleMouseEnter);\n    container.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      container.removeEventListener('mouseenter', handleMouseEnter);\n      container.removeEventListener('mouseenter', handleMouseLeave);\n    };\n  }, [containerRef]);\n\n\n  useEffect(() => {\n    if (!hgInstance) {\n      return () => {};\n    }\n    hgInstance.api.on('viewConfig', (viewConfigString) => {\n      // Only set if the user mouse is over this component (\"is active\").\n      // Otherwise, this could be an initial on viewConfig change callback from a sibling,\n      // which will cause an infinite loop.\n      if (!isActiveRef.current) {\n        return;\n      }\n      const viewConfig = JSON.parse(viewConfigString);\n      const xDomain = viewConfig.views[0].initialXDomain;\n      const yDomain = viewConfig.views[0].initialYDomain;\n\n      const nextGenomicZoomX = Math.log2(\n        genomeSize / ((xDomain[1] - xDomain[0]) * (HG_SIZE / width)),\n      );\n      const nextGenomicZoomY = Math.log2(\n        genomeSize / ((yDomain[1] - yDomain[0]) * (HG_SIZE / height)),\n      );\n      const nextGenomicTargetX = xDomain[0] + (xDomain[1] - xDomain[0]) / 2;\n      const nextGenomicTargetY = yDomain[0] + (yDomain[1] - yDomain[0]) / 2;\n      setGenomicZoomX(nextGenomicZoomX);\n      setGenomicZoomY(nextGenomicZoomY);\n      setGenomicTargetX(nextGenomicTargetX);\n      setGenomicTargetY(nextGenomicTargetY);\n    });\n    return () => hgInstance.api.off('viewConfig');\n  }, [hgInstance, genomeSize, width, height, setGenomicZoomX, setGenomicZoomY,\n    setGenomicTargetX, setGenomicTargetY]);\n\n  return (\n    <div className=\"higlass-wrapper-parent\">\n      <div className=\"higlass-wrapper\" ref={containerRef} style={{ height: `${height}px` }}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <HiGlassComponent\n            ref={setHgInstance}\n            zoomFixed={false}\n            viewConfig={hgViewConfig}\n            options={hgOptions}\n          />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nHiGlassLazy.defaultProps = {\n  hgOptions: {\n    bounded: true,\n    pixelPreciseMarginPadding: true,\n    containerPaddingX: 0,\n    containerPaddingY: 0,\n    sizeMode: 'default',\n  },\n  genomeSize: 3100000000,\n};\n","import React from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useReady, useUrls, useGridItemSize } from '../hooks';\nimport HiGlassLazy from './HiGlassLazy';\n\nconst HIGLASS_DATA_TYPES = [];\n\n/**\n * A wrapper around HiGlass (http://higlass.io/).\n * The HiGlassComponent react component is loaded lazily.\n * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n * to the HiGlassComponent viewConfig prop.\n * @prop {object} hgOptions An optional HiGlass object to pass\n * to the HiGlassComponent hgOptions prop.\n * @prop {function} removeGridComponent A grid component removal handler\n * to pass to the TitleInfo component.\n * @prop {function} onReady A callback function to signal that the component is ready.\n */\nexport default function HiGlassSubscriber(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig,\n    removeGridComponent,\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, height, containerRef] = useGridItemSize();\n\n  // eslint-disable-next-line no-unused-vars\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    HIGLASS_DATA_TYPES,\n  );\n  // eslint-disable-next-line no-unused-vars\n  const [urls, addUrl, resetUrls] = useUrls();\n\n  return (\n    <div className=\"higlass-title-wrapper\">\n      <TitleInfo\n        title=\"HiGlass\"\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n        urls={urls}\n      >\n        <div className=\"higlass-lazy-wrapper\" ref={containerRef}>\n          <HiGlassLazy\n            coordinationScopes={coordinationScopes}\n            theme={theme}\n            hgViewConfig={hgViewConfig}\n            height={height}\n          />\n        </div>\n      </TitleInfo>\n    </div>\n  );\n}\n","import React, { Suspense, useMemo } from 'react';\nimport { Handler } from 'vega-tooltip';\nimport ReactVega from './ReactVega';\n\n// TODO: React.lazy is not working with Vitessce in the portal-ui.\n// For now, we can work around this by not using React.lazy,\n// but for performance benefits that come with lazy-loading\n// we should eventually try to resolve this issue.\n// const ReactVega = React.lazy(() => import('./ReactVega'));\n\nexport const DATASET_NAME = 'table';\n\nfunction isVega(spec) {\n  return spec.$schema === 'https://vega.github.io/schema/vega/v5.json';\n}\n\n/**\n * A wrapper around the react-vega Vega component.\n * @param {object} props\n * @param {object} spec A vega or vega-lite spec.\n * @param {object[]} data The plot data as an array of objects.\n * @param {object} signalListeners Vega signal listeners. Optional.\n */\nexport default function VegaPlot(props) {\n  const {\n    spec: partialSpec,\n    data,\n    signalListeners,\n  } = props;\n\n  const spec = {\n    ...partialSpec,\n    data: (isVega(partialSpec)\n      ? [\n        { name: DATASET_NAME },\n        ...partialSpec.data,\n      ]\n      : { name: DATASET_NAME }\n    ),\n  };\n\n  const vegaComponent = useMemo(() => (\n    <ReactVega\n      spec={spec}\n      data={{\n        [DATASET_NAME]: data,\n      }}\n      signalListeners={signalListeners}\n      tooltip={new Handler().call}\n      renderer=\"canvas\"\n      scaleFactor={3}\n    />\n  ), [spec, data, signalListeners]);\n\n  return (\n    spec && data && data.length > 0 ? (\n      <Suspense fallback={<div>Loading...</div>}>\n        {vegaComponent}\n      </Suspense>\n    ) : null\n  );\n}\n","/**\n * Vega-Lite themes that can be passed to the `config` property\n * of the vega-lite spec.\n */\nexport const VEGA_THEMES = {\n  dark: {\n    // The vega-themes dark theme.\n    // Reference: https://github.com/vega/vega-themes/blob/master/src/theme-dark.ts\n    background: null,\n    title: { color: '#fff' },\n    style: {\n      'guide-label': {\n        fill: '#fff',\n      },\n      'guide-title': {\n        fill: '#fff',\n      },\n    },\n    axis: {\n      domainColor: '#fff',\n      gridColor: '#888',\n      tickColor: '#fff',\n    },\n  },\n  light: {\n    // The default vega theme.\n    background: null,\n  },\n};\n","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\nimport { colorArrayToString } from './utils';\n\n/**\n * Cell set sizes displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {object[]} props.data The set size data, an array\n * of objects with properties `name`, `key`, `color`, and `size`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 120.\n * @param {number} props.keyLength The length of the `key` property of\n * each data point. Assumes all key strings have the same length.\n * By default, 36.\n */\nexport default function CellSetSizesPlot(props) {\n  const {\n    data: rawData,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 120,\n    keyLength = 36,\n  } = props;\n\n  // Add a property `keyName` which concatenates the key and the name,\n  // which is both unique and can easily be converted\n  // back to the name by taking a substring.\n  // Add a property `colorString` which contains the `[r, g, b]` color\n  // after converting to a color hex string.\n  const data = rawData.map(d => ({\n    ...d,\n    keyName: d.key + d.name,\n    colorString: colorArrayToString(d.color),\n  }));\n\n  // Manually set the color scale so that Vega-Lite does\n  // not choose the colors automatically.\n  const colors = {\n    domain: data.map(d => d.key),\n    range: data.map(d => d.colorString),\n  };\n\n  // Get an array of keys for sorting purposes.\n  const keys = data.map(d => d.keyName);\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'keyName',\n        type: 'nominal',\n        axis: { labelExpr: `substring(datum.label, ${keyLength})` },\n        title: 'Cell Set',\n        sort: keys,\n      },\n      y: {\n        field: 'size',\n        type: 'quantitative',\n        title: 'Cell Set Size',\n      },\n      color: {\n        field: 'key',\n        type: 'nominal',\n        scale: colors,\n        legend: null,\n      },\n      tooltip: {\n        field: 'size',\n        type: 'quantitative',\n      },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n","import React, { useMemo, useEffect } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { mergeCellSets } from '../utils';\nimport { useCellSetsData } from '../data-hooks';\nimport { treeToSetSizesBySetNames } from './cell-set-utils';\nimport CellSetSizesPlot from './CellSetSizesPlot';\n\nconst CELL_SET_SIZES_DATA_TYPES = ['cell-sets'];\n\n/**\n * A subscriber component for `CellSetSizePlot`,\n * which listens for cell sets data updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {function} props.onReady The function to call when the subscriptions\n * have been made.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {string} props.title The component title.\n */\nexport default function CellSetSizesPlotSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Cell Set Sizes',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n  }, {\n    setCellSetSelection,\n    setCellSetColor,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSetSizes, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    CELL_SET_SIZES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // From the cell sets hierarchy and the list of selected cell sets,\n  // generate the array of set sizes data points for the bar plot.\n  const data = useMemo(() => (mergedCellSets && cellSetSelection && cellSetColor\n    ? treeToSetSizesBySetNames(mergedCellSets, cellSetSelection, cellSetColor)\n    : []\n  ), [mergedCellSets, cellSetSelection, cellSetColor]);\n\n  return (\n    <TitleInfo\n      title={title}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        <CellSetSizesPlot\n          data={data}\n          theme={theme}\n          width={width}\n          height={height}\n        />\n      </div>\n    </TitleInfo>\n  );\n}\n","import React, {\n  useMemo, useEffect,\n} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { sum } from 'd3-array';\nimport TitleInfo from '../TitleInfo';\nimport { useReady, useUrls, useGridItemSize } from '../hooks';\nimport {\n  useCoordination, useLoaders,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useGenomicProfilesData } from '../data-hooks';\nimport HiGlassLazy from './HiGlassLazy';\n\nconst GENOMIC_PROFILES_DATA_TYPES = ['genomic-profiles'];\n\nconst REFERENCE_TILESETS = {\n  hg38: {\n    chromosomes: 'NyITQvZsS_mOFNlz5C2LJg',\n    genes: 'P0PLbQMwTYGy-5uPIQid7A',\n  },\n  hg19: {\n    chromosomes: 'N12wVGG9SPiTkk03yUayUw',\n    genes: 'OHJakQICQD6gTD7skx4EWA',\n  },\n  mm9: {\n    chromosomes: 'WAVhNHYxQVueq6KulwgWiQ',\n    genes: 'GUm5aBiLRCyz2PsBea7Yzg',\n  },\n  mm10: {\n    chromosomes: 'EtrWT0VtScixmsmwFSd7zg',\n    genes: 'QDutvmyiSrec5nX4pA5WGQ',\n  },\n};\n\n/**\n * A component for visualization of genomic profiles\n * with genome-wide bar plots.\n * @param {object} props The component props.\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.profileTrackUidKey The key in the genomic profiles row_info that identifies\n * each track. By default, 'path'.\n * @param {string} props.profileTrackNameKey The key in the genomic profiles row_info that\n * gives a name for each track. By default, null. When null is provided, uses the\n * profileTrackUidKey for both UID and name. If UID values are path arrays,\n * they will be converted to name strings.\n * @param {string} props.higlassServer The URL for the higlass server used to retreive\n * reference tilesets for the chromosome and gene annotations.\n * @param {string} props.assembly The genome assembly to use for the reference\n * tilesets for the chromosome and gene annotations.\n * @param {string} props.title The title of the component.\n */\nexport default function GenomicProfilesSubscriber(props) {\n  const {\n    coordinationScopes,\n    theme,\n    removeGridComponent,\n    profileTrackUidKey = 'path',\n    profileTrackNameKey = null,\n    higlassServer = 'https://higlass.io/api/v1',\n    assembly = 'hg38',\n    title = 'Genomic Profiles',\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, height, containerRef] = useGridItemSize();\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetColor,\n    cellSetSelection,\n  }] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.genomicProfiles,\n    coordinationScopes,\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    GENOMIC_PROFILES_DATA_TYPES,\n  );\n    // eslint-disable-next-line no-unused-vars\n  const [urls, addUrl, resetUrls] = useUrls();\n\n  const [genomicProfilesAttrs] = useGenomicProfilesData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n\n  const hgViewConfig = useMemo(() => {\n    if (!genomicProfilesAttrs || urls.length !== 1) {\n      return null;\n    }\n    // Get the URL to the data file from the downloadable URLs array.\n    const { url } = urls[0];\n\n    // Set up the colors to use in the HiGlass view config based on the current theme.\n    const foregroundColor = (theme === 'dark' ? '#C0C0C0' : '#000000');\n    const backgroundColor = (theme === 'dark' ? '#000000' : '#f1f1f1');\n    const dimColor = (theme === 'dark' ? 'dimgray' : 'silver');\n\n    // Define the \"reference tracks\" for chromosome labels and gene annotations.\n    const referenceTracks = [\n      {\n        type: 'horizontal-chromosome-labels',\n        server: higlassServer,\n        tilesetUid: REFERENCE_TILESETS[assembly].chromosomes,\n        uid: 'chromosome-labels',\n        options: {\n          color: foregroundColor,\n          fontSize: 12,\n          fontIsLeftAligned: false,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n        },\n        height: 30,\n      },\n      {\n        type: 'horizontal-gene-annotations',\n        server: higlassServer,\n        tilesetUid: REFERENCE_TILESETS[assembly].genes,\n        uid: 'gene-annotations',\n        options: {\n          name: 'Gene Annotations (hg38)',\n          fontSize: 10,\n          labelPosition: 'hidden',\n          labelLeftMargin: 0,\n          labelRightMargin: 0,\n          labelTopMargin: 0,\n          labelBottomMargin: 0,\n          minHeight: 24,\n          geneAnnotationHeight: 16,\n          geneLabelPosition: 'outside',\n          geneStrandSpacing: 4,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n          plusStrandColor: foregroundColor,\n          minusStrandColor: foregroundColor,\n          labelColor: 'black',\n          labelBackgroundColor: backgroundColor,\n          trackBorderWidth: 0,\n          trackBorderColor: 'black',\n        },\n        height: 70,\n      },\n    ];\n    // Determine the heights of each profile track by subtracting the\n    // reference track heights from the component height, then\n    // dividing by the number of profiles.\n    const referenceTracksHeightSum = sum(referenceTracks.map(t => t.height));\n    const profileTracksHeightSum = height - referenceTracksHeightSum - 10;\n    const profileTrackHeight = profileTracksHeightSum / genomicProfilesAttrs.row_infos.length;\n    const profileTracks = genomicProfilesAttrs.row_infos.map((rowInfo, i) => {\n      // Get the uid for the HiGlass track.\n      const trackUid = rowInfo[profileTrackUidKey];\n      // When profiles correspond to cell sets, the profile UID will be the cell set path array.\n      const isPath = Array.isArray(trackUid);\n      // Get the name for the HiGlass track: try the name key first,\n      // then try the tail of the path, and otherwise the track UID.\n      // eslint-disable-next-line no-nested-ternary\n      const trackName = profileTrackNameKey\n        ? rowInfo[profileTrackNameKey]\n        : (isPath ? trackUid[trackUid.length - 1] : trackUid);\n      // If the uid is a path, then try to get the corresponding cell set's color,\n      // if it is currently selected.\n      const setInSelection = isPath ? cellSetSelection?.find(s => isEqual(s, trackUid)) : false;\n      const setColor = isPath ? cellSetColor?.find(s => isEqual(s.path, trackUid))?.color : null;\n      // Get the track UID as a string before passing to HiGlass.\n      const trackUidString = isPath ? trackUid.join('__') : trackUid;\n      // Create the HiGlass track definition for this profile.\n      const track = {\n        type: 'horizontal-bar',\n        uid: `bar-track-${trackUidString}`,\n        data: {\n          type: 'zarr-multivec',\n          url,\n          row: i,\n        },\n        options: {\n          name: trackName,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n          labelColor: (theme === 'dark' ? 'white' : 'black'),\n          labelBackgroundColor: (theme === 'dark' ? 'black' : 'white'),\n          labelShowAssembly: false,\n        },\n        height: profileTrackHeight,\n      };\n      // Set the track color if it is available.\n      if (setColor && setInSelection) {\n        const c = setColor;\n        track.options.barFillColor = `rgb(${c[0]},${c[1]},${c[2]})`;\n      } else {\n        track.options.barFillColor = dimColor;\n      }\n      return track;\n    });\n\n    // Create the higlass view.\n    // The HiGlassLazy component will fill in the fields 'uid',\n    // 'initialXDomain', and 'initialYDomain'.\n    const hgView = {\n      tracks: {\n        top: [\n          ...referenceTracks,\n          ...profileTracks,\n        ],\n        left: [],\n        center: [],\n        right: [],\n        bottom: [],\n        whole: [],\n        gallery: [],\n      },\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n        static: false,\n      },\n    };\n    return hgView;\n  }, [genomicProfilesAttrs, urls, theme, height, profileTrackUidKey,\n    profileTrackNameKey, cellSetSelection, cellSetColor,\n    higlassServer, assembly]);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return (\n    <div className=\"higlass-title-wrapper\">\n      <TitleInfo\n        title={title}\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n        urls={urls}\n      >\n        <div className=\"higlass-lazy-wrapper\" ref={containerRef}>\n          {hgViewConfig ? (\n            <HiGlassLazy\n              coordinationScopes={coordinationScopes}\n              theme={theme}\n              hgViewConfig={hgViewConfig}\n              height={height}\n            />\n          ) : null}\n        </div>\n      </TitleInfo>\n    </div>\n  );\n}\n","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {string[]} props.geneSelection The list of genes\n * currently selected.\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value` and `gene`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 50.\n */\nexport default function ExpressionHistogram(props) {\n  const {\n    geneSelection,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 50,\n  } = props;\n\n  const xTitle = geneSelection && geneSelection.length >= 1\n    ? 'Normalized Expression Value'\n    : 'Total Normalized Transcript Count';\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'value',\n        type: 'quantitative',\n        bin: { maxbins: 50 },\n        title: xTitle,\n      },\n      y: {\n        type: 'quantitative',\n        aggregate: 'count',\n        title: 'Number of Cells',\n      },\n      color: { value: 'gray' },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n","import React, { useMemo, useEffect } from 'react';\nimport { sum } from 'd3-array';\n\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { useExpressionMatrixData, useGeneSelection } from '../data-hooks';\nimport ExpressionHistogram from './ExpressionHistogram';\n\nconst EXPRESSION_HISTOGRAM_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for `ExpressionHistogram`,\n * which listens for gene selection updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {object} props.coordinationScopes An object mapping coordination\n * types to coordination scopes.\n * @param {string} props.theme The name of the current Vitessce theme.\n */\nexport default function ExpressionHistogramSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.expressionHistogram, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    EXPRESSION_HISTOGRAM_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [expressionMatrix] = useExpressionMatrixData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  // Get data from loaders using the data hooks.\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n\n  const firstGeneSelected = geneSelection && geneSelection.length >= 1\n    ? geneSelection[0]\n    : null;\n\n  // From the expression matrix and the list of selected genes,\n  // generate the array of data points for the histogram.\n  const data = useMemo(() => {\n    if (firstGeneSelected && expressionMatrix && expressionData) {\n      // Create new cellColors map based on the selected gene.\n      return Array.from(expressionData[0]).map((_, index) => {\n        const value = expressionData[0][index];\n        const normValue = value * 100 / 255;\n        return { value: normValue, gene: firstGeneSelected };\n      });\n    }\n    if (expressionMatrix) {\n      const numGenes = expressionMatrix.cols.length;\n      return expressionMatrix.rows.map((cellId, cellIndex) => {\n        const values = expressionMatrix.matrix\n          .subarray(cellIndex * numGenes, (cellIndex + 1) * numGenes);\n        const sumValue = sum(values) * 100 / 255;\n        return { value: sumValue, gene: null };\n      });\n    }\n    return null;\n  }, [expressionMatrix, firstGeneSelected, expressionData]);\n\n  return (\n    <TitleInfo\n      title={`Expression Histogram${(firstGeneSelected ? ` (${firstGeneSelected})` : '')}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        <ExpressionHistogram\n          geneSelection={geneSelection}\n          data={data}\n          theme={theme}\n          width={width}\n          height={height}\n        />\n      </div>\n    </TitleInfo>\n  );\n}\n","import { useMemo } from 'react';\nimport { mergeCellSets } from '../utils';\nimport { treeToObjectsBySetNames, treeToSetSizesBySetNames } from './cell-set-utils';\n\n/**\n * Get expression data for the cells\n * in the selected cell sets.\n * @param {object} expressionMatrix\n * @param {string[]} expressionMatrix.rows Cell IDs.\n * @param {string[]} expressionMatrix.cols Gene names.\n * @param {Uint8Array} expressionMatrix.matrix The\n * flattened expression matrix as a typed array.\n * @param {object} cellSets The cell sets from the dataset.\n * @param {object} additionalCellSets The user-defined cell sets\n * from the coordination space.\n * @param {array} geneSelection Array of selected genes.\n * @param {array} cellSetSelection Array of selected cell set paths.\n * @param {object[]} cellSetColor Array of objects with properties\n * `path` and `color`.\n */\nexport function useExpressionByCellSet(\n  expressionData, expressionDataAttrs, cellSets, additionalCellSets,\n  geneSelection, cellSetSelection, cellSetColor, useGeneExpressionTransform,\n) {\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // From the expression matrix and the list of selected genes / cell sets,\n  // generate the array of data points for the plot.\n  const [expressionArr, expressionMax] = useMemo(() => {\n    if (mergedCellSets && cellSetSelection\n        && geneSelection && geneSelection.length >= 1\n        && expressionData\n    ) {\n      const cellObjects = treeToObjectsBySetNames(mergedCellSets, cellSetSelection, cellSetColor);\n\n      const firstGeneSelected = geneSelection[0];\n      // Create new cellColors map based on the selected gene.\n      let exprMax = -Infinity;\n      const cellIndices = {};\n      for (let i = 0; i < expressionDataAttrs.rows.length; i += 1) {\n        cellIndices[expressionDataAttrs.rows[i]] = i;\n      }\n      const exprValues = cellObjects.map((cell) => {\n        const cellIndex = cellIndices[cell.obsId];\n        const value = expressionData[0][cellIndex];\n        const normValue = value * 100 / 255;\n        const transformedValue = useGeneExpressionTransform ? Math.log(1 + normValue) : normValue;\n        exprMax = Math.max(transformedValue, exprMax);\n        return { value: transformedValue, gene: firstGeneSelected, set: cell.name };\n      });\n      return [exprValues, exprMax];\n    }\n    return [null, null];\n  }, [expressionData, expressionDataAttrs, geneSelection,\n    mergedCellSets, cellSetSelection, cellSetColor, useGeneExpressionTransform]);\n\n  // From the cell sets hierarchy and the list of selected cell sets,\n  // generate the array of set sizes data points for the bar plot.\n  const setArr = useMemo(() => (mergedCellSets && cellSetSelection && cellSetColor\n    ? treeToSetSizesBySetNames(mergedCellSets, cellSetSelection, cellSetColor)\n    : []\n  ), [mergedCellSets, cellSetSelection, cellSetColor]);\n\n  return [expressionArr, setArr, expressionMax];\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\n\nexport default function CellSetExpressionPlotOptions(props) {\n  const { toggleGeneExpressionTransform, useGeneExpressionTransform } = props;\n  const classes = useStyles();\n\n  function handleGeneExpressionTransformChange() {\n    toggleGeneExpressionTransform();\n  }\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell}>Log Transform</TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={Boolean(useGeneExpressionTransform)}\n            onChange={handleGeneExpressionTransformChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES, DATASET_NAME } from '../vega';\nimport { colorArrayToString } from './utils';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value`, `gene`, and `set`.\n * @param {number} props.domainMax The maximum gene expression value.\n * @param {object[]} props.colors An object for each\n * cell set, with properties `name` and `color`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * Default is allowing the component to automatically determine the margin.\n * @param {boolean} props.useGeneExpressionTransform Boolean representing\n * whether or not the expression values are log-transformed.\n */\nexport default function CellSetExpressionPlot(props) {\n  const {\n    domainMax = 100,\n    colors,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom,\n    useGeneExpressionTransform,\n  } = props;\n  // Get the max characters in an axis label for autsizing the bottom margin.\n  const maxCharactersForLabel = data.reduce((acc, val) => {\n    // eslint-disable-next-line no-param-reassign\n    acc = acc === undefined || val.set.length > acc ? val.set.length : acc;\n    return acc;\n  }, 0);\n  // Use a square-root term because the angle of the labels is 45 degrees (see below)\n  // so the perpendicular distance to the bottom of the labels is proportional to the\n  // square root of the length of the labels along the imaginary hypotenuse.\n  // 30 is an estimate of the pixel size of a given character and seems to work well.\n  const autoMarginBottom = marginBottom\n    || 30 + Math.sqrt(maxCharactersForLabel / 2) * 30;\n  // Manually set the color scale so that Vega-Lite does\n  // not choose the colors automatically.\n  const colorScale = {\n    domain: colors.map(d => d.name),\n    range: colors.map(d => colorArrayToString(d.color)),\n  };\n\n  const plotWidth = clamp(width - marginRight, 10, Infinity);\n  const plotHeight = clamp(height - autoMarginBottom, 10, Infinity);\n\n  const numBands = colors.length;\n  const bandWidth = plotWidth / numBands;\n\n  const rectColor = (theme === 'dark' ? 'white' : 'black');\n\n  const spec = {\n    $schema: 'https://vega.github.io/schema/vega/v5.json',\n    description: 'A violin plot showing distributions of expression levels for selected cell sets.',\n    width: plotWidth,\n    height: plotHeight,\n    config: {\n      ...VEGA_THEMES[theme],\n      axisBand: {\n        bandPosition: 1,\n        tickExtra: true,\n        tickOffset: 0,\n      },\n    },\n\n    signals: [\n      { name: 'bandWidth', value: bandWidth },\n      { name: 'width', value: plotWidth },\n      { name: 'height', value: plotHeight },\n      { name: 'trim', value: true },\n    ],\n\n    data: [\n      {\n        name: 'density',\n        source: DATASET_NAME,\n        transform: [\n          {\n            type: 'kde',\n            field: 'value',\n            groupby: ['set'],\n            bandwidth: 0,\n            extent: [0, domainMax],\n          },\n        ],\n      },\n      {\n        name: 'stats',\n        source: DATASET_NAME,\n        transform: [\n          {\n            type: 'aggregate',\n            groupby: ['set'],\n            fields: ['value', 'value', 'value'],\n            ops: ['q1', 'median', 'q3'],\n            as: ['q1', 'median', 'q3'],\n          },\n        ],\n      },\n    ],\n\n    scales: [\n      {\n        name: 'layout',\n        type: 'band',\n        range: 'width',\n        domain: { data: DATASET_NAME, field: 'set' },\n      },\n      {\n        name: 'yscale',\n        type: 'linear',\n        range: 'height',\n        domain: [0, domainMax],\n      },\n      {\n        name: 'wscale',\n        type: 'linear',\n        range: [0, { signal: 'bandWidth' }],\n        domain: { data: 'density', field: 'density' },\n      },\n      {\n        name: 'wscaleReversed',\n        type: 'linear',\n        reverse: true,\n        range: [0, { signal: 'bandWidth' }],\n        domain: { data: 'density', field: 'density' },\n      },\n      {\n        name: 'color',\n        type: 'ordinal',\n        ...colorScale,\n      },\n    ],\n\n    axes: [\n      {\n        orient: 'left',\n        scale: 'yscale',\n        zindex: 1,\n        // title: useGeneExpressionTransform\n        //   ? 'Log-Normalized Expression Values' : 'Normalized Expression Values',\n        title: useGeneExpressionTransform\n          ? ['Log-Transformed', 'Normalized Expression Values']\n          : 'Normalized Expression Values',\n      },\n      {\n        orient: 'bottom',\n        scale: 'layout',\n        tickCount: 5,\n        zindex: 1,\n        title: 'Cell Set',\n        labelAngle: -45,\n        labelAlign: 'right',\n      },\n    ],\n\n    marks: [\n      {\n        type: 'group',\n        from: {\n          facet: {\n            data: 'density',\n            name: 'violin',\n            groupby: 'set',\n          },\n        },\n\n        encode: {\n          enter: {\n            xc: { scale: 'layout', field: 'set', band: 0.5 },\n            width: { signal: 'bandWidth' },\n            height: { signal: 'height' },\n          },\n        },\n\n        data: [\n          {\n            name: 'summary',\n            source: 'stats',\n            transform: [\n              {\n                type: 'filter',\n                expr: 'datum.set === parent.set',\n              },\n            ],\n          },\n        ],\n\n        marks: [\n          {\n            type: 'area',\n            orient: 'vertical',\n            from: { data: 'violin' },\n            encode: {\n              enter: {\n                fill: { scale: 'color', field: { parent: 'set' } },\n              },\n              update: {\n                width: { scale: 'wscale', field: 'density' },\n                xc: { signal: 'bandWidth / 2' },\n                y2: { scale: 'yscale', field: 'value' },\n                y: { scale: 'yscale', value: 0 },\n              },\n            },\n          },\n          {\n            type: 'area',\n            orient: 'vertical',\n            from: { data: 'violin' },\n            encode: {\n              enter: {\n                fill: { scale: 'color', field: { parent: 'set' } },\n              },\n              update: {\n                width: { scale: 'wscaleReversed', field: 'density' },\n                xc: { signal: 'bandWidth' },\n                y2: { scale: 'yscale', field: 'value' },\n                y: { scale: 'yscale', value: 0 },\n              },\n            },\n          },\n          {\n            type: 'rect',\n            from: { data: 'summary' },\n            encode: {\n              enter: {\n                fill: { value: rectColor },\n                width: { value: 2 },\n              },\n              update: {\n                y: { scale: 'yscale', field: 'q1' },\n                y2: { scale: 'yscale', field: 'q3' },\n                xc: { signal: 'bandWidth / 2' },\n              },\n            },\n          },\n          {\n            type: 'rect',\n            from: { data: 'summary' },\n            encode: {\n              enter: {\n                fill: { value: rectColor },\n                height: { value: 2 },\n                width: { value: 8 },\n              },\n              update: {\n                y: { scale: 'yscale', field: 'median' },\n                xc: { signal: 'bandWidth / 2' },\n              },\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n","import React, { useEffect, useReducer } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { useGeneSelection, useExpressionAttrs, useCellSetsData } from '../data-hooks';\nimport { useExpressionByCellSet } from './hooks';\nimport CellSetExpressionPlotOptions from './CellSetExpressionPlotOptions';\n\nimport CellSetExpressionPlot from './CellSetExpressionPlot';\n\nconst CELL_SET_EXPRESSION_DATA_TYPES = ['cell-sets', 'expression-matrix'];\n\n/**\n * A subscriber component for `CellSetExpressionPlot`,\n * which listens for gene selection updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {object} props.coordinationScopes An object mapping coordination\n * types to coordination scopes.\n * @param {string} props.theme The name of the current Vitessce theme.\n */\nexport default function CellSetExpressionPlotSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n    geneExpressionTransform,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n  }, {\n    setGeneExpressionTransform,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSetExpression, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    CELL_SET_EXPRESSION_DATA_TYPES,\n  );\n\n  const [useGeneExpressionTransform, toggleGeneExpressionTransform] = useReducer((v) => {\n    const newValue = !v;\n    setGeneExpressionTransform(newValue ? 'log1p' : null);\n    return newValue;\n  }, geneExpressionTransform);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n\n  const [expressionArr, setArr, expressionMax] = useExpressionByCellSet(\n    expressionData, attrs, cellSets, additionalCellSets,\n    geneSelection, cellSetSelection, cellSetColor, useGeneExpressionTransform,\n  );\n\n  const firstGeneSelected = geneSelection && geneSelection.length >= 1\n    ? geneSelection[0]\n    : null;\n  return (\n    <TitleInfo\n      title={`Expression by Cell Set${(firstGeneSelected ? ` (${firstGeneSelected})` : '')}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n      options={(\n        <CellSetExpressionPlotOptions\n          useGeneExpressionTransform={useGeneExpressionTransform}\n          toggleGeneExpressionTransform={toggleGeneExpressionTransform}\n        />\n      )}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        {expressionArr ? (\n          <CellSetExpressionPlot\n            domainMax={expressionMax}\n            colors={setArr}\n            data={expressionArr}\n            theme={theme}\n            width={width}\n            height={height}\n            useGeneExpressionTransform={useGeneExpressionTransform}\n          />\n        ) : (\n          <span>Select a gene.</span>\n        )}\n      </div>\n    </TitleInfo>\n  );\n}\n","import DescriptionSubscriber from '../components/description/DescriptionSubscriber';\nimport StatusSubscriber from '../components/status/StatusSubscriber';\nimport GenesSubscriber from '../components/genes/GenesSubscriber';\nimport CellSetsManagerSubscriber from '../components/sets/CellSetsManagerSubscriber';\nimport ScatterplotSubscriber from '../components/scatterplot/ScatterplotSubscriber';\nimport SpatialSubscriber from '../components/spatial/SpatialSubscriber';\nimport HeatmapSubscriber from '../components/heatmap/HeatmapSubscriber';\nimport LayerControllerSubscriber from '../components/layer-controller/LayerControllerSubscriber';\nimport HiGlassSubscriber from '../components/higlass/HiGlassSubscriber';\nimport CellSetSizesPlotSubscriber from '../components/sets/CellSetSizesPlotSubscriber';\nimport GenomicProfilesSubscriber from '../components/higlass/GenomicProfilesSubscriber';\nimport ExpressionHistogramSubscriber from '../components/genes/ExpressionHistogramSubscriber';\nimport CellSetExpressionPlotSubscriber from '../components/sets/CellSetExpressionPlotSubscriber';\n\nconst registry = {\n  description: DescriptionSubscriber,\n  status: StatusSubscriber,\n  genes: GenesSubscriber,\n  cellSets: CellSetsManagerSubscriber,\n  scatterplot: ScatterplotSubscriber,\n  spatial: SpatialSubscriber,\n  heatmap: HeatmapSubscriber,\n  layerController: LayerControllerSubscriber,\n  cellSetSizes: CellSetSizesPlotSubscriber,\n  expressionHistogram: ExpressionHistogramSubscriber,\n  genomicProfiles: GenomicProfilesSubscriber,\n  cellSetExpression: CellSetExpressionPlotSubscriber,\n  // The plain higlass component does not abstract away the HiGlass view config,\n  // so we probably want to avoid documenting it, only use it for development purposes.\n  higlass: HiGlassSubscriber,\n};\n\nexport function getComponent(name) {\n  const component = registry[name];\n  if (component === undefined) {\n    throw new Error(`Could not find definition for \"${name}\" in registry.`);\n  }\n  return registry[name];\n}\n","import React from 'react';\nimport { useCoordination, useWarning } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Status from './Status';\n\n/**\n * A subscriber component for the status component,\n * which renders hovered cell/gene/molecule information\n * as well as schema validation and data loading errors.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function StatusSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Status',\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    cellHighlight,\n    geneHighlight,\n    moleculeHighlight,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.status, coordinationScopes);\n\n  const warn = useWarning();\n\n  const infos = [\n    ...(cellHighlight\n      ? [`Hovered cell ${cellHighlight}`]\n      : []\n    ),\n    ...(geneHighlight\n      ? [`Hovered gene ${geneHighlight}`]\n      : []\n    ),\n    ...(moleculeHighlight\n      ? [`Hovered gene ${moleculeHighlight}`]\n      : []\n    ),\n  ];\n  const info = infos.join('; ');\n\n  return (\n    <TitleInfo\n      title={title}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      isReady\n    >\n      <Status warn={warn} info={info} />\n    </TitleInfo>\n  );\n}\n","/* eslint-disable no-plusplus */\nimport packageJson from '../../package.json';\nimport { getNextScope } from '../utils';\nimport {\n  COORDINATION_TYPES,\n  DEFAULT_COORDINATION_VALUES,\n  COMPONENT_COORDINATION_TYPES,\n  AUTO_INDEPENDENT_COORDINATION_TYPES,\n} from './state/coordination';\nimport { SCHEMA_HANDLERS } from './view-config-versions';\n\n/**\n * Get a list of all unique scope names for a\n * particular coordination type, which exist in\n * a particular view config.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @returns {string[]} Array of existing coordination scope names.\n */\nexport function getExistingScopesForCoordinationType(config, coordinationType) {\n  const spaceScopes = Object.keys(config?.coordinationSpace?.[coordinationType] || {});\n  const componentScopes = config.layout.map(c => c.coordinationScopes?.[coordinationType]);\n  return Array.from(new Set([...spaceScopes, ...componentScopes]));\n}\n\n/**\n * Give each component the same scope name for this coordination type.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @param {*} scopeValue The initial value for the coordination scope,\n * to set in the coordination space.\n * @returns {object} The new view config.\n */\nfunction coordinateComponentsTogether(config, coordinationType, scopeValue) {\n  const scopeName = getNextScope(getExistingScopesForCoordinationType(config, coordinationType));\n  const newConfig = {\n    ...config,\n    coordinationSpace: {\n      ...config.coordinationSpace,\n      [coordinationType]: {\n        ...config?.coordinationSpace?.[coordinationType],\n        // Add the new scope name and value to the coordination space.\n        [scopeName]: scopeValue,\n      },\n    },\n    layout: config.layout.map(component => ({\n      ...component,\n      coordinationScopes: {\n        ...component.coordinationScopes,\n        // Only set the coordination scope if this component uses this coordination type,\n        // and the component is missing a coordination scope for this coordination type.\n        ...((\n          COMPONENT_COORDINATION_TYPES[component.component].includes(coordinationType)\n          && !component.coordinationScopes?.[coordinationType]\n        ) ? {\n          // Only set the new scope name if the scope name\n          // for this component and coordination type is currently undefined.\n            [coordinationType]: scopeName,\n          } : {}),\n      },\n    })),\n  };\n  return newConfig;\n}\n\n/**\n * Give each component a different scope name for this coordination type.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @param {*} scopeValue The initial value for the coordination scope,\n * to set in the coordination space.\n * @returns {object} The new view config.\n */\nfunction coordinateComponentsIndependent(config, coordinationType, scopeValue) {\n  const newConfig = {\n    ...config,\n    layout: [...config.layout],\n  };\n  const newScopes = {};\n  newConfig.layout.forEach((component, i) => {\n    // Only set the coordination scope if this component uses this coordination type,\n    // and the component is missing a coordination scope for this coordination type.\n    if (COMPONENT_COORDINATION_TYPES[component.component].includes(coordinationType)\n      && !component.coordinationScopes?.[coordinationType]\n    ) {\n      const scopeName = getNextScope([\n        ...getExistingScopesForCoordinationType(config, coordinationType),\n        ...Object.keys(newScopes),\n      ]);\n      newScopes[scopeName] = scopeValue;\n      newConfig.layout[i] = {\n        ...component,\n        coordinationScopes: {\n          ...component.coordinationScopes,\n          [coordinationType]: scopeName,\n        },\n      };\n    }\n  });\n  newConfig.coordinationSpace = {\n    ...newConfig.coordinationSpace,\n    [coordinationType]: {\n      ...newConfig.coordinationSpace[coordinationType],\n      // Add the new scope name and value to the coordination space.\n      ...newScopes,\n    },\n  };\n  return newConfig;\n}\n\nfunction initializeAuto(config) {\n  let newConfig = config;\n  const { layout, datasets } = newConfig;\n\n  // For each coordination type, check whether it requires initialization.\n  Object.values(COORDINATION_TYPES).forEach((coordinationType) => {\n    // A coordination type requires coordination if at least one component is missing\n    // a (coordination type, coordination scope) tuple.\n    // Components may only use a subset of all coordination types.\n    const requiresCoordination = !layout\n      .every(c => (\n        !COMPONENT_COORDINATION_TYPES[c.component].includes(coordinationType)\n                || c.coordinationScopes?.[coordinationType]\n      ));\n    if (requiresCoordination) {\n      // Note that the default value may be undefined.\n      let defaultValue = DEFAULT_COORDINATION_VALUES[coordinationType];\n      // Check whether this is the special 'dataset' coordination type.\n      if (coordinationType === 'dataset' && datasets.length >= 1) {\n        // Use the first dataset ID as the default\n        // if there is at least one dataset.\n        defaultValue = datasets[0].uid;\n      }\n      // Use the list of \"independent\" coordination types\n      // to determine whether a particular coordination type\n      // should be initialized to\n      // a unique scope for every component (\"independent\")\n      // vs. the same scope for every component (\"together\").\n      if (AUTO_INDEPENDENT_COORDINATION_TYPES.includes(coordinationType)) {\n        newConfig = coordinateComponentsIndependent(newConfig, coordinationType, defaultValue);\n      } else {\n        newConfig = coordinateComponentsTogether(newConfig, coordinationType, defaultValue);\n      }\n    }\n  });\n\n  return newConfig;\n}\n\n\n/**\n * Initialize the view config:\n * - Fill in missing coordination objects with default values.\n * - Fill in missing component coordination scope mappings.\n *   based on the `initStrategy` specified in the view config.\n * Should be \"stable\": if run on the same view config twice, the return value the second\n * time should be identical to the return value the first time.\n * @param {object} config The view config prop.\n */\nexport function initialize(config) {\n  if (config.initStrategy === 'auto') {\n    return initializeAuto(config);\n  }\n  return config;\n}\n\nexport function upgradeAndValidate(oldConfig) {\n  // oldConfig object must have a `version` property.\n  let nextConfig = oldConfig;\n  let fromVersion;\n  let upgradeFunction; let\n    validateFunction;\n\n  do {\n    fromVersion = nextConfig.version;\n\n    if (!Object.keys(SCHEMA_HANDLERS).includes(fromVersion)) {\n      return [{\n        title: 'Config validation failed',\n        preformatted: 'Unknown config version.',\n      }, false];\n    }\n\n    [validateFunction, upgradeFunction] = SCHEMA_HANDLERS[fromVersion];\n\n    // Validate under the legacy schema before upgrading.\n    const validLegacy = validateFunction(nextConfig);\n    if (!validLegacy) {\n      const failureReason = JSON.stringify(validateFunction.errors, null, 2);\n      return [{\n        title: 'Config validation failed',\n        preformatted: failureReason,\n      }, false];\n    }\n\n    if (upgradeFunction) {\n      nextConfig = upgradeFunction(nextConfig);\n    }\n  } while (upgradeFunction);\n\n  // NOTE: Remove when a view config viewer/editor is available in UI.\n  console.groupCollapsed(`🚄 Vitessce (${packageJson.version}) view configuration`);\n  console.info(`data:,${JSON.stringify(nextConfig)}`);\n  console.info(JSON.stringify(nextConfig, null, 2));\n  console.groupEnd();\n\n  return [nextConfig, true];\n}\n","/* eslint-disable camelcase */\nimport React, { useEffect, useMemo } from 'react';\nimport {\n  ThemeProvider, StylesProvider,\n  createGenerateClassName,\n} from '@material-ui/core/styles';\nimport isEqual from 'lodash/isEqual';\nimport { muiTheme } from '../components/shared-mui/styles';\n\nimport VitessceGrid from './VitessceGrid';\nimport Warning from './Warning';\nimport CallbackPublisher from './CallbackPublisher';\nimport { getComponent } from './component-registry';\nimport { initialize, upgradeAndValidate } from './view-config-utils';\n\nconst generateClassName = createGenerateClassName({\n  disableGlobal: true,\n});\n\n/**\n * The Vitessce component.\n * @param {object} props\n * @param {object} props.config A Vitessce view config.\n * If the config is valid, the VitessceGrid will be rendered as a child.\n * If the config is invalid, a Warning will be rendered instead.\n * @param {number} props.rowHeight Row height for grid layout. Optional.\n * @param {number} props.height Total height for grid layout. Optional.\n * @param {string} props.theme The theme, used for styling as\n * light or dark. Optional. By default, \"dark\"\n * @param {function} props.onWarn A callback for warning messages. Optional.\n * @param {function} props.onConfigChange A callback for view config\n * updates. Optional.\n * @param {function} props.onLoaderChange A callback for loader\n * updates. Optional.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes. Use for debugging\n * purposes, as this may have a performance impact. By default, false.\n */\nexport default function Vitessce(props) {\n  const {\n    config,\n    rowHeight,\n    height,\n    theme,\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange = false,\n  } = props;\n\n  // Process the view config and memoize the result:\n  // - Validate.\n  // - Upgrade, if legacy schema.\n  // - Validate after upgrade, if legacy schema.\n  // - Initialize (based on initStrategy).\n  const [configOrWarning, success] = useMemo(() => {\n    // If the config value is undefined, show a warning message.\n    if (!config) {\n      return [{\n        title: 'No such dataset',\n        unformatted: 'The dataset configuration could not be found.',\n      }, false];\n    }\n    // If the view config is missing a version, show a warning message.\n    if (!config.version) {\n      return [{\n        title: 'Missing version',\n        unformatted: 'The dataset configuration is missing a version, preventing validation.',\n      }, false];\n    }\n    // Check if this is a \"legacy\" view config.\n    const [upgradedConfig, upgradeSuccess] = upgradeAndValidate(config);\n    if (upgradeSuccess) {\n      // Initialize the view config according to the initStrategy.\n      const initializedConfig = initialize(upgradedConfig);\n      return [initializedConfig, true];\n    }\n    return [upgradedConfig, false];\n  }, [config]);\n\n  // Emit the upgraded/initialized view config\n  // to onConfigChange if necessary.\n  useEffect(() => {\n    if (success && !isEqual(configOrWarning, config) && onConfigChange) {\n      onConfigChange(configOrWarning);\n    }\n  }, [success, config, configOrWarning, onConfigChange]);\n\n  return success ? (\n    <StylesProvider generateClassName={generateClassName}>\n      <ThemeProvider theme={muiTheme[theme]}>\n        <VitessceGrid\n          config={configOrWarning}\n          getComponent={getComponent}\n          rowHeight={rowHeight}\n          height={height}\n          theme={theme}\n        />\n        <CallbackPublisher\n          onWarn={onWarn}\n          onConfigChange={onConfigChange}\n          onLoaderChange={onLoaderChange}\n          validateOnConfigChange={validateOnConfigChange}\n        />\n      </ThemeProvider>\n    </StylesProvider>\n  ) : (\n    <Warning\n      theme={theme}\n      {...configOrWarning}\n    />\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { getConfig } from './api';\nimport Warning from './Warning';\nimport Vitessce from './Vitessce';\n\nimport '../css/index.scss';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css';\n\nfunction AwaitResponse(props) {\n  const {\n    response,\n    theme,\n  } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const responseRef = useRef();\n  useEffect(() => {\n    response.then((c) => {\n      responseRef.current = c;\n      setIsLoading(false);\n    });\n  }, [response]);\n  return (!isLoading ? React.createElement(responseRef.current)\n    : <Warning title=\"Loading...\" theme={theme} />);\n}\n\nfunction preformattedDetails(response) {\n  return `\n    ok: ${response.ok}\n    status: ${response.status}\n    statusText: ${response.statusText}\n    redirected: ${response.redirected}\n    type: ${response.type}\n    url: ${response.url}`; // TODO: headers\n}\n\n\nfunction checkResponse(response, theme) {\n  if (!response.ok) {\n    return Promise.resolve(\n      () => (\n        <Warning\n          title=\"Fetch response not OK\"\n          preformatted={preformattedDetails(response)}\n          theme={theme}\n        />\n      ),\n    );\n  }\n  return response.text().then((text) => {\n    try {\n      const url = window.location.href;\n      const base = url.split('?')[0];\n      const json = text.replaceAll('http://localhost/', base);\n      const config = JSON.parse(json);\n      return Promise.resolve(() => (\n        <Vitessce\n          config={config}\n          rowHeight={600}\n          theme={theme}\n        />\n      ));\n    } catch (e) {\n      return Promise.resolve(() => (\n        <Warning\n          title=\"Error parsing JSON\"\n          preformatted={preformattedDetails(response)}\n          unformatted={`${e.message}: ${text}`}\n          theme={theme}\n        />\n      ));\n    }\n  });\n}\n\n/**\n * Use the theme provided if it is valid, otherwise fall back to the 'dark' theme.\n * @param {string} theme A potentially invalid theme name.\n * @returns {string} A valid theme name.\n */\n// function validateTheme(theme) {\n//   return (['light', 'dark'].includes(theme) ? theme : 'dark');\n// }\n\n/**\n * Convenience function for creating the minimal Vitessce demo and demo listing\n * components based on the current URL parameters.\n * @param {object} params\n * @param {number|null} params.rowHeight The row height to pass to the Vitessce grid.\n * Optional. By default, null.\n * @param {boolean} showBetaHeader Should the header which links to the beta documentation\n * website be rendered? Optional. By default, false.\n * @returns A component, either <Welcome/> or <Vitessce/> depending on the URL params.\n */\nexport function createApp() {\n  // const { rowHeight = null, showBetaHeader = false } = params;\n  const urlParams = new URLSearchParams(window.location.search);\n  const datasetId = urlParams.get('dataset');\n  const theme = 'dark';\n\n  if (datasetId) {\n    const config = getConfig(datasetId);\n    return (\n      <Vitessce\n        config={config}\n        rowHeight={600}\n        theme={theme}\n        // eslint-disable-next-line no-console\n        // onConfigChange={(debug ? console.log : undefined)}\n        // validateOnConfigChange={debug}\n      />\n    );\n  }\n  // if (datasetUrl) {\n  const responsePromise = fetch('config.json')\n    .then(response => checkResponse(response, theme))\n    .catch(error => Promise.resolve(() => (\n      <Warning\n        title=\"Error fetching\"\n        unformatted={error.message}\n        theme={theme}\n      />\n    )));\n  return (\n    <AwaitResponse response={responsePromise} theme={theme} />\n  );\n}\n","import 'whatwg-fetch';\nimport ReactDOM from 'react-dom';\nimport { createApp } from '../app';\n\nfunction renderComponent(react, id) {\n  ReactDOM.render(react, document.getElementById(id));\n}\n\n// const urlParams = new URLSearchParams(window.location.search);\n// if (urlParams.has('small')) {\n//   renderComponent(createApp({ rowHeight: 100 }), 'small-app');\n// } else {\n// renderComponent(createApp({ showBetaHeader: true }), 'full-app');\n// }\nrenderComponent(createApp(), 'full-app');\n","module.exports = function() {\n  return require(\"!!/Users/guq/projects/vitessce/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){\\\"undefined\\\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&\\\"object\\\"===typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:t}),2&n&&\\\"string\\\"!=typeof t)for(var o in t)e.d(r,o,function(n){return t[n]}.bind(null,o));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\\\"a\\\",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p=\\\"./\\\",e(e.s=23)}([function(t,n){t.exports=function(t){var n=typeof t;return null!=t&&(\\\"object\\\"==n||\\\"function\\\"==n)}},function(t,n,e){var r=e(6),o=e(3);t.exports=function(t,n,e){return void 0===e&&(e=n,n=void 0),void 0!==e&&(e=(e=o(e))===e?e:0),void 0!==n&&(n=(n=o(n))===n?n:0),r(o(t),n,e)}},function(t,n,e){var r=e(14)();t.exports=r},function(t,n,e){var r=e(0),o=e(7),i=/^\\\\s+|\\\\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,c=/^0b[01]+$/i,f=/^0o[0-7]+$/i,l=parseInt;t.exports=function(t){if(\\\"number\\\"==typeof t)return t;if(o(t))return NaN;if(r(t)){var n=\\\"function\\\"==typeof t.valueOf?t.valueOf():t;t=r(n)?n+\\\"\\\":n}if(\\\"string\\\"!=typeof t)return 0===t?t:+t;t=t.replace(i,\\\"\\\");var e=c.test(t);return e||f.test(t)?l(t.slice(2),e?2:8):u.test(t)?NaN:+t}},function(t,n,e){var r=e(5),o=e(11),i=e(12),u=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?\\\"[object Undefined]\\\":\\\"[object Null]\\\":u&&u in Object(t)?o(t):i(t)}},function(t,n,e){var r=e(8).Symbol;t.exports=r},function(t,n){t.exports=function(t,n,e){return t===t&&(void 0!==e&&(t=t<=e?t:e),void 0!==n&&(t=t>=n?t:n)),t}},function(t,n,e){var r=e(4),o=e(13);t.exports=function(t){return\\\"symbol\\\"==typeof t||o(t)&&\\\"[object Symbol]\\\"==r(t)}},function(t,n,e){var r=e(9),o=\\\"object\\\"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function(\\\"return this\\\")();t.exports=i},function(t,n,e){(function(n){var e=\\\"object\\\"==typeof n&&n&&n.Object===Object&&n;t.exports=e}).call(this,e(10))},function(t,n){var e;e=function(){return this}();try{e=e||new Function(\\\"return this\\\")()}catch(r){\\\"object\\\"===typeof window&&(e=window)}t.exports=e},function(t,n,e){var r=e(5),o=Object.prototype,i=o.hasOwnProperty,u=o.toString,c=r?r.toStringTag:void 0;t.exports=function(t){var n=i.call(t,c),e=t[c];try{t[c]=void 0;var r=!0}catch(f){}var o=u.call(t);return r&&(n?t[c]=e:delete t[c]),o}},function(t,n){var e=Object.prototype.toString;t.exports=function(t){return e.call(t)}},function(t,n){t.exports=function(t){return null!=t&&\\\"object\\\"==typeof t}},function(t,n,e){var r=e(15),o=e(16),i=e(22);t.exports=function(t){return function(n,e,u){return u&&\\\"number\\\"!=typeof u&&o(n,e,u)&&(e=u=void 0),n=i(n),void 0===e?(e=n,n=0):e=i(e),u=void 0===u?n<e?1:-1:i(u),r(n,e,u,t)}}},function(t,n){var e=Math.ceil,r=Math.max;t.exports=function(t,n,o,i){for(var u=-1,c=r(e((n-t)/(o||1)),0),f=Array(c);c--;)f[i?c:++u]=t,t+=o;return f}},function(t,n,e){var r=e(17),o=e(18),i=e(21),u=e(0);t.exports=function(t,n,e){if(!u(e))return!1;var c=typeof n;return!!(\\\"number\\\"==c?o(e)&&i(n,e.length):\\\"string\\\"==c&&n in e)&&r(e[n],t)}},function(t,n){t.exports=function(t,n){return t===n||t!==t&&n!==n}},function(t,n,e){var r=e(19),o=e(20);t.exports=function(t){return null!=t&&o(t.length)&&!r(t)}},function(t,n,e){var r=e(4),o=e(0);t.exports=function(t){if(!o(t))return!1;var n=r(t);return\\\"[object Function]\\\"==n||\\\"[object GeneratorFunction]\\\"==n||\\\"[object AsyncFunction]\\\"==n||\\\"[object Proxy]\\\"==n}},function(t,n){t.exports=function(t){return\\\"number\\\"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,n){var e=/^(?:0|[1-9]\\\\d*)$/;t.exports=function(t,n){var r=typeof t;return!!(n=null==n?9007199254740991:n)&&(\\\"number\\\"==r||\\\"symbol\\\"!=r&&e.test(t))&&t>-1&&t%1==0&&t<n}},function(t,n,e){var r=e(3);t.exports=function(t){return t?(t=r(t))===1/0||t===-1/0?17976931348623157e292*(t<0?-1:1):t===t?t:0:0===t?t:0}},function(t,n,e){\\\"use strict\\\";e.r(n);e(1);var r=e(2),o=e.n(r);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var u,c=9728,f=10240,l=10241,a=10242,s=10243,p=33071;i(u={},l,c),i(u,f,c),i(u,a,p),i(u,s,p);function v(t,n){var e,r,i,u=n.tileSize,c=n.tileI,f=n.tileJ,l=n.numCells,a=n.numGenes,s=n.cellOrdering,p=n.cells,v=new Uint8Array(u*u),d=o()(u);return d.forEach((function(n){(r=f*u+n)<l&&(i=p.indexOf(s[r]))>=-1&&d.forEach((function(r){e=t[i*a+(c*u+r)],v[(u-r-1)*u+n]=e}))})),v}function d(t,n){var e,r,i,u,c=n.tileSize,f=n.tileI,l=n.tileJ,a=n.numCells,s=n.numGenes,p=n.cellOrdering,v=n.cells,d=new Uint8Array(c*c),b=o()(c);return b.forEach((function(n){(r=f*c+n)<a&&(u=v.indexOf(p[r]))>=-1&&b.forEach((function(r){e=(i=l*c+r)<s?t[u*s+i]:0,d[(c-n-1)*c+r]=e}))})),d}if(\\\"undefined\\\"!==typeof self){const t={getTile:function({curr:t,tileI:n,tileJ:e,tileSize:r,cellOrdering:o,rows:i,cols:u,data:c,transpose:f}){const l=new Uint8Array(c),a=u.length;return[{tile:(f?v:d)(l,{tileSize:r,tileI:n,tileJ:e,numCells:o.length,numGenes:a,cellOrdering:o,cells:i}),buffer:c,curr:t},[c]]}};self.addEventListener(\\\"message\\\",n=>{try{const[e,r]=n.data,[o,i]=t[e](r);self.postMessage(o,i)}catch(e){console.warn(e)}})}}]);\\n//# sourceMappingURL=6f6f723a7874f4178a42.worker.js.map\", null);\n};"],"sourceRoot":""}