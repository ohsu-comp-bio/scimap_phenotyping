{"version":3,"sources":["components/classNames.js","app/Warning.js","components/shared-mui/styles.js","utils.js","app/vitessce-grid-layout/layout-utils.js","app/vitessce-grid-layout/VitessceGridLayout.js","loaders/AbstractLoader.js","loaders/errors/AbstractLoaderError.js","loaders/errors/LoaderFetchError.js","loaders/errors/LoaderValidationError.js","loaders/errors/LoaderNotFoundError.js","loaders/LoaderResult.js","loaders/JsonLoader.js","loaders/AbstractZarrLoader.js","loaders/MatrixZarrLoader.js","loaders/GenesJsonAsMatrixZarrLoader.js","loaders/ClustersJsonAsMatrixZarrLoader.js","components/sets/constants.js","components/utils.js","components/spatial/constants.js","layers/BitmaskLayer.js","layers/bitmask-layer-shaders.js","components/layer-controller/utils.js","components/spatial/utils.js","loaders/RasterJsonLoader.js","loaders/OmeZarrLoader.js","components/sets/utils.js","components/sets/cell-set-utils.js","components/sets/io.js","loaders/CellSetsJsonLoader.js","loaders/anndata-loaders/BaseAnnDataLoader.js","loaders/anndata-loaders/MatrixZarrLoader.js","loaders/anndata-loaders/index.js","loaders/anndata-loaders/CellSetsZarrLoader.js","loaders/anndata-loaders/CellsZarrLoader.js","loaders/GenomicProfilesZarrLoader.js","loaders/types.js","app/state/hooks.js","app/VitessceGrid.js","app/vitessce-grid-utils.js","app/CallbackPublisher.js","components/hooks.js","app/state/coordination.js","components/data-hooks.js","components/LoadingIndicator.js","components/shared-mui/components.js","components/TitleInfo.js","components/description/Description.js","components/description/DescriptionSubscriber.js","components/status/Status.js","components/selectable-table/SelectableTable.js","components/genes/Genes.js","components/genes/GenesSubscriber.js","components/sets/Tree.js","components/sets/HelpTooltip.js","components/sets/Popover.js","components/sets/PopoverMenu.js","assets/menu.svg","components/sets/TreeNode.js","assets/sets/union.svg","assets/sets/intersection.svg","assets/sets/complement.svg","components/sets/SetsManagerButtons.js","components/sets/SetsManager.js","components/sets/CellSetsManagerSubscriber.js","components/interpolate-colors.js","layers/SelectionLayer.js","layers/selection-utils.js","layers/SelectablePolygonLayer.js","layers/SelectableScatterplotLayer.js","layers/heatmap-constants.js","layers/HeatmapBitmapLayer.js","layers/heatmap-bitmap-layer-shaders.js","layers/PixelatedBitmapLayer.js","layers/HeatmapCompositeTextLayer.js","components/shared-spatial-scatterplot/quadtree.js","assets/tools/near_me.svg","assets/tools/selection_rectangle.svg","assets/tools/selection_lasso.svg","components/shared-spatial-scatterplot/ToolMenu.js","components/shared-spatial-scatterplot/cursor.js","components/shared-spatial-scatterplot/AbstractSpatialOrScatterplot.js","components/shared-spatial-scatterplot/force-collide-rects.js","components/scatterplot/Scatterplot.js","components/tooltip/Tooltip.js","components/tooltip/Tooltip2D.js","components/tooltip/TooltipContent.js","components/scatterplot/ScatterplotTooltipSubscriber.js","components/shared-plot-options/styles.js","components/shared-plot-options/OptionsContainer.js","components/shared-plot-options/CellColorEncodingOption.js","components/scatterplot/ScatterplotOptions.js","components/scatterplot/ScatterplotSubscriber.js","components/spatial/Spatial.js","components/spatial/SpatialOptions.js","components/spatial/SpatialTooltipSubscriber.js","components/spatial/SpatialSubscriber.js","components/heatmap/HeatmapControls.js","components/heatmap/utils.js","Pool.js","components/heatmap/HeatmapWorkerPool.js","components/heatmap/Heatmap.js","components/heatmap/HeatmapTooltipSubscriber.js","components/heatmap/HeatmapSubscriber.js","components/layer-controller/ColorPalette.js","components/layer-controller/ChannelOptions.js","components/layer-controller/constants.js","components/layer-controller/shared-channel-controls.js","components/layer-controller/RasterChannelController.js","components/layer-controller/BitmaskChannelController.js","components/layer-controller/styles.js","components/layer-controller/VectorLayerController.js","components/layer-controller/LayerOptions.js","components/layer-controller/VolumeOptions.js","components/layer-controller/LayerController.js","components/layer-controller/ImageAddButton.js","components/layer-controller/LayerControllerSubscriber.js","components/higlass/HiGlassLazy.js","components/higlass/HiGlassSubscriber.js","components/vega/VegaPlot.js","components/vega/utils.js","components/sets/CellSetSizesPlot.js","components/sets/CellSetSizesPlotSubscriber.js","components/higlass/GenomicProfilesSubscriber.js","components/genes/ExpressionHistogram.js","components/genes/ExpressionHistogramSubscriber.js","components/sets/hooks.js","components/sets/CellSetExpressionPlotOptions.js","components/sets/CellSetExpressionPlot.js","components/sets/CellSetExpressionPlotSubscriber.js","app/component-registry.js","components/status/StatusSubscriber.js","app/view-config-utils.js","app/Vitessce.js","app/app.js","demo/index.js","components/heatmap/heatmap.worker.js"],"names":["CARD","PRIMARY_CARD","SECONDARY_CARD","BLACK_CARD","SCROLL_CARD","Warning","props","title","preformatted","unformatted","theme","className","styles","makeStyles","paper","maxHeight","overflow","zIndex","span","width","textAlign","paddingLeft","paddingRight","popper","muiTheme","dark","createMuiTheme","palette","type","primary","grey","secondary","primaryBackground","primaryBackgroundHighlight","primaryBackgroundInput","primaryBackgroundDim","primaryBackgroundLight","primaryForeground","primaryForegroundDim","primaryForegroundActive","secondaryBackground","secondaryBackgroundDim","secondaryForeground","MuiButtonBase","disableRipple","light","fromEntries","iterable","reduce","obj","key","val","Object","assign","pluralize","singular","plural","count","capitalize","word","charAt","toUpperCase","slice","getNextScope","prevScopes","nextScope","chars","nextCharIndices","next","r","forEach","charIndex","unshift","increment","i","length","push","join","includes","getSourceFromLoader","loader","level","data","Array","isArray","isRgb","source","shape","dtype","labels","indexOf","makeGridLayout","colXs","colLayout","colWs","entries","map","a","id","spec","y","h","x","w","resolveLayout","layout","cols","layouts","breakpoints","components","positions","def","component","coordinationScopes","columns","columnXs","columnCount","keys","ResponsiveHeightGridLayout","prevProps","this","height","onWindowResize","WidthProvider","Responsive","VitessceGridLayout","getComponent","padding","margin","draggableHandle","reactGridLayoutProps","rowHeight","onRemoveComponent","onLayoutChangeProp","onLayoutChange","gridCols","gridLayouts","gridBreakpoints","gridComponents","maxRows","Math","max","values","xywh","style","layoutChildren","k","v","Component","uuid","removeGridComponent","window","innerHeight","containerPadding","newLayout","newComponentProps","nextC","prevC","parseInt","substring","nextProps","isEqual","defaultProps","AbstractLoader","url","requestInit","options","subscriptions","Error","subscriber","token","uuidv4","AbstractLoaderError","message","LoaderFetchError","datasetType","datasetFileType","datasetUrl","responseHeaders","name","console","warn","LoaderValidationError","reason","JSON","stringify","LoaderNotFoundError","LoaderResult","coordinationValues","typeToSchema","cells","molecules","neighborhoods","raster","rasterSchema","cellSetsSchema","JsonLoader","params","schema","fileType","fetch","then","response","ok","json","Promise","reject","headers","catch","resolve","validate","valid","failureReason","Ajv","compile","errors","AbstractZarrLoader","store","HTTPStore","supportedMethods","fetchOptions","getItem","buf","text","TextDecoder","decode","parse","KeyError","MatrixZarrLoader","attrs","getJson","arr","openArray","path","mode","z","getRaw","all","loadAttrs","loadArr","GenesJsonAsMatrixZarrLoader","genesSchema","payload","rows","normalizedFlatMatrix","flatMap","cellId","geneId","Uint8Array","from","ClustersJsonAsMatrixZarrLoader","clustersSchema","matrix","normalizedMatrix","col","extent","min","d","floor","tNormalizedMatrix","range","j","flat","HIERARCHICAL_SCHEMAS","cell","latestVersion","TABULAR_SCHEMAS","cellSetsTabularSchema","cellLayerDefaultProps","updateStatus","setCellHighlight","setComponentHover","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","pickable","autoHighlight","stroked","filled","getElevation","onHover","info","object","factors","cellInfoFactors","factor","value","DEFAULT_COLOR","PALETTE","VIEWER_PALETTE","COLORMAP_OPTIONS","DEFAULT_GL_OPTIONS","webgl2","getNextNumberedNodeName","nodes","prefix","find","n","setCellSelection","cellSelection","additionalCellSets","cellSetColor","setCellSetSelection","setAdditionalCellSets","setCellSetColor","setCellColorEncoding","CELL_SELECTIONS_LEVEL_ZERO_NAME","selectionsLevelZeroNode","tree","nextAdditionalCellSets","version","datatype","nextName","children","colorIndex","set","nextPath","color","mergeCellSets","cellSets","asEsModule","__esModule","default","GLOBAL_LABELS","DEFAULT_RASTER_LAYER_PROPS","visible","colormap","opacity","domainType","transparentColor","renderingMode","RENDERING_MODES","ADDITIVE","use3d","DEFAULT_MOLECULES_LAYER","radius","DEFAULT_CELLS_LAYER","DEFAULT_NEIGHBORHOODS_LAYER","padWithDefault","defaultValue","padWidth","newArr","BitmaskLayer","fs","vs","modules","project32","picking","oldProps","changeFlags","cellColor","setColorTexture","colorTex","Texture2D","context","gl","mipmaps","parameters","GL","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","format","RGB","dataFormat","UNSIGNED_BYTE","setState","opts","uniforms","channelIsOn","hoveredCell","state","textures","model","setUniforms","hovered","colorTexHeight","colorTexWidth","draw","isWebGL2On","isWebGL2","Float32Array","R32F","LUMINANCE","RED","FLOAT","XRLayer","getSingleSelectionStats2D","selection","getRaster","selectionStats","getChannelStats","domain","slider","autoSliders","getSingleSelectionStats3D","lowResSource","sizeZ","raster0","rasterMid","rasterTop","stats0","statsMid","statsTop","layerName","compare","getSingleSelectionStats","getStats","getMultiSelectionStats","selections","stats","domains","stat","sliders","getBoundingCube","physicalSizeScalingMatrix","meta","physicalSizes","size","ratio","Matrix4","scale","identity","getPhysicalSizeScalingMatrix","buildDefaultSelection","globalSelection","globalIndices","filter","dim","getDefaultGlobalSelection","firstNonGlobalDimension","isInterleaved","lastDimSize","initializeLayerChannels","result","defaultSelection","c","colors","channel","getMetaWithTransformMatrices","imageMeta","imageLoaders","sources","metadata","transform","translate","some","Boolean","every","minPhysicalSize","acc","hasZPhyscialSize","sizes","unit","replace","undefined","divide","newMeta","toArray","initializeRasterLayersAndChannels","rasterLayers","rasterRenderLayers","usePhysicalSizeScaling","nextImageLoaders","nextImageMetaAndLayers","autoImageLayerDefPromises","layer","loaderCreator","loaders","globalIndicesOfRenderLayers","imageName","findIndex","image","layerIndex","autoImageLayerDefPromise","channels","isBitmask","index","modelMatrix","autoImageLayerDefs","renderSubBitmaskLayers","tile","bbox","left","top","right","bottom","base","bounds","tileSize","channelData","cellColorData","cellColorHeight","cellColorWidth","tileId","initLoader","imageData","dimensions","isPyramid","field","metadataUrl","zarrMetadata","paths","metaKey","arrMetaKeys","chunks","yChunk","xChunk","log2","ZarrPixelSource","omeTiffOffsetsUrl","res","offsets","loadOmeTiff","Channels","Pixels","Name","RasterLoader","URL","createObjectURL","Blob","images","renderLayers","urls","imagesWithLoaderCreators","autoImageCache","autoImages","autoImageLayers","imageLayerLoaders","imageLayerMeta","spatialRasterLayers","hexToRgb","hex","exec","toLowerCase","OmeZarrLoader","loadOmeZarr","omero","error","rdefs","t","defaultT","defaultZ","start","end","label","callbackOnKeyPress","event","callback","preventDefault","colorArrayToString","rgbArray","tinycolor","g","b","toHexString","colorStringToArray","colorString","colorObj","toRgb","getLevelTooltipText","repeat","isEqualOrPrefix","targetPath","testPath","tryRenamePath","nextTargetPath","pathToKey","nodeToSet","currNode","nodeToHeight","newLevel","childrenHeights","treeFindNodeByNamePath","currTree","targetNamePath","foundNodes","levelZeroNode","nodeFindNodeByNamePath","node","currLevelIndex","currNodeName","child","nodeTransform","predicate","transformedPaths","currPath","newPath","concat","nodeAppendChild","newChild","treeToUnion","checkedPaths","nodeSets","hEl","nodeToLevelDescendantNamePaths","prevPath","stopEarly","treeExport","treeExportLevelZeroNode","nodePath","cellSetColors","nodeWithColors","nodeTransformAll","newNode","nPath","nodeColor","treeToExport","nodeName","treeInitialize","colorMixWithUncertainty","originalColor","p","mixingColor","treeToSetSizesBySetNames","selectedNamePaths","setColor","setNamePath","nodeSet","filterNode","filterPath","treesConflict","testCellSets","testPaths","hasConflict","getPaths","lzn","initializeCellSetColor","nextCellSetColor","nodeCountPerTreePerLevel","fill","treeIndex","processNode","hierarchyLevel","getCellSetPolygons","mapping","cellSetSelection","cellSetPolygons","cellPositions","mappings","points","turfFeatureCollection","turfPoint","hullCoords","concaveman","Infinity","centroidCoords","centroid","geometry","coordinates","hull","treeToCellPolygonsBySetNames","tryUpgradeTreeToLatestSchema","itemId","handleImportJSON","importData","handleImportTabular","dsvFormat","row","groupName","setName","obsId","predictionScore","isNil","treeToImport","Set","groupRows","setRows","levelOneNode","handleExportJSON","jsonString","encodeURIComponent","downloadForUser","dataString","fileName","downloadAnchorNode","document","createElement","setAttribute","body","appendChild","click","remove","CellSetsJsonLoader","rawData","upgradedData","newAutoSetSelectionParentName","newAutoSetSelections","newAutoSetColors","readFloat32FromUint8","bytes","Int32Array","buffer","parseVlenUtf8","decoder","dataEnd","output","l","BaseAnnDataLoader","cellSetZarrLocation","categories","getFlatArrDecompressed","categoriesValues","cellSetsArr","get","cellSetsValues","mappedCellSetValues","String","parseAndMergeTextBytes","dbytes","mergeBytes","tmp","byteLength","numRequests","ceil","requests","item","keyPrefix","compressor","filters","cellNames","_index","normalize","concatenateColumnVectors","numCols","numRows","BYTES_PER_ELEMENT","view","DataView","ArrayBuffer","TypedArray","constructor","CellSetsZarrLoader","cellSetsTree","loadCellNames","loadCellSetIds","cellSetIds","uniqueCellSetIds","sort","clusters","cluster","CellsZarrLoader","xy","loadNumeric","poly","coordinationName","loadMappings","loadXy","loadPoly","loadFactors","dims","factorsObj","split","geneNames","geneFilterZarr","geneFilter","_","filterZarr","loadGeneNames","genes","gene","sparseArrays","_getGeneIndices","indices","_openSparseArrays","indptrArr","indexArr","cellXGeneArr","_getNumCells","numCells","startRowIndex","endRowIndex","isColumnAllZeros","geneData","rowIndices","cellXGeneData","rowIndex","_getNumGenes","numGenes","_loadCSRSparseCellXGene","cellXGene","_sparseMatrix","cellXGeneMatrix","rowStart","rowEnd","colStart","colEnd","matrixGeneFilter","_matrixZattrs","encodingType","_loadCSCSparseCellXGene","_getFilteredGenes","filteredGenes","numGenesFiltered","cellXGeneMatrixFiltered","loadGeneSelection","shouldNormalize","_loadCSCGeneSelection","_loadCSRGeneSelection","loadCellXGene","matrixGeneFilterZarr","GenomicProfilesZarrLoader","fileTypeToLoader","RasterJsonLoader","AnnDataLoaders","useViewConfigStore","create","viewConfig","setViewConfig","setLoaders","setCoordinationValue","parameter","scope","coordinationSpace","removeComponent","splice","changeLayout","newProps","useAuxiliaryStore","auxiliaryStore","useHoverStore","componentHover","useWarnStore","warning","setWarning","useViewInfoStore","viewInfo","setComponentViewInfo","useGridSizeStore","resizeCount","incrementResizeCount","useCoordination","shallow","useMemo","AUXILIARY_COORDINATION_TYPES_MAP","useAuxiliaryCoordination","mappedCoordinationScopes","newCoordinationScopes","coordinationType","mapCoordinationScopes","mappedParameters","mapParameters","useLoaders","useComponentHover","useSetComponentHover","useWarning","useSetWarning","useComponentViewInfo","useCallback","useSetComponentViewInfo","setViewInfoRef","useRef","getState","current","useGridResize","useEmitGridResize","VitessceGrid","initialRowHeight","config","useState","containerHeight","setContainerHeight","setRowHeight","containerRef","useEffect","bottomY","len","getNumRows","newRowHeight","getRowHeight","containerRect","getBoundingClientRect","addEventListener","removeEventListener","useRowHeight","onResize","datasets","configDescription","dataset","datasetLoaders","description","files","file","matchingLoaderClass","uid","createLoaders","ref","onResizeStop","CallbackPublisher","onWarn","onConfigChange","onLoaderChange","validateOnConfigChange","subscribe","addSchema","configSchema","e","validateViewConfig","getWindowDimensions","innerWidth","useGridItemSize","setHeight","setWidth","onResizeDebounced","debounce","trailing","useDeckCanvasSize","deckRef","canvasRect","deck","canvas","useReady","supportedItems","items","waiting","setWaiting","setItemIsReady","readyItem","waitingItems","nextWaitingItems","log","resetReadyItems","useUrls","setUrls","prev","COORDINATION_TYPES","DATASET","EMBEDDING_TYPE","EMBEDDING_ZOOM","EMBEDDING_ROTATION","EMBEDDING_TARGET_X","EMBEDDING_TARGET_Y","EMBEDDING_TARGET_Z","EMBEDDING_CELL_SET_POLYGONS_VISIBLE","EMBEDDING_CELL_SET_LABELS_VISIBLE","EMBEDDING_CELL_SET_LABEL_SIZE","EMBEDDING_CELL_RADIUS","SPATIAL_ZOOM","SPATIAL_ROTATION","SPATIAL_TARGET_X","SPATIAL_TARGET_Y","SPATIAL_TARGET_Z","SPATIAL_ROTATION_X","SPATIAL_ROTATION_Y","SPATIAL_ROTATION_Z","SPATIAL_ROTATION_ORBIT","SPATIAL_ORBIT_AXIS","SPATIAL_AXIS_FIXED","HEATMAP_ZOOM_X","HEATMAP_ZOOM_Y","HEATMAP_TARGET_X","HEATMAP_TARGET_Y","CELL_FILTER","CELL_HIGHLIGHT","CELL_SET_SELECTION","CELL_SET_HIGHLIGHT","CELL_SET_COLOR","GENE_FILTER","GENE_HIGHLIGHT","GENE_SELECTION","GENE_EXPRESSION_COLORMAP","GENE_EXPRESSION_TRANSFORM","GENE_EXPRESSION_COLORMAP_RANGE","CELL_COLOR_ENCODING","SPATIAL_RASTER_LAYERS","SPATIAL_CELLS_LAYER","SPATIAL_MOLECULES_LAYER","SPATIAL_NEIGHBORHOODS_LAYER","GENOMIC_ZOOM_X","GENOMIC_ZOOM_Y","GENOMIC_TARGET_X","GENOMIC_TARGET_Y","ADDITIONAL_CELL_SETS","MOLECULE_HIGHLIGHT","DEFAULT_COORDINATION_VALUES","AUTO_INDEPENDENT_COORDINATION_TYPES","COMPONENT_COORDINATION_TYPES","scatterplot","spatial","heatmap","cellSetSizes","cellSetExpression","status","expressionHistogram","layerController","higlass","genomicProfiles","warnInConsole","initCoordinationSpace","setters","initialValues","setterName","setterFunc","initialValue","equal","useCellsData","addUrl","isRequired","coordinationSetters","initialCoordinationValues","setCells","cellsCount","setCellsCount","load","spatialCellsLayer","useCellSetsData","setCellSets","useExpressionMatrixData","expressionMatrix","setExpressionMatrix","useGeneSelection","setGeneData","expressionDataForSelection","sel","geneIndex","expressionData","cellIndex","useExpressionAttrs","setAttrs","useMoleculesData","setMolecules","moleculesCount","setMoleculesCount","locationsCount","setLocationsCount","spatialMoleculesLayer","useRasterData","setRaster","setImageLayerLoaders","setImageLayerMeta","nextImageMeta","LoadingIndicator","CircularProgress","MuiPopper","classes","anchorEl","open","placement","Popper","MuiPaper","Paper","elevation","MuiSpan","PopperMenu","buttonIcon","toggle","buttonClassName","anchorRef","IconButton","onClick","ClickAwayListener","onClickAway","MenuList","useStyles","iconButton","border","marginLeft","background","borderRadius","backgroundColor","marginRight","verticalAlign","downloadLink","SettingsIconWithArrow","PlotOptions","useReducer","CloudDownloadIconWithArrow","DownloadOptions","MenuItem","dense","Link","underline","href","target","rel","ClosePaneButton","TitleInfo","isScroll","isSpatial","isReady","childClassName","Description","metadataRecord","DESCRIPTION_DATA_TYPES","Status","messages","SelectableTable","hasColorEncoding","onChange","idKey","valueKey","allowMultiple","allowUncheck","showTableHead","showTableInputs","testHeight","testWidth","selectedRows","setSelectedRows","onSelectRow","checked","union","difference","handleInputChange","getDataFromIds","ids","isSelected","initialSelectedRows","selectedRowData","inputUuid","hiddenInputsClass","rowRenderer","role","htmlFor","column","headerRowRenderer","gridStyle","outline","rowCount","headerHeight","rowGetter","Genes","geneList","geneSelection","setGeneSelection","searchTerm","setSearchTerm","searchResults","setSearchResults","results","localeCompare","placeholder","GENES_DATA_TYPES","Tree","React","forwardRef","prefixCls","showIcon","blockNode","checkable","itemHeight","classNames","virtual","HelpTooltip","content","overlayClassName","spanRef","getTooltipContainer","closest","overlay","Popover","PopoverMenuListButton","subtitle","handler","handlerKey","confirm","isConfirming","setIsConfirming","handleOrRequireConfirm","titleWithConfirm","onKeyPress","PopoverMenuList","menuConfig","defaultPalette","disableAlpha","triangle","onChangeComplete","rgb","PopoverMenu","setVisible","onVisibleChange","_extends","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","trigger","mouseEnterDelay","mouseLeaveDelay","SvgMenu","_ref","svgRef","titleId","viewBox","ForwardRef","makeNodeViewMenuConfig","onCheckNode","onNodeRemove","onNodeSetIsEditing","onExportLevelZeroNodeJSON","onExportLevelZeroNodeTabular","onExportSetJSON","editable","exportable","NamedSetNodeStatic","tooltipText","nodeKey","checkbox","isChecking","isLeaf","onNodeSetColor","onNodeView","expanded","onCheckLevel","checkedLevelPath","checkedLevelIndex","disableTooltip","shouldCheckNextLevel","nextLevelToCheck","niceSize","Intl","NumberFormat","tooltipProps","popoverMenuConfig","NamedSetNodeEditing","onNodeSetName","onNodeCheckNewName","currentTitle","setCurrentTitle","hasConflicts","trySetName","autoFocus","onFocus","select","NamedSetNode","isEditing","isCurrentSet","LevelsButtons","onCheck","isChecked","clsx","SwitcherIcon","isOpen","hexColor","focusable","data-icon","aria-hidden","TreeNode","renderSelector","onDragStartProp","onDragStart","rcTree","prefixClass","draggable","wrapClass","isDraggable","setSelectHandle","getNodeState","aria-grabbed","renderCheckbox","renderLevels","renderSwitcher","onNodeExpand","onNodeExpandWrapper","switcherClass","tabIndex","loading","dragOver","dragOverGapTop","dragOverGapBottom","selected","halfChecked","onDragEndProp","onDragEnd","expandable","otherProps","filterTreeNode","disabled","isDisabled","dataAndAriaAttributeProps","getDataAndAria","onDragEnter","onDragOver","onDragLeave","onDrop","bind","renderChildren","RcTreeNode","SvgUnion","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","SvgIntersection","mask","SvgComplement","PlusButton","onError","onImportTree","onCreateLevelZeroNode","importable","onImport","importHandler","mimeType","uploadInputNode","File","FileReader","FileList","reader","readAsText","SetOperationButtons","onUnion","onIntersection","onComplement","operatable","hasCheckedSetsToUnion","hasCheckedSetsToIntersect","hasCheckedSetsToComplement","processSets","sets","SetsManager","additionalSets","checkedLevel","levelSelection","setSelection","setExpansion","onExpandNode","onDropNode","isDragging","setIsDragging","isEditingNodeName","setIsEditingNodeName","processedSets","processedAdditionalSets","additionalSetKeys","getAllKeys","allSetSelectionKeys","allSetExpansionKeys","setSelectionKeys","setExpansionKeys","additionalSetSelectionKeys","additionalSetExpansionKeys","renderTreeNodes","readOnly","nodeToRenderProps","levelZeroPath","levelIndex","checkedKeys","expandedKeys","autoExpandParent","onExpand","dropKey","eventKey","dragKey","dragNode","dropToGap","dropPosition","CELL_SETS_DATA_TYPES","spline","v1","v2","v0","v3","t1","t2","t3","innerBasis","interpolatePlasma","interpolateSequentialMulti","getCellColors","cellColorEncoding","expressionDataAttrs","geneExpColormap","Map","cellColorsArray","prob","treeToCellColorsBySetNames","ClickableDrawRectangleMode","onEdit","editType","DrawRectangleMode","ClickableDrawPolygonByDraggingMode","DrawPolygonByDraggingMode","MODE_MAP","SELECTION_TYPE","RECTANGLE","POLYGON","selectionType","layerIds","onSelect","EMPTY_DATA","features","PASS_THROUGH_PROPS","SelectionLayer","getCellCoords","cellsQuadTree","flippedCoordinates","flipY","selectedPolygon","turfPolygon","pickingInfos","visit","x0","y0","x1","y1","nodePoints","nodePolygon","nodePolygonContainsSelectedPolygon","booleanContains","nodePolygonWithinSelectedPolygon","booleanWithin","nodePolygonOverlapsSelectedPolgyon","booleanOverlap","booleanPointInPolygon","ViewMode","inheritedProps","EditableGeoJsonLayer","getSubLayerProps","modeConfig","dragToDraw","selectedFeatureIndexes","updatedData","_selectPolygonObjects","CompositeLayer","getBaseLayerId","layerId","getSelectionLayers","tool","zoom","updateCellsSelection","cellBaseLayerId","editHandlePointRadius","cellIds","cellObj","getTentativeFillColor","getTentativeLineColor","getTentativeLineDashArray","lineWidthMinPixels","lineWidthMaxPixels","getEditHandlePointColor","getEditHandlePointRadius","editHandlePointRadiusScale","editHandlePointRadiusMinPixels","editHandlePointRadiusMaxPixels","overlayBaseProps","getColor","rest","getFillColor","getLineColor","getFilterValue","extensions","DataFilterExtension","filterSize","filterRange","SelectablePolygonLayer","PolygonLayer","SelectableScatterplotLayer","ScatterplotLayer","THEME_TO_TEXT_COLOR","AXIS_FONT_FAMILY","PIXELATED_TEXTURE_PARAMETERS","HeatmapBitmapLayer","shaders","extension","_mergeShaders","getShaders","args","loadTexture","_getShaders","bitmapTexture","aggSizeX","aggSizeY","colorScaleLo","colorScaleHi","uBitmapTexture","uTextureSize","uAggSize","uColorScaleRange","delete","BitmapLayer","async","desaturate","tintColor","PixelatedBitmapLayer","textureParameters","HeatmapCompositeTextLayer","axisTopLabelData","matrixLeft","matrixWidth","viewWidth","targetX","targetY","axisTopTitle","showAxisTopLabels","cellWidth","axisLabelTop","axisOffsetTop","scaleFactor","TextLayer","getText","getPosition","getTextAnchor","getSize","getAngle","fontFamily","updateTriggers","axisLeftLabelData","matrixTop","matrixHeight","viewHeight","axisLeftTitle","showAxisLeftLabels","cellHeight","axisLabelLeft","axisOffsetLeft","_renderAxisTopLayers","_renderAxisLeftLayers","createCellsQuadTree","cellsEntries","quadtree","addAll","SvgNearMe","SvgSelectionRectangle","SvgSelectionLasso","alt","isActive","inactive","active","ToolMenu","setActiveTool","activeTool","visibleTools","pan","selectRectangle","selectLasso","getCursorWithTool","getCursor","interactionState","AbstractSpatialOrScatterplot","viewport","onViewStateChange","onInitializeViewInfo","onWebGLInitialized","onToolChange","nextViewState","viewState","setViewState","layers","spatialAxisFixed","onToolChangeProp","coordinate","sourceLayer","cellHighlight","hasBitmask","layerZoomScale","round","dataCoords","coords","Number","updateViewInfo","project","positionX","positionY","layerProps","getLayers","showCellSelectionTools","cellsLayer","showPanTool","useDevicePixels","views","OrbitView","controller","orbitAxis","OrthographicView","glOptions","dragPan","PureComponent","constant","jiggle","random","makeDefaultGetCellPosition","cellEntry","available","s","mappedCell","makeDefaultGetCellCoords","Scatterplot","cellSetsForceSimulation","masses","strength","iterations","xCenter","vx","yCenter","vy","prepare","quad","force","nodeSize","nodeMass","xi","yi","visitAfter","xSize","ySize","xd","abs","yd","sqrt","m","iterate","initialize","forceCollideRects","cellSetsLabelPrevZoom","cellSetsLayers","onUpdateCellsData","onUpdateCellsLayer","onUpdateCellSetsLayers","getCellPosition","cellRadiusScale","cellOpacity","cellFilter","getCellIsSelected","makeDefaultGetCellIsSelected","cellColors","getCellColor","makeDefaultGetCellColors","onCellClick","filteredCellsEntries","radiusScale","radiusMinPixels","radiusMaxPixels","getLineWidth","cellSetPolygonsVisible","cellSetLabelsVisible","cellSetLabelSize","wireframe","getPolygon","collisionForce","forceSimulation","tick","getAlignmentBaseline","fontWeight","createSelectionLayers","createCellsLayer","onlyViewStateChange","createCellSetsLayers","viewInfoDidUpdate","shallowDiff","propName","forceUpdate","ScatterplotWrapper","Tooltip","parentWidth","parentHeight","isNarrow","el","offsetPercentage","translateX","translateY","whiteSpace","Tooltip2D","parentUuid","sourceUuid","isTooltipVisible","crosshairWidth","TooltipContent","ScatterplotTooltipSubscriber","getCellInfo","cellInfo","box","boxSizing","minWidth","sliderValueLabel","tableContainer","labelCell","inputCell","fontSize","OptionsContainer","Box","TableContainer","Table","table","TableBody","CellColorEncodingOption","observationsLabel","observationsLabelNice","TableRow","TableCell","Select","native","inputProps","ScatterplotOptions","cellRadius","setCellRadius","setCellSetLabelsVisible","setCellSetLabelSize","setCellSetPolygonsVisible","Checkbox","Slider","root","valueLabel","aria-labelledby","valueLabelDisplay","step","SCATTERPLOT_DATA_TYPES","defaultGetCellCoords","Spatial","moleculesEntries","moleculesLayer","neighborhoodsLayer","imageLayers","layerLoaderSelections","randomColorData","onUpdateMoleculesData","onUpdateMoleculesLayer","onUpdateNeighborhoodsData","onUpdateNeighborhoodsLayer","onUpdateImages","layerDef","getCellPolygon","makeDefaultGetCellPolygon","lineWidthScale","setMoleculeHighlight","getMoleculeColor","getMoleculePosition","getRadius","getNeighborhoodPolygon","neighborhoodsEntry","neighborhoodsEntries","ScaleBarLayer","rawLayerDef","loaderSelection","nextLoaderSelection","prevLoaderSelection","resolution","xSlice","ySlice","zSlice","visibilities","MultiscaleImageLayer","renderSubLayers","excludeBackground","onViewportLoad","VolumeLayer","ImageLayer","getLayerLoaderTuple","Layer","colorValues","sliderValues","rasterLayersCallbacks","use3dIndex","createImageLayer","createScaleBarLayer","molecule","createMoleculesLayer","createNeighborhoodsLayer","createImageLayers","onUpdateCellColors","SpatialWrapper","createStyles","cameraLabel","button","ToggleFixedAxisButton","setSpatialAxisFixed","SpatialOptions","SpatialTooltipSubscriber","SPATIAL_DATA_TYPES","position","transition","HeatmapControls","onColorScaleChange","orientation","layerFilter","startsWith","defaultPoolSize","navigator","hardwareConcurrency","HeatmapPool","Worker","waitForWorker","currentWorker","onmessage","finishTask","onerror","postMessage","workers","idleWorkers","waitQueue","idleWorker","pop","waiter","promise","terminate","Heatmap","componentName","rawViewState","setHeatmapControls","heatmapControls","expression","clearPleaseWait","hoverInfo","setGeneHighlight","createDefaultUpdateGenesHover","createDefaultUpdateViewInfo","setIsRendering","transpose","variablesTitle","observationsTitle","minZoom","workerPool","HeatmapWorkerPool","tilesRef","dataRef","axisLeftLabels","setAxisLeftLabels","axisTopLabels","setAxisTopLabels","setColorScaleLo","setColorScaleHi","newValue","tileIteration","incTileIteration","backlog","setBacklog","newBuffer","copyUint8Array","newCellOrdering","oldCellOrdering","cellLabelMaxLength","geneLabelMaxLength","clamp","getAxisSizes","offsetTop","offsetLeft","matrixRight","matrixBottom","xTiles","yTiles","tileWidth","tileHeight","colI","rowI","zoomedMouseY","zoomedMouseX","minY","minInViewY","maxInViewY","globalRowY","minX","minInViewX","maxInViewX","globalRowX","heatmapToMousePosition","nextZoom","nextScaleFactor","minTargetX","maxTargetX","minTargetY","maxTargetY","nextTarget","curr","promises","process","tileI","tileJ","cellOrdering","tiles","currWork","currIndex","heatmapLayers","getLayer","textLayers","cellColorsTiles","offset","colorBarTileWidthPx","colorBarTileHeightPx","tileData","Uint8ClampedArray","TILE_SIZE","tileY","rValue","gValue","bValue","ImageData","cellColorsLayers","COLOR_BAR_SIZE","offsetCenter","mouseX","mouseY","viewMouseX","viewMouseY","mouseToHeatmapPosition","obsI","varI","varId","HeatmapTooltipSubscriber","getGeneInfo","geneHighlight","cellCoord","geneInfo","geneCoord","HEATMAP_DATA_TYPES","container","display","justifyContent","alignItems","flexWrap","icon","stroke","action","ColorPalette","handleChange","aria-label","menuButton","ChannelOptions","handlePropertyChange","handleChannelRemove","handleIQRUpdate","disableGutters","DOMAINS","needMin","DTYPE_VALUES","getDomains","ChannelSelectionDropdown","channelOptions","selectionIndex","opt","ChannelVisibilityCheckbox","abbreviateNumber","maxNaiveDigits","isInteger","naive","maximumSignificantDigits","useGrouping","toExponential","ChannelSlider","handleChangeDebounced","valueLabelFormat","getAriaLabel","marginTop","RasterChannelController","visibility","channelId","newDomainType","dimName","colormapOn","isLoading","newUse3d","setDomain","setDomainType","setUse3d","rgbColor","on","toRgbUIString","mounted","hasDomainChanged","has3dChanged","hasSelectionChanged","newDomain","Grid","direction","justify","xs","BitmaskChannelController","disableOptions","sharedControllerStyles","withStyles","flexDirection","useControllerSectionStyles","StyledExpansionPanelDetails","ExpansionPanelDetails","StyledExpansionPanelSummary","marginBottom","spacing","expandIcon","ExpansionPanelSummary","StyledInputLabel","InputLabel","OverflowEllipsisGrid","textOverflow","StyledSelectionSlider","markActive","VectorLayerController","layerType","handleLayerChange","isOn","Typography","handleCheckBoxChange","handleSliderChange","DOMAIN_OPTIONS","getStatsForResolution","depth","depthDownsampled","totalBytes","VolumeDropdown","loaderWithMeta","handleMultiPropertyChange","currResolution","disable3d","setRasterLayerCallback","setAreAllChannelsLoading","spatialHeight","spatialWidth","shouldUse3D","propertiesChanged","ch","defaultViewState","getDefaultInitialViewState","rotationX","rotationOrbit","newChannels","hasZStack","performance","memory","jsHeapSizeLimit","canLoadResolution","decimals","dm","parseFloat","pow","toFixed","formatBytes","ColormapSelect","inputId","TransparentColorCheckbox","float","OpacitySlider","SliderDomainSelector","GlobalSelectionSlider","possibleValues","onChangeCommitted","marks","LayerOption","LayerOptions","handleColormapChange","handleOpacityChange","handleTransparentColorChange","globalControlLabels","globalLabelValues","handleGlobalChannelsSelectionChange","handleDomainChange","shouldShowTransparentColor","shouldShowDomain","shouldShowColormap","hasDimensionsAndChannels","useSlicerStyles","enabled","Slicer","handleSlicerSetting","sliceValuesAndSetSliceFunctions","xSliceNew","ySliceNew","zSliceNew","Slicers","setVal","renderingOptions","RenderingModeSelect","handleRenderingModeChange","FormControl","fullWidth","ReCenterButton","Button","VolumeOptions","TabPanel","other","hidden","getDomainsAndSliders","buttonStyles","borderStyle","LayerController","handleLayerRemove","ChannelController","setAreLayerChannelsLoading","areLayerChannelsLoading","firstSelection","tab","setTab","isExpanded","setIsExpanded","o","setGlobalLabelValues","setOpacity","setChannels","setChannelsAndDomainType","setChannel","addChannel","newAreLayerChannelsLoading","handleChannelAdd","newChannelId","areLayerChannelsLoadingCallback","newChannelsWithSelection","channelControllers","channelLabel","setIsLoading","loaderData","q1","q3","property","update","removeChannel","controllerSectionClasses","Visibility","VisibilityIcon","VisibilityOffIcon","useVolumeTabs","FullController","MAX_SLIDERS_AND_CHANNELS","variant","startIcon","ExpansionPanel","attributes","TransitionProps","enter","aria-controls","stopPropagation","Tabs","newTab","minHeight","Tab","addButton","ImageAddIcon","ImageAddButton","imageOptions","handleImageAdd","imgData","handleAdd","LAYER_CONTROLLER_DATA_TYPES","LayerControllerMemoized","memo","setMoleculesLayer","canShowCellVecmask","setCellsLayer","setRasterLayersCallbacks","areLoadingRasterChannnels","setAreLoadingRasterChannnels","handleRasterLayerChange","handleRasterLayerRemove","layerIs3DIndex","setZoom","setTargetX","setTargetY","setTargetZ","setRotationX","setRotationOrbit","componentHeight","componentWidth","spatialLayout","layerMeta","isRaster","cb","newRasterLayersCallbacks","newZoom","newRotationX","newRotationOrbit","newAreLoadingRasterChannnels","LayerControllerSubscriber","setRasterLayers","setSpatialRasterLayers","setSpatialCellsLayer","setSpatialMoleculesLayer","setSpatialTargetX","setSpatialTargetY","setSpatialTargetZ","setSpatialRotationX","setSpatialRotationOrbit","setSpatialZoom","scopes","useComponentLayout","layerControllerRef","clientHeight","clientWidth","useClosestVitessceContainerSize","windowDimensions","setWindowDimensions","useWindowDimensions","windowHeight","windowWidth","newLayer","newLayers","PIXI_BUNDLE_VERSION","packageJson","dependencies","HIGLASS_BUNDLE_VERSION","PIXI_BUNDLE_URL","HIGLASS_BUNDLE_URL","dynamicImportPolyfill","register","dataFetcher","ZarrMultivecDataFetcher","pluginType","HiGlassComponent","lazy","ReactDOM","handleImportError","__import__","hglib","HiGlassLazy","hgViewConfigProp","hgViewConfig","hgOptionsProp","hgOptions","genomeSize","genomicZoomX","genomicZoomY","genomicTargetX","genomicTargetY","setGenomicZoomX","setGenomicZoomY","setGenomicTargetX","setGenomicTargetY","hgInstance","setHgInstance","isActiveRef","centerX","genomesPerUnitX","unitX","initialXDomain","centerY","genomesPerUnitY","unitY","initialYDomain","zoomFixed","trackSourceServers","exportViewUrl","zoomLocks","locksByViewUid","locksDict","locationLocks","valueScaleLocks","handleMouseEnter","handleMouseLeave","api","viewConfigString","xDomain","yDomain","nextGenomicZoomX","nextGenomicZoomY","nextGenomicTargetX","nextGenomicTargetY","off","fallback","bounded","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","sizeMode","HIGLASS_DATA_TYPES","DATASET_NAME","isVega","$schema","VegaPlot","partialSpec","signalListeners","vegaComponent","tooltip","Handler","renderer","VEGA_THEMES","axis","domainColor","gridColor","tickColor","CellSetSizesPlot","keyLength","keyName","mark","encoding","labelExpr","legend","CELL_SET_SIZES_DATA_TYPES","GENOMIC_PROFILES_DATA_TYPES","REFERENCE_TILESETS","hg38","chromosomes","hg19","mm9","mm10","ExpressionHistogram","bin","maxbins","aggregate","EXPRESSION_HISTOGRAM_DATA_TYPES","useExpressionByCellSet","useGeneExpressionTransform","mergedCellSets","cellObjects","cellsArray","treeToObjectsBySetNames","firstGeneSelected","exprMax","cellIndices","normValue","transformedValue","expressionArr","expressionMax","CellSetExpressionPlotOptions","toggleGeneExpressionTransform","CellSetExpressionPlot","domainMax","maxCharactersForLabel","autoMarginBottom","colorScale","plotWidth","plotHeight","bandWidth","rectColor","axisBand","bandPosition","tickExtra","tickOffset","signals","groupby","bandwidth","fields","ops","as","scales","signal","reverse","axes","orient","zindex","tickCount","labelAngle","labelAlign","facet","encode","xc","band","expr","parent","y2","CELL_SET_EXPRESSION_DATA_TYPES","registry","descriptionOverride","setDescription","useDescription","moleculeHighlight","variablesLabelOverride","variablesLabel","variablesPluralLabelOverride","variablesPluralLabel","setGeneFilter","resetUrls","newSelection","cellSetExpansion","setCellSetExpansion","upgradedCellSets","allCellIds","setCellSetColorEncoding","levelNodePaths","treeToExpectedCheckedLevel","targetKey","dropPath","dropNode","dropNodeIsLevelZero","dragPath","dropParentNode","dropParentPath","dropNodeCurrIndex","dragNodeName","newDragPath","insertIndex","newLevelZero","addChildFunction","checkPathFunction","newChildren","nodeInsertChild","newColors","newCellSetColor","levelZeroName","newCellSetSelection","prevNodeColor","nextNamePath","renameNode","nextCellSetSelection","nextCellSetExpansion","setsToView","viewNode","expandedPath","importAutoSetColors","exportData","csvString","json2csv","delimiter","handleExportTabular","setToExport","treeExportSet","treeToIntersection","primaryUnion","treeToComplement","observationsLabelOverride","observationsPluralLabelOverride","observationsPluralLabel","titleOverride","embeddingZoom","embeddingTargetX","embeddingTargetY","targetZ","embeddingTargetZ","embeddingType","embeddingCellSetPolygonsVisible","embeddingCellSetLabelsVisible","embeddingCellSetLabelSize","embeddingCellRadius","setEmbeddingZoom","setEmbeddingTargetX","setEmbeddingTargetY","setEmbeddingTargetZ","setCellFilter","setEmbeddingCellSetPolygonsVisible","setEmbeddingCellSetLabelsVisible","setEmbeddingCellSetLabelSize","setEmbeddingCellRadius","setCellRadiusScale","setCellSelectionProp","cellSetPolygonCache","setCellSetPolygonCache","newCellSetPolygons","cache","cacheGet","cellValues","cellCoordinates","xExtent","yExtent","xRange","yRange","diagonalLength","newScale","newTargetX","newTargetY","subobservationsLabelOverride","subobservationsLabel","subobservationsPluralLabelOverride","subobservationsPluralLabel","spatialZoom","spatialTargetX","spatialTargetY","spatialTargetZ","spatialRotationX","rotationY","spatialRotationY","rotationZ","spatialRotationZ","spatialRotationOrbit","spatialOrbitAxis","spatialNeighborhoodsLayer","setOrbitAxis","setSpatialOrbitAxis","setNeighborhoodsLayer","setSpatialNeighborhoodsLayer","setNeighborhoods","useNeighborhoodsData","canPassInCellsLayer","useRaster","initialTargetX","initialTargetY","initialTargetZ","initialZoom","zoomBackoff","viewSize","newViewStateZoom","getViewExtentFromPolygonExtents","extents","getInitialSpatialTargets","observationsCount","subobservationsCount","parts","part","shortNumber","makeSpatialSubtitle","newOrbitAxis","zoomX","heatmapZoomX","heatmapTargetX","heatmapTargetY","geneExpressionColormapRange","setZoomX","setHeatmapZoomX","setZoomY","setHeatmapZoomY","setHeatmapTargetX","setHeatmapTargetY","setGeneExpressionColormapRange","isRendering","genesCount","selectedCount","subarray","sum","profileTrackUidKey","profileTrackNameKey","higlassServer","assembly","genomicProfilesAttrs","setGenomicProfilesAttrs","useGenomicProfilesData","foregroundColor","dimColor","referenceTracks","server","tilesetUid","fontIsLeftAligned","showMousePosition","mousePositionColor","labelPosition","labelLeftMargin","labelRightMargin","labelTopMargin","labelBottomMargin","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","plusStrandColor","minusStrandColor","labelColor","labelBackgroundColor","trackBorderWidth","trackBorderColor","referenceTracksHeightSum","profileTrackHeight","row_infos","profileTracks","rowInfo","trackUid","isPath","trackName","setInSelection","trackUidString","track","labelShowAssembly","barFillColor","tracks","center","whole","gallery","static","geneExpressionTransform","setGeneExpressionTransform","setArr","getExistingScopesForCoordinationType","spaceScopes","componentScopes","initializeAuto","newConfig","scopeValue","newScopes","scopeName","coordinateComponentsIndependent","coordinateComponentsTogether","upgradeReplaceViewProp","prevZScopes","prevTXScopes","prevTYScopes","nextZScope","nextTXScope","nextTYScope","upgrade","fromVersion","oldConfig","datasetUid","staticLayout","componentDef","newComponentDef","newScopeValues","newDatasetUid","public","initStrategy","upgradeFrom0_1_0","replaceLayerType","spatialLayers","typedLayers","newComponent","replaceCoordinationScope","upgradeFrom1_0_0","generateClassName","createGenerateClassName","disableGlobal","Vitessce","upgradedConfig","validateLegacy","configSchema0_1_0","configSchema1_0_0","groupCollapsed","groupEnd","configOrWarning","success","StylesProvider","ThemeProvider","AwaitResponse","responseRef","preformattedDetails","statusText","redirected","render","responsePromise","location","replaceAll","checkResponse","createApp","getElementById","module","exports","require"],"mappings":"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","file":"static/js/main.482a441f.chunk.js","sourcesContent":["export const TOOLTIP_ANCESTOR = 'tooltip-ancestor';\nconst CARD = `card card-body my-2 ${TOOLTIP_ANCESTOR}`;\nexport const PRIMARY_CARD = `${CARD} bg-primary`;\nexport const SECONDARY_CARD = `${CARD} bg-secondary`;\nexport const BLACK_CARD = `${CARD} bg-black`;\nexport const TITLE_CARD = 'title';\nexport const SCROLL_CARD = `${PRIMARY_CARD} scroll`;\n","import React from 'react';\nimport { PRIMARY_CARD } from '../components/classNames';\n\nexport default function Warning(props) {\n  const {\n    title,\n    preformatted,\n    unformatted,\n    theme,\n  } = props;\n  return (\n    <div className={`vitessce-container vitessce-theme-${theme}`}>\n      <div className=\"warning-layout container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className={PRIMARY_CARD}>\n              <h1>{title}</h1>\n              <pre>{preformatted}</pre>\n              <div>{unformatted}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { grey } from '@material-ui/core/colors';\n\nexport const styles = makeStyles(() => ({\n  paper: {\n    maxHeight: 200,\n    overflow: 'auto',\n    zIndex: 1500,\n  },\n  span: {\n    width: '70px',\n    textAlign: 'center',\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  popper: {\n    zIndex: 4,\n  },\n}));\n\nexport const muiTheme = {\n  dark: createMuiTheme({\n    palette: {\n      type: 'dark',\n      primary: grey,\n      secondary: grey,\n      primaryBackground: '#222222',\n      primaryBackgroundHighlight: '#000000',\n      primaryBackgroundInput: '#D3D3D3',\n      primaryBackgroundDim: '#333333',\n      primaryBackgroundLight: '#757575',\n      primaryForeground: '#D3D3D3',\n      primaryForegroundDim: '#000000',\n      primaryForegroundActive: '#9bb7d6',\n      secondaryBackground: '#000000',\n      secondaryBackgroundDim: '#444444',\n      secondaryForeground: '#D3D3D3',\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  }),\n  light: createMuiTheme({\n    palette: {\n      type: 'light',\n      primary: grey,\n      secondary: grey,\n      primaryBackground: '#F1F1F1',\n      primaryBackgroundHighlight: '#FFFFFF',\n      primaryBackgroundInput: '#FFFFFF',\n      primaryBackgroundDim: '#8A8A8A',\n      primaryBackgroundLight: '#e0e0e0',\n      primaryForeground: '#333333',\n      primaryForegroundDim: '#808080',\n      primaryForegroundActive: '#0074D9',\n      secondaryBackground: '#F1F1F1',\n      secondaryBackgroundDim: '#C0C0C0',\n      secondaryForeground: '#222222',\n    },\n    props: {\n      MuiButtonBase: {\n        disableRipple: true,\n      },\n    },\n  }),\n};\n","/* eslint-disable no-plusplus */\n\n// Adapted from https://github.com/feross/fromentries/blob/29b52a850bb3a47c390937631c2638edf3443942/index.js\nexport function fromEntries(iterable) {\n  return [...iterable]\n    .reduce((obj, { 0: key, 1: val }) => Object.assign(obj, { [key]: val }), {});\n}\n\nexport function range(length) {\n  return [...Array(length).keys()];\n}\n\n/**\n * Select between a singular and plural version of a word,\n * based on an item count.\n * @param {string} singular The singular version of the word.\n * @param {string} plural The plural version of the word.\n * @param {number} count The number of items.\n * @returns {string} Singular if count is one, else plural.\n */\nexport function pluralize(singular, plural, count) {\n  return (count === 1 ? singular : plural);\n}\n\n/**\n * Capitalize a the first letter of a string.\n * @param {string} word A string to capitalize.\n * @returns {string} The word parameter with the first letter capitalized.\n */\nexport function capitalize(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\n/**\n * Generate a new scope name which does not\n * conflict / overlap with a previous scope name.\n * Really these just need to be unique within the coordination object.\n * So in theory they could be String(Math.random()) or uuidv4() or something.\n * However it may be good to make them more human-readable and memorable\n * since eventually we will want to expose a UI to update the coordination.\n * @param {string[]} prevScopes Previous scope names.\n * @returns {string} The new scope name.\n */\nexport function getNextScope(prevScopes) {\n  // Keep an ordered list of valid characters.\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  // Store the value of the next character for each position\n  // in the new string.\n  // For example, [0] -> \"A\", [1] -> \"B\", [0, 1] -> \"AB\"\n  const nextCharIndices = [0];\n\n  // Generate a new scope name,\n  // potentially conflicting with an existing name.\n  // Reference: https://stackoverflow.com/a/12504061\n  function next() {\n    const r = [];\n    nextCharIndices.forEach((charIndex) => {\n      r.unshift(chars[charIndex]);\n    });\n    let increment = true;\n    for (let i = 0; i < nextCharIndices.length; i++) {\n      const val = ++nextCharIndices[i];\n      if (val >= chars.length) {\n        nextCharIndices[i] = 0;\n      } else {\n        increment = false;\n        break;\n      }\n    }\n    if (increment) {\n      nextCharIndices.push(0);\n    }\n    return r.join('');\n  }\n\n  let nextScope;\n  do {\n    nextScope = next();\n  } while (prevScopes.includes(nextScope));\n  return nextScope;\n}\n\n/**\n * Get a representative PixelSource from a loader object returned from\n * the Vitessce imaging loaders\n * @param {object} loader { data: (PixelSource[]|PixelSource), metadata, channels } object\n * @param {number=} level Level of the multiscale loader from which to get a PixelSource\n * @returns {object} PixelSource object\n */\nexport function getSourceFromLoader(loader, level) {\n  const { data } = loader;\n  const source = Array.isArray(data) ? data[(level || data.length - 1)] : data;\n  return source;\n}\n\n/*\n * Helper method to determine whether pixel data is interleaved and rgb or not.\n * @param {object} loader\n */\nexport function isRgb(loader) {\n  const source = getSourceFromLoader(loader);\n  const { shape, dtype, labels } = source;\n  const channelSize = shape[labels.indexOf('c')];\n  return (channelSize === 3) && dtype === 'Uint8';\n}\n","import { range } from '../../utils';\n\nexport const COMPONENT_ID_PREFIX = 'i';\n\nfunction sum(a) {\n  return a.reduce((x, y) => x + y, 0);\n}\n\nexport function makeGridLayout(colXs, colLayout) {\n  const colWs = [];\n  for (let i = 0; i < colXs.length; i++) { // eslint-disable-line no-plusplus\n    colWs.push(colXs[i + 1] - colXs[i]);\n  }\n  return Object.entries(colLayout).map(([id, spec]) => ({\n    i: id,\n    y: spec.y,\n    h: spec.h || 1,\n    x: colXs[spec.x],\n    w: sum(colWs.slice(spec.x, spec.x + (spec.w || 1))),\n  }));\n}\n\nexport function getMaxRows(layouts) {\n  return Math.max(\n    ...Object.values(layouts).map(\n      layout => Math.max(\n        ...layout.map(xywh => xywh.y + xywh.h),\n      ),\n    ),\n  );\n}\n\nexport function resolveLayout(layout) {\n  const cols = {};\n  const layouts = {};\n  const breakpoints = {};\n  const components = {};\n  const positions = {};\n\n  (('components' in layout) ? layout.components : layout).forEach(\n    (def, i) => {\n      const id = `${COMPONENT_ID_PREFIX}${i}`;\n      components[id] = {\n        component: def.component,\n        props: def.props || {},\n        coordinationScopes: def.coordinationScopes || {},\n      };\n      positions[id] = {\n        id, x: def.x, y: def.y, w: def.w, h: def.h,\n      };\n    },\n  );\n\n  if ('components' in layout) {\n    Object.entries(layout.columns).forEach(\n      ([width, columnXs]) => {\n        cols[width] = columnXs[columnXs.length - 1];\n        layouts[width] = makeGridLayout(columnXs, positions);\n        breakpoints[width] = width;\n      },\n    );\n  } else {\n    // static layout\n    const id = 'ID';\n    const columnCount = 12;\n    cols[id] = columnCount;\n    layouts[id] = makeGridLayout(range(columnCount + 1), positions);\n    breakpoints[id] = 1000;\n    // Default has different numbers of columns at different widths,\n    // so we do need to override that to ensure the same number of columns,\n    // regardless of window width.\n  }\n  return {\n    cols, layouts, breakpoints, components,\n  };\n}\n","import React from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport isEqual from 'lodash/isEqual';\nimport { getMaxRows, resolveLayout, COMPONENT_ID_PREFIX } from './layout-utils';\n\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\nclass ResponsiveHeightGridLayout extends ResponsiveGridLayout {\n  componentDidUpdate(prevProps) {\n    if (this.props.height !== prevProps.height) {\n      this.onWindowResize();\n    }\n  }\n}\n\nexport default function VitessceGridLayout(props) {\n  const {\n    layout,\n    getComponent, padding, margin, draggableHandle,\n    reactGridLayoutProps, rowHeight, theme, height,\n    onRemoveComponent, onLayoutChange: onLayoutChangeProp,\n  } = props;\n\n  // If layout changes, update grid components.\n  const {\n    cols: gridCols, layouts: gridLayouts, breakpoints: gridBreakpoints, components: gridComponents,\n  } = resolveLayout(layout);\n\n  const maxRows = getMaxRows(gridLayouts);\n\n  // Inline CSS is generally avoided, but this saves the end-user a little work,\n  // and prevents class names from getting out of sync.\n  const style = (\n    <style>\n      {`\n        ${draggableHandle} {\n          cursor: grab;\n        }\n        ${draggableHandle}:active {\n          cursor: grabbing;\n        }\n     `}\n    </style>\n  );\n\n  const onLayoutChange = (newLayout) => {\n    if (newLayout.length === Object.entries(gridComponents).length) {\n      const newComponentProps = [];\n      newLayout.forEach((nextC) => {\n        const id = nextC.i;\n        const prevC = gridComponents[id];\n        if (prevC) {\n          const i = parseInt(id.substring(id.indexOf(COMPONENT_ID_PREFIX) + 1), 10);\n          const nextProps = {\n            x: nextC.x, y: nextC.y, w: nextC.w, h: nextC.h,\n          };\n          const prevProps = {\n            x: prevC.x, y: prevC.y, w: prevC.w, h: prevC.h,\n          };\n          if (!isEqual(nextProps, prevProps)) {\n            newComponentProps.push([i, nextProps]);\n          }\n        }\n      });\n      if (newComponentProps.length > 0) {\n        onLayoutChangeProp(newComponentProps);\n      }\n    }\n  };\n\n  const layoutChildren = Object.entries(gridComponents).map(([k, v], i) => {\n    const Component = getComponent(v.component);\n\n    const removeGridComponent = () => {\n      onRemoveComponent(i);\n    };\n\n    return (\n      <div key={k}>\n        <Component\n          {... v.props}\n          uuid={i}\n          coordinationScopes={v.coordinationScopes}\n          theme={theme}\n          removeGridComponent={removeGridComponent}\n        />\n      </div>\n    );\n  });\n  return (gridLayouts && gridComponents && gridBreakpoints && gridCols) && (\n    <>\n      {style}\n      <ResponsiveHeightGridLayout\n        className=\"layout\"\n        cols={gridCols}\n        layouts={gridLayouts}\n        breakpoints={gridBreakpoints}\n        height={height}\n        rowHeight={\n          rowHeight\n          || (\n            (window.innerHeight - 2 * padding - (maxRows - 1) * margin)\n            / maxRows\n          )}\n        containerPadding={[padding, padding]}\n        margin={[margin, margin]}\n        draggableHandle={draggableHandle}\n        onLayoutChange={onLayoutChange}\n        {... reactGridLayoutProps}\n      >\n        {layoutChildren}\n      </ResponsiveHeightGridLayout>\n    </>\n  );\n}\n\nVitessceGridLayout.defaultProps = {\n  padding: 10,\n  margin: 10,\n};\n","import uuidv4 from 'uuid/v4';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class AbstractLoader {\n  constructor({\n    type, url, requestInit, options,\n  }) {\n    this.type = type;\n    this.url = url;\n    this.requestInit = requestInit;\n    this.options = options;\n\n    this.subscriptions = {};\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  load() {\n    throw new Error('The load() method has not been implemented.');\n  }\n\n  subscribe(subscriber) {\n    const token = uuidv4();\n    this.subscriptions[token] = subscriber;\n    return token;\n  }\n\n  unsubscribe(token) {\n    delete this.subscriptions[token];\n  }\n\n  publish(data) {\n    Object.values(this.subscriptions).forEach((subscriber) => {\n      subscriber(data);\n    });\n  }\n}\n","/**\n * A loader error ancestor class containing a default constructor\n * and a stub for the required warnInConsole() method.\n */\nexport default class AbstractLoaderError {\n  constructor(message) {\n    this.message = message;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  warnInConsole() {\n    throw new Error('The warnInConsole() method has not been implemented.');\n  }\n}\n","import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderFetchError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl, responseHeaders) {\n    super(`Error HTTP status fetching ${datasetType}.`);\n    this.name = 'LoaderFetchError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n    this.responseHeaders = responseHeaders;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetUrl, responseHeaders,\n    } = this;\n    console.warn(\n      `${datasetType} from ${datasetUrl}: fetch failed`,\n      responseHeaders,\n    );\n  }\n}\n","import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderValidationError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl, reason) {\n    super(`Error while validating ${datasetType}.`);\n    this.name = 'LoaderValidationError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n    this.reason = reason;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetUrl, reason,\n    } = this;\n    console.warn(\n      `${datasetType} from ${datasetUrl}: validation failed`,\n      JSON.stringify(reason, null, 2),\n    );\n  }\n}\n","import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderNotFoundError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl) {\n    super(`Error finding loader for ${datasetType}.`);\n    this.name = 'LoaderNotFoundError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetFileType, datasetUrl,\n    } = this;\n    if (datasetFileType && datasetUrl) {\n      console.warn(\n        `${datasetType} from ${datasetUrl}: unable to find loader for fileType ${datasetFileType}`,\n      );\n    } else {\n      console.warn(\n        `${datasetType}: unable to find loader`,\n      );\n    }\n  }\n}\n","\n\nexport default class LoaderResult {\n  constructor(data, url, coordinationValues = null) {\n    this.data = data;\n    this.url = url;\n    this.coordinationValues = coordinationValues;\n  }\n}\n","import Ajv from 'ajv';\nimport AbstractLoader from './AbstractLoader';\nimport { LoaderFetchError, LoaderValidationError, AbstractLoaderError } from './errors/index';\nimport LoaderResult from './LoaderResult';\n\nimport cellsSchema from '../schemas/cells.schema.json';\nimport moleculesSchema from '../schemas/molecules.schema.json';\nimport neighborhoodsSchema from '../schemas/neighborhoods.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\n\nconst typeToSchema = {\n  cells: cellsSchema,\n  molecules: moleculesSchema,\n  neighborhoods: neighborhoodsSchema,\n  raster: rasterSchema,\n  'cell-sets': cellSetsSchema,\n};\n\nexport default class JsonLoader extends AbstractLoader {\n  constructor(params) {\n    super(params);\n\n    const { type } = params;\n    this.schema = typeToSchema[type];\n  }\n\n  load() {\n    const {\n      url, requestInit, type, fileType,\n    } = this;\n    if (this.data) {\n      return this.data;\n    }\n    this.data = fetch(url, requestInit)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(new LoaderFetchError(type, fileType, url, response.headers));\n      })\n      .catch(reason => Promise.resolve(reason))\n      .then((data) => {\n        if (data instanceof AbstractLoaderError) {\n          return Promise.reject(data);\n        }\n        const [valid, reason] = this.validate(data);\n        if (valid) {\n          return Promise.resolve(new LoaderResult(data, url));\n        }\n        return Promise.reject(new LoaderValidationError(type, fileType, url, reason));\n      });\n    return this.data;\n  }\n\n  validate(data) {\n    const { schema, type } = this;\n    if (!schema) {\n      throw Error(`No schema for ${type}`);\n    }\n    const validate = new Ajv().compile(schema);\n    const valid = validate(data);\n    let failureReason;\n    if (!valid) {\n      failureReason = validate.errors;\n    }\n    return [valid, failureReason];\n  }\n}\n","import { HTTPStore, KeyError } from 'zarr';\nimport AbstractLoader from './AbstractLoader';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class AbstractZarrLoader extends AbstractLoader {\n  constructor(params) {\n    super(params);\n\n    // eslint-disable-next-line no-unused-vars\n    const { url, requestInit } = this;\n    // TODO: We should probably add a way of allowing HEAD requests as well:\n    // https://github.com/gzuidhof/zarr.js/blob/375ce0c299469a970da6bb5653513564e25806bb/docs/getting-started/remote-data.md#stores\n    const supportedMethods = ['GET'];\n    this.store = new HTTPStore(url, {\n      supportedMethods, fetchOptions: requestInit,\n    });\n  }\n\n  /**\n   * Class method for decoding json from the store.\n   * @param {string} key A path to the item.\n   * @returns {Promise} This async function returns a promise\n   * that resolves to the parsed JSON if successful.\n   * @throws This may throw an error.\n   */\n  async getJson(key) {\n    try {\n      const buf = await this.store.getItem(key);\n      const text = new TextDecoder('utf-8').decode(buf);\n      return JSON.parse(text);\n    } catch (err) {\n      if (err instanceof KeyError) {\n        return {};\n      }\n      throw err;\n    }\n  }\n}\n","import { openArray } from 'zarr';\nimport AbstractZarrLoader from './AbstractZarrLoader';\nimport LoaderResult from './LoaderResult';\n\nexport default class MatrixZarrLoader extends AbstractZarrLoader {\n  loadAttrs() {\n    if (this.attrs) {\n      return this.attrs;\n    }\n    this.attrs = this.getJson('.zattrs');\n    return this.attrs;\n  }\n\n  loadArr() {\n    const { store } = this;\n    if (this.arr) {\n      return this.arr;\n    }\n    this.arr = openArray({ store, path: '/', mode: 'r' }).then(z => new Promise((resolve) => {\n      z.getRaw([null, null])\n        .then(resolve);\n    }));\n    return this.arr;\n  }\n\n  load() {\n    return Promise\n      .all([this.loadAttrs(), this.loadArr()])\n      .then(data => Promise.resolve(new LoaderResult(data, null)));\n  }\n}\n","import genesSchema from '../schemas/genes.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nexport default class GenesJsonAsMatrixZarrLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n\n    this.schema = genesSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data, url } = payload;\n    const cols = Object.keys(data);\n    const rows = (cols.length > 0 ? Object.keys(data[cols[0]].cells) : []);\n    const attrs = { rows, cols };\n\n    const normalizedFlatMatrix = rows\n      .flatMap(cellId => cols.map(\n        geneId => (data[geneId].cells[cellId] / data[geneId].max) * 255,\n      ));\n    // Need to wrap the NestedArray to mock the HTTPStore-based array\n    // which returns promises.\n    const arr = { data: Uint8Array.from(normalizedFlatMatrix) };\n    return Promise.resolve(new LoaderResult([attrs, arr], url));\n  }\n}\n","import { extent } from 'd3-array';\nimport range from 'lodash/range';\nimport clustersSchema from '../schemas/clusters.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nexport default class ClustersJsonAsMatrixZarrLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n\n    this.schema = clustersSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data, url } = payload;\n    const { rows, cols, matrix } = data;\n    const attrs = {\n      rows: cols,\n      cols: rows,\n    };\n    const shape = [attrs.rows.length, attrs.cols.length];\n    // Normalize values by converting to one-byte integers.\n    // Normalize for each gene (column) independently.\n    const normalizedMatrix = matrix.map((col) => {\n      const [min, max] = extent(col);\n      const normalize = d => Math.floor(((d - min) / (max - min)) * 255);\n      return col.map(normalize);\n    });\n    // Transpose the normalized matrix.\n    const tNormalizedMatrix = range(shape[0])\n      .map(i => range(shape[1]).map(j => normalizedMatrix[j][i]));\n    // Flatten the transposed matrix.\n    const normalizedFlatMatrix = tNormalizedMatrix.flat();\n    // Need to wrap the NestedArray to mock the HTTPStore-based array\n    // which returns promises.\n    const arr = { data: Uint8Array.from(normalizedFlatMatrix) };\n    return Promise.resolve(new LoaderResult([attrs, arr], url));\n  }\n}\n","import cellSetsSchema from '../../schemas/cell-sets.schema.json';\nimport cellSetsTabularSchema from '../../schemas/cell-sets-tabular.schema.json';\n\nexport const FILE_EXTENSION_JSON = 'json';\nexport const MIME_TYPE_JSON = 'application/json';\n\nexport const FILE_EXTENSION_TABULAR = 'csv';\nexport const MIME_TYPE_TABULAR = 'text/csv';\nexport const SEPARATOR_TABULAR = ',';\n// The NA value below corresponds to the allowed string enum\n// value \"NA\" in the cell-sets-tabular JSON schema.\nexport const NA_VALUE_TABULAR = 'NA';\n\nexport const SETS_DATATYPE_CELL = 'cell';\nexport const HIERARCHICAL_SCHEMAS = {\n  cell: {\n    latestVersion: '0.1.3',\n    schema: cellSetsSchema,\n  },\n};\n\nexport const TABULAR_SCHEMAS = {\n  cell: {\n    schema: cellSetsTabularSchema,\n  },\n};\n","import React from 'react';\nimport { COORDINATE_SYSTEM } from 'deck.gl';\nimport {\n  SETS_DATATYPE_CELL,\n  HIERARCHICAL_SCHEMAS,\n} from './sets/constants';\nimport { PRIMARY_CARD } from './classNames';\n\nexport function makeCellStatusMessage(cellInfoFactors) {\n  return Object.entries(cellInfoFactors).map(\n    ([factor, value]) => `${factor}: ${value}`,\n  ).join('; ');\n}\n\nexport function cellLayerDefaultProps(cells, updateStatus, setCellHighlight, setComponentHover) {\n  return {\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    data: cells,\n    pickable: true,\n    autoHighlight: true,\n    stroked: true,\n    filled: true,\n    getElevation: 0,\n    onHover: (info) => {\n      // Notify the parent component that its child component is\n      // the \"hover source\".\n      if (setComponentHover) {\n        setComponentHover();\n      }\n      if (info.object) {\n        const [cellId, cellInfo] = info.object;\n        const { factors = {} } = cellInfo;\n        if (updateStatus) {\n          updateStatus(makeCellStatusMessage(factors));\n        }\n        if (setCellHighlight) {\n          setCellHighlight(cellId);\n        }\n      } else if (setCellHighlight) {\n        // Clear the currently-hovered cell info by passing null.\n        setCellHighlight('');\n      }\n    },\n  };\n}\n\nexport const DEFAULT_COLOR = [128, 128, 128];\n\n// From https://personal.sron.nl/~pault/#sec:qualitative\nexport const PALETTE = [\n  [68, 119, 170],\n  [136, 204, 238],\n  [68, 170, 153],\n  [17, 119, 51],\n  [153, 153, 51],\n  [221, 204, 119],\n  [204, 102, 119],\n  [136, 34, 85],\n  [170, 68, 153],\n];\n\nexport const VIEWER_PALETTE = [\n  [0, 0, 255],\n  [0, 255, 0],\n  [255, 0, 255],\n  [255, 255, 0],\n  [0, 255, 255],\n  [255, 255, 255],\n  [255, 128, 0],\n  [255, 0, 0],\n];\n\nexport const COLORMAP_OPTIONS = [\n  'viridis',\n  'greys',\n  'magma',\n  'jet',\n  'hot',\n  'bone',\n  'copper',\n  'summer',\n  'density',\n  'inferno',\n];\n\nexport const DEFAULT_GL_OPTIONS = { webgl2: true };\n\nexport function createDefaultUpdateStatus(componentName) {\n  return message => console.warn(`${componentName} updateStatus: ${message}`);\n}\n\nexport function createDefaultUpdateCellsSelection(componentName) {\n  return cellsSelection => console.warn(`${componentName} updateCellsSelection: ${cellsSelection}`);\n}\n\nexport function createDefaultUpdateCellsHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateCellsHover: ${hoverInfo.cellId}`);\n}\n\nexport function createDefaultUpdateGenesHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateGenesHover: ${hoverInfo.geneId}`);\n}\n\nexport function createDefaultUpdateViewInfo(componentName) {\n  return viewInfo => console.warn(`${componentName} updateViewInfo: ${viewInfo}`);\n}\n\nexport function createDefaultClearPleaseWait() {\n  return () => {};\n}\n\n\n/**\n * Copy a typed array into a new array buffer.\n * @param {Uint8Array} arr The typed array to be copied.\n * @returns {Uint8Array} The copied array.\n */\nexport function copyUint8Array(arr) {\n  const newBuffer = new ArrayBuffer(arr.buffer.byteLength);\n  const newArr = new Uint8Array(newBuffer);\n  newArr.set(arr);\n  return newArr;\n}\n\nexport function getNextNumberedNodeName(nodes, prefix) {\n  let i = 1;\n  if (nodes) {\n    // eslint-disable-next-line no-loop-func\n    while (nodes.find(n => n.name === `${prefix}${i}`)) {\n      // eslint-disable-next-line no-plusplus\n      i++;\n    }\n  }\n  return `${prefix}${i}`;\n}\n\n/**\n * Create a new selected cell set based on a cell selection.\n * @param {string[]} cellSelection An array of cell IDs.\n * @param {object[]} additionalCellSets The previous array of user-defined cell sets.\n * @param {function} setCellSetSelection The setter function for cell set selections.\n * @param {function} setAdditionalCellSets The setter function for user-defined cell sets.\n */\nexport function setCellSelection(cellSelection, additionalCellSets, cellSetColor, setCellSetSelection, setAdditionalCellSets, setCellSetColor, setCellColorEncoding, prefix = 'Selection ') {\n  const CELL_SELECTIONS_LEVEL_ZERO_NAME = 'My Selections';\n\n  const selectionsLevelZeroNode = additionalCellSets?.tree.find(\n    n => n.name === CELL_SELECTIONS_LEVEL_ZERO_NAME,\n  );\n  const nextAdditionalCellSets = {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [...(additionalCellSets ? additionalCellSets.tree : [])],\n  };\n\n  const nextName = getNextNumberedNodeName(selectionsLevelZeroNode?.children, prefix);\n  let colorIndex = 0;\n  if (selectionsLevelZeroNode) {\n    colorIndex = selectionsLevelZeroNode.children.length;\n    selectionsLevelZeroNode.children.push({\n      name: nextName,\n      set: cellSelection.map(d => [d, null]),\n    });\n  } else {\n    nextAdditionalCellSets.tree.push({\n      name: CELL_SELECTIONS_LEVEL_ZERO_NAME,\n      children: [\n        {\n          name: nextName,\n          set: cellSelection.map(d => [d, null]),\n        },\n      ],\n    });\n  }\n  setAdditionalCellSets(nextAdditionalCellSets);\n  const nextPath = ['My Selections', nextName];\n  setCellSetColor([\n    ...(cellSetColor || []),\n    {\n      path: nextPath,\n      color: PALETTE[colorIndex % PALETTE.length],\n    },\n  ]);\n  setCellSetSelection([nextPath]);\n  setCellColorEncoding('cellSetSelection');\n}\n\nexport function mergeCellSets(cellSets, additionalCellSets) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [\n      ...(cellSets ? cellSets.tree : []),\n      ...(additionalCellSets ? additionalCellSets.tree : []),\n    ],\n  };\n}\n\nexport function createWarningComponent(props) {\n  return () => {\n    const {\n      title,\n      message,\n    } = props;\n    return (\n      <div className={PRIMARY_CARD}>\n        <h1>{title}</h1>\n        <div>{message}</div>\n      </div>\n    );\n  };\n}\n\nexport function asEsModule(component) {\n  return {\n    __esModule: true,\n    default: component,\n  };\n}\n","import { RENDERING_MODES } from '@hms-dbmi/viv';\n\nexport const GLOBAL_LABELS = ['z', 't'];\n\nexport const DEFAULT_RASTER_DOMAIN_TYPE = 'Min/Max';\n\nexport const DEFAULT_RASTER_LAYER_PROPS = {\n  visible: true,\n  colormap: null,\n  opacity: 1,\n  domainType: DEFAULT_RASTER_DOMAIN_TYPE,\n  transparentColor: [0, 0, 0],\n  renderingMode: RENDERING_MODES.ADDITIVE,\n  use3d: false,\n};\n\nexport const DEFAULT_MOLECULES_LAYER = {\n  opacity: 1, radius: 20, visible: true,\n};\nexport const DEFAULT_CELLS_LAYER = {\n  opacity: 1, radius: 50, visible: true, stroked: false,\n};\nexport const DEFAULT_NEIGHBORHOODS_LAYER = {\n  visible: false,\n};\n\nexport const DEFAULT_LAYER_TYPE_ORDERING = [\n  'molecules',\n  'cells',\n  'neighborhoods',\n  'raster',\n];\n","import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\nimport { project32, picking } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Texture2D, isWebGL2 } from '@luma.gl/core';\nimport { XRLayer } from '@hms-dbmi/viv';\nimport { fs, vs } from './bitmask-layer-shaders';\n\nfunction padWithDefault(arr, defaultValue, padWidth) {\n  const newArr = [...arr];\n  for (let i = 0; i < padWidth; i += 1) {\n    newArr.push(defaultValue);\n  }\n  return newArr;\n}\n\nconst defaultProps = {\n  hoveredCell: { type: 'number', value: null, compare: true },\n  cellColor: { type: 'object', value: null, compare: true },\n};\n\n/**\n * A BitmapLayer that performs aggregation in the fragment shader,\n * and renders its texture from a Uint8Array rather than an ImageData.\n */\nexport default class BitmaskLayer extends XRLayer {\n  // eslint-disable-next-line class-methods-use-this\n  getShaders() {\n    return {\n      fs,\n      vs,\n      modules: [project32, picking],\n    };\n  }\n\n  updateState({ props, oldProps, changeFlags }) {\n    super.updateState({ props, oldProps, changeFlags });\n    if (props.cellColor?.data !== oldProps.cellColor?.data) {\n      this.setColorTexture();\n    }\n  }\n\n  setColorTexture() {\n    const { height, width, data } = this.props.cellColor;\n    const colorTex = new Texture2D(this.context.gl, {\n      width,\n      height,\n      // Only use Float32 so we don't have to write two shaders\n      data,\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n      },\n      format: GL.RGB,\n      dataFormat: GL.RGB,\n      type: GL.UNSIGNED_BYTE,\n    });\n    this.setState({ colorTex });\n  }\n\n  draw(opts) {\n    const { uniforms } = opts;\n    const { channelIsOn, hoveredCell } = this.props;\n    const { textures, model, colorTex } = this.state;\n    // Render the image\n    if (textures && model && colorTex) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            hovered: hoveredCell || 0,\n            colorTex,\n            colorTexHeight: colorTex.height,\n            colorTexWidth: colorTex.width,\n            channelIsOn: padWithDefault(\n              channelIsOn,\n              false,\n              // There are six texture entries on the shaders\n              6 - channelIsOn.length,\n            ),\n            ...textures,\n          }),\n        )\n        .draw();\n    }\n  }\n\n  /**\n   * This function creates textures from the data\n   */\n  dataToTexture(data, width, height) {\n    const isWebGL2On = isWebGL2(this.context.gl);\n    return new Texture2D(this.context.gl, {\n      width,\n      height,\n      // Only use Float32 so we don't have to write two shaders\n      data: new Float32Array(data),\n      // we don't want or need mimaps\n      mipmaps: false,\n      parameters: {\n        // NEAREST for integer data\n        [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n        [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n        // CLAMP_TO_EDGE to remove tile artifacts\n        [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n        [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n      },\n      format: isWebGL2On ? GL.R32F : GL.LUMINANCE,\n      dataFormat: isWebGL2On ? GL.RED : GL.LUMINANCE,\n      type: GL.FLOAT,\n    });\n  }\n}\nBitmaskLayer.layerName = 'BitmaskLayer';\nBitmaskLayer.defaultProps = defaultProps;\n","export const vs = `\n#define SHADER_NAME bitmask-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\nattribute vec3 instancePickingColors;\n\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = instancePickingColors;\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n  vTexCoord = texCoords;\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n`;\n\nexport const fs = `\n#define SHADER_NAME bitmask-layer-fragment-shader\nprecision highp float;\n\n// Data (mask) texture\nuniform sampler2D channel0;\nuniform sampler2D channel1;\nuniform sampler2D channel2;\nuniform sampler2D channel3;\nuniform sampler2D channel4;\nuniform sampler2D channel5;\n\n// Color texture\nuniform sampler2D colorTex;\nuniform float colorTexHeight;\nuniform float colorTexWidth;\nuniform float hovered;\n// range\nuniform bool channelIsOn[6];\n\n// opacity\nuniform float opacity;\n\nvarying vec2 vTexCoord;\n\nvec4 sampleAndGetColor(sampler2D dataTex, vec2 coord, bool isOn){\n  float sampledData = texture(dataTex, coord).r;\n  vec4 hoveredColor = float(sampledData == hovered && sampledData > 0. && hovered > 0.) * vec4(0., 0., 1., 1.);\n  // Colors are laid out corresponding to ids in row-major order in the texture.  So if width of the texture is 10, and you want ID 25,\n  // you need coordinate (1, 4) (i.e 2 rows down, and 5 columns over indexed from 0 for a total of 25 units covered in row major order).\n  vec2 colorTexCoord = vec2(mod(sampledData, colorTexWidth) / colorTexWidth, floor(sampledData / colorTexWidth) / (colorTexHeight - 1.));\n  vec4 sampledColor = vec4(texture(colorTex, colorTexCoord).rgb, 1.);\n  // Only return a color if the data is non-zero.\n  return max(0., min(sampledData, 1.)) * float(isOn) * (sampledColor + hoveredColor);\n}\n\nvoid main() {\n\n  gl_FragColor = sampleAndGetColor(channel0, vTexCoord, channelIsOn[0]);\n\n  // If the sampled color and the currently stored color (gl_FragColor) are identical, don't blend and use the sampled color,\n  // otherwise just use the currently stored color.  Repeat this for all channels.\n  vec4 sampledColor = sampleAndGetColor(channel1, vTexCoord, channelIsOn[1]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel2, vTexCoord, channelIsOn[2]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel3, vTexCoord, channelIsOn[3]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel4, vTexCoord, channelIsOn[4]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  sampledColor = sampleAndGetColor(channel5, vTexCoord, channelIsOn[5]);\n  gl_FragColor = (sampledColor == gl_FragColor || sampledColor == vec4(0.)) ? gl_FragColor : sampledColor;\n  // Apply the opacity if there is pixel data, and if the pixel data is empty i.e no segmentation, use 0 opacity.\n  gl_FragColor = vec4(gl_FragColor.rgb, (gl_FragColor.rgb == vec3(0., 0., 0.)) ? 0.0 : opacity);\n\n  geometry.uv = vTexCoord;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","import { getChannelStats } from '@hms-dbmi/viv';\nimport { Matrix4 } from 'math.gl';\n\nasync function getSingleSelectionStats2D({ loader, selection }) {\n  const data = Array.isArray(loader) ? loader[loader.length - 1] : loader;\n  const raster = await data.getRaster({ selection });\n  const selectionStats = getChannelStats(raster.data);\n  const { domain, autoSliders: slider } = selectionStats;\n  return { domain, slider };\n}\n\nasync function getSingleSelectionStats3D({ loader, selection }) {\n  const lowResSource = loader[loader.length - 1];\n  const { shape, labels } = lowResSource;\n  // eslint-disable-next-line no-bitwise\n  const sizeZ = shape[labels.indexOf('z')] >> (loader.length - 1);\n  const raster0 = await lowResSource.getRaster({\n    selection: { ...selection, z: 0 },\n  });\n  const rasterMid = await lowResSource.getRaster({\n    selection: { ...selection, z: Math.floor(sizeZ / 2) },\n  });\n  const rasterTop = await lowResSource.getRaster({\n    selection: { ...selection, z: sizeZ - 1 },\n  });\n  const stats0 = getChannelStats(raster0.data);\n  const statsMid = getChannelStats(rasterMid.data);\n  const statsTop = getChannelStats(rasterTop.data);\n  return {\n    domain: [\n      Math.min(stats0.domain[0], statsMid.domain[0], statsTop.domain[0]),\n      Math.max(stats0.domain[1], statsMid.domain[1], statsTop.domain[1]),\n    ],\n    slider: [\n      Math.min(\n        stats0.autoSliders[0],\n        statsMid.autoSliders[0],\n        statsTop.autoSliders[0],\n      ),\n      Math.max(\n        stats0.autoSliders[1],\n        statsMid.autoSliders[1],\n        statsTop.autoSliders[1],\n      ),\n    ],\n  };\n}\n\n\n/**\n * Get bounding cube for a given loader i.e [[0, width], [0, height], [0, depth]]\n * @param {Object} loader PixelSource|PixelSource[]\n * @param {[]} selection Selection for stats.\n * @param {boolean} use3d Whether or not to get 3d stats.\n * @returns {Object} { domains, sliders }\n */\nexport const getSingleSelectionStats = async ({ loader, selection, use3d }) => {\n  const getStats = use3d\n    ? getSingleSelectionStats3D\n    : getSingleSelectionStats2D;\n  return getStats({ loader, selection });\n};\n\nexport const getMultiSelectionStats = async ({ loader, selections, use3d }) => {\n  const stats = await Promise.all(\n    selections.map(selection => getSingleSelectionStats({ loader, selection, use3d })),\n  );\n  const domains = stats.map(stat => stat.domain);\n  const sliders = stats.map(stat => stat.slider);\n  return { domains, sliders };\n};\n\n/**\n * Get physical size scaling Matrix4\n * @param {Object} loader PixelSource\n * @returns {Object} matrix\n */\nexport function getPhysicalSizeScalingMatrix(loader) {\n  const { x, y, z } = loader?.meta?.physicalSizes ?? {};\n  if (x?.size && y?.size && z?.size) {\n    const min = Math.min(z.size, x.size, y.size);\n    const ratio = [x.size / min, y.size / min, z.size / min];\n    return new Matrix4().scale(ratio);\n  }\n  return new Matrix4().identity();\n}\n\n/**\n * Get bounding cube for a given loader\n * @param {Object} loader PixelSource|PixelSource[]\n * @returns {Array} [0, width], [0, height], [0, depth]]\n */\nexport function getBoundingCube(loader) {\n  const source = Array.isArray(loader) ? loader[0] : loader;\n  const { shape, labels } = source;\n  const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(source);\n  const xSlice = [0, physicalSizeScalingMatrix[0] * shape[labels.indexOf('x')]];\n  const ySlice = [0, physicalSizeScalingMatrix[5] * shape[labels.indexOf('y')]];\n  const zSlice = [\n    0,\n    physicalSizeScalingMatrix[10] * shape[labels.indexOf('z')],\n  ];\n  return [xSlice, ySlice, zSlice];\n}\n\n\nexport function abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) { --maxNaiveDigits; } // Wasted on \".\"\n  if (value < 1) { --maxNaiveDigits; } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n\n  const naive = Intl.NumberFormat(\n    'en-US',\n    {\n      maximumSignificantDigits: maxNaiveDigits,\n      useGrouping: false,\n    },\n  ).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n","/* eslint-disable no-plusplus */\nimport shortNumber from 'short-number';\nimport isEqual from 'lodash/isEqual';\nimport {\n  getDefaultInitialViewState,\n  MultiscaleImageLayer,\n  ImageLayer,\n  VolumeLayer,\n} from '@hms-dbmi/viv';\nimport { extent } from 'd3-array';\nimport { Matrix4 } from 'math.gl';\nimport { divide, compare, unit } from 'mathjs';\nimport { pluralize, getSourceFromLoader, isRgb } from '../../utils';\nimport { VIEWER_PALETTE } from '../utils';\nimport {\n  GLOBAL_LABELS,\n  DEFAULT_RASTER_LAYER_PROPS,\n  DEFAULT_LAYER_TYPE_ORDERING,\n} from './constants';\nimport BitmaskLayer from '../../layers/BitmaskLayer';\nimport { getMultiSelectionStats } from '../layer-controller/utils';\n\nexport function square(x, y, r) {\n  return [[x, y + r], [x + r, y], [x, y - r], [x - r, y]];\n}\n\n/**\n * Sort spatial layer definition array,\n * to keep the ordering in the layer controller\n * consistent.\n * Intended to be used with auto-initialized layer\n * definition arrays only, as a pre-defined layer array\n * should not be re-ordered.\n * @param {object[]} layers Array of layer definition objects.\n * Object must have a .type property.\n */\nexport function sortLayers(layers) {\n  return layers.sort((a, b) => (\n    DEFAULT_LAYER_TYPE_ORDERING.indexOf(a.type) - DEFAULT_LAYER_TYPE_ORDERING.indexOf(b.type)\n  ));\n}\n\n/**\n * Return the midpoint of the global dimensions.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction getDefaultGlobalSelection(source) {\n  const globalIndices = source.labels\n    .filter(dim => GLOBAL_LABELS.includes(dim));\n  const selection = {};\n  globalIndices.forEach((dim) => {\n    selection[dim] = Math.floor(\n      (source.shape[source.labels.indexOf(dim)] || 0) / 2,\n    );\n  });\n  return selection;\n}\n\n/**\n * Create a default selection using the midpoint of the available global dimensions,\n * and then the first four available selections from the first selectable channel.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction buildDefaultSelection(source) {\n  const selection = [];\n  const globalSelection = getDefaultGlobalSelection(source);\n  // First non-global dimension with some sort of selectable values\n  const firstNonGlobalDimension = source.labels.filter(\n    dim => !GLOBAL_LABELS.includes(dim)\n      && source.shape[source.labels.indexOf(dim)],\n  )[0];\n  for (let i = 0; i < Math.min(4, source.shape[\n    source.labels.indexOf(firstNonGlobalDimension)\n  ]); i += 1) {\n    selection.push(\n      {\n        [firstNonGlobalDimension]: i,\n        ...globalSelection,\n      },\n    );\n  }\n  return selection;\n}\n\n/**\n * @param {Array.<number>} shape loader shape\n */\nexport function isInterleaved(shape) {\n  const lastDimSize = shape[shape.length - 1];\n  return lastDimSize === 3 || lastDimSize === 4;\n}\n\n/**\n * Initialize the channel selections for an individual layer.\n * @param {object} loader A viv loader instance with channel names appended by Vitessce loaders\n * of the form { data: (PixelSource[]|PixelSource), metadata: Object, channels }\n * @returns {object[]} An array of selected channels with default\n * domain/slider settings.\n */\nexport async function initializeLayerChannels(loader, use3d) {\n  const result = [];\n  const source = getSourceFromLoader(loader);\n  // Add channel automatically as the first avaialable value for each dimension.\n  let defaultSelection = buildDefaultSelection(source);\n  defaultSelection = isInterleaved(source.shape)\n    ? [{ ...defaultSelection[0], c: 0 }] : defaultSelection;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data, selections: defaultSelection, use3d,\n  });\n\n  const domains = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.domains;\n  const colors = isRgb(loader)\n    ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]]\n    : null;\n  const sliders = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.sliders;\n\n  defaultSelection.forEach((selection, i) => {\n    const domain = domains[i];\n    const slider = sliders[i];\n    const channel = {\n      selection,\n      // eslint-disable-next-line no-nested-ternary\n      color: colors ? colors[i]\n        : defaultSelection.length !== 1\n          ? VIEWER_PALETTE[i] : [255, 255, 255],\n      visible: true,\n      slider: slider || domain,\n    };\n    result.push(channel);\n  });\n  return result;\n}\n\nfunction getMetaWithTransformMatrices(imageMeta, imageLoaders) {\n  // Do not fill in transformation matrices if any of the layers specify one.\n  const sources = imageLoaders.map(loader => getSourceFromLoader(loader));\n  if (\n    imageMeta.map(meta => meta?.metadata?.transform?.matrix\n      || meta?.metadata?.transform?.scale\n      || meta?.metadata?.transform?.translate).some(Boolean)\n    || sources.every(\n      source => !source.meta?.physicalSizes?.x || !source.meta?.physicalSizes?.y,\n    )\n  ) {\n    return imageMeta;\n  }\n  // Get the minimum physical among all the current images.\n  const minPhysicalSize = sources.reduce((acc, source) => {\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('µ', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('µ', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('µ', 'u')));\n    }\n    acc[0] = (acc[0] === undefined || compare(sizes[0], acc[0]) === -1) ? sizes[0] : acc[0];\n    acc[1] = (acc[1] === undefined || compare(sizes[1], acc[1]) === -1) ? sizes[1] : acc[1];\n    acc[2] = (acc[2] === undefined || compare(sizes[2], acc[2]) === -1) ? sizes[2] : acc[2];\n    return acc;\n  }, []);\n  const imageMetaWithTransform = imageMeta.map((meta, j) => {\n    const source = sources[j];\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('µ', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('µ', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('µ', 'u')));\n    }\n    // Find the ratio of the sizes to get the scaling factor.\n    const scale = sizes.map((i, k) => divide(i, minPhysicalSize[k]));\n    // Add in z dimension needed for Matrix4 scale API.\n    if (!scale[2]) {\n      scale[2] = 1;\n    }\n    // no need to store/use identity scaling\n    if (isEqual(scale, [1, 1, 1])) {\n      return meta;\n    }\n    // Make sure to scale the z direction by one.\n    const matrix = new Matrix4().scale([...scale]);\n    const newMeta = { ...meta };\n    newMeta.metadata = {\n      ...newMeta.metadata,\n      // We don't want to store matrix objects in the view config.\n      transform: { matrix: matrix.toArray() },\n    };\n    return newMeta;\n  });\n  return imageMetaWithTransform;\n}\n\n/**\n * Given a set of image layer loader creator functions,\n * create loader objects for an initial layer or set of layers,\n * which will be selected based on default values predefined in\n * the image data file or otherwise by a heuristic\n * (the midpoint of the layers array).\n * @param {object[]} rasterLayers A list of layer metadata objects with\n * shape { name, type, url, createLoader }.\n * @param {(string[]|null)} rasterRenderLayers A list of default raster layers. Optional.\n */\nexport async function initializeRasterLayersAndChannels(\n  rasterLayers,\n  rasterRenderLayers,\n  usePhysicalSizeScaling,\n) {\n  const nextImageLoaders = [];\n  let nextImageMetaAndLayers = [];\n  const autoImageLayerDefPromises = [];\n\n  // Start all loader creators immediately.\n  // Reference: https://eslint.org/docs/rules/no-await-in-loop\n  const loaders = await Promise.all(rasterLayers.map(layer => layer.loaderCreator()));\n\n  for (let i = 0; i < rasterLayers.length; i++) {\n    const layer = rasterLayers[i];\n    const loader = loaders[i];\n    nextImageLoaders[i] = loader;\n    nextImageMetaAndLayers[i] = layer;\n  }\n  if (usePhysicalSizeScaling) {\n    nextImageMetaAndLayers = getMetaWithTransformMatrices(nextImageMetaAndLayers, nextImageLoaders);\n  }\n  // No layers were pre-defined so set up the default image layers.\n  if (!rasterRenderLayers) {\n    // Midpoint of images list as default image to show.\n    const layerIndex = Math.floor(rasterLayers.length / 2);\n    const loader = nextImageLoaders[layerIndex];\n    const autoImageLayerDefPromise = initializeLayerChannels(loader)\n      .then(channels => Promise.resolve({\n        type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n        index: layerIndex,\n        ...DEFAULT_RASTER_LAYER_PROPS,\n        channels: channels.map((channel, j) => ({\n          ...channel,\n          ...(nextImageMetaAndLayers[layerIndex].channels\n            ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n        })),\n        modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n        transparentColor: layerIndex > 0 ? [0, 0, 0] : null,\n      }));\n    autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n  } else {\n    // The renderLayers parameter is a list of layer names to show by default.\n    const globalIndicesOfRenderLayers = rasterRenderLayers\n      .map(imageName => rasterLayers.findIndex(image => image.name === imageName));\n    for (let i = 0; i < globalIndicesOfRenderLayers.length; i++) {\n      const layerIndex = globalIndicesOfRenderLayers[i];\n      const loader = nextImageLoaders[layerIndex];\n      const autoImageLayerDefPromise = initializeLayerChannels(loader)\n        // eslint-disable-next-line no-loop-func\n        .then(channels => Promise.resolve({\n          type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n          index: layerIndex,\n          ...DEFAULT_RASTER_LAYER_PROPS,\n          channels: channels.map((channel, j) => ({\n            ...channel,\n            ...(nextImageMetaAndLayers[layerIndex].channels\n              ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n          })),\n          domainType: 'Min/Max',\n          modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n          transparentColor: i > 0 ? [0, 0, 0] : null,\n        }));\n      autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n    }\n  }\n\n  const autoImageLayerDefs = await Promise.all(autoImageLayerDefPromises);\n  return [autoImageLayerDefs, nextImageLoaders, nextImageMetaAndLayers];\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} params\n * @param {number} params.observationsCount\n * @param {string} params.observationsLabel\n * @param {string} params.observationsPluralLabel\n * @param {number} params.subobservationsCount\n * @param {string} params.subobservationsLabel\n * @param {string} params.subobservationsPluralLabel\n * @param {number} params.locationsCount\n * @returns {string} The subtitle string,\n * with info about items with zero counts omitted.\n */\nexport function makeSpatialSubtitle({\n  observationsCount, observationsLabel, observationsPluralLabel,\n  subobservationsCount, subobservationsLabel, subobservationsPluralLabel,\n  locationsCount,\n}) {\n  const parts = [];\n  if (subobservationsCount > 0) {\n    let part = `${subobservationsCount} ${pluralize(subobservationsLabel, subobservationsPluralLabel, subobservationsCount)}`;\n    if (locationsCount > 0) {\n      part += ` at ${shortNumber(locationsCount)} locations`;\n    }\n    parts.push(part);\n  }\n  if (observationsCount > 0) {\n    parts.push(`${observationsCount} ${pluralize(observationsLabel, observationsPluralLabel, observationsCount)}`);\n  }\n  return parts.join(', ');\n}\n\nexport function getInitialSpatialTargets({\n  width,\n  height,\n  cells,\n  imageLayerLoaders,\n  useRaster,\n  use3d,\n}) {\n  let initialTargetX = -Infinity;\n  let initialTargetY = -Infinity;\n  let initialTargetZ = -Infinity;\n  let initialZoom = -Infinity;\n  // Some backoff from completely filling the screen.\n  const zoomBackoff = use3d ? 1.5 : 0.1;\n  const cellValues = Object.values(cells);\n  if (imageLayerLoaders.length > 0 && useRaster) {\n    for (let i = 0; i < imageLayerLoaders.length; i += 1) {\n      const viewSize = { height, width };\n      const { target, zoom: newViewStateZoom } = getDefaultInitialViewState(\n        imageLayerLoaders[i].data,\n        viewSize,\n        zoomBackoff,\n        use3d,\n      );\n      if (target[0] > initialTargetX) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetX = target[0];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[1] > initialTargetY) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetY = target[1];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[2] > initialTargetZ) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetZ = target[2];\n        initialZoom = newViewStateZoom;\n      } else {\n        initialTargetZ = null;\n      }\n    }\n  } else if (cellValues.length > 0\n    // Only use cellValues in quadtree calculation if there is\n    // centroid data in the cells (i.e not just ids).\n    && cellValues[0].xy\n    && !useRaster) {\n    const cellCoordinates = cellValues.map(c => c.xy);\n    let xExtent = extent(cellCoordinates, c => c[0]);\n    let yExtent = extent(cellCoordinates, c => c[1]);\n    let xRange = xExtent[1] - xExtent[0];\n    let yRange = yExtent[1] - yExtent[0];\n    const getViewExtentFromPolygonExtents = extents => [\n      Math.min(...extents.map(i => i[0])),\n      Math.max(...extents.map(i => i[1])),\n    ];\n    if (xRange === 0) {\n      // The fall back is the cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsX = cellValues.map(cell => extent(cell.poly, i => i[0]));\n      xExtent = getViewExtentFromPolygonExtents(polygonExtentsX);\n      xRange = xExtent[1] - xExtent[0];\n    }\n    if (yRange === 0) {\n      // The fall back is the first cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsY = cellValues.map(cell => extent(cell.poly, i => i[1]));\n      yExtent = getViewExtentFromPolygonExtents(polygonExtentsY);\n      yRange = yExtent[1] - yExtent[0];\n    }\n    initialTargetX = xExtent[0] + xRange / 2;\n    initialTargetY = yExtent[0] + yRange / 2;\n    initialTargetZ = null;\n    initialZoom = Math.log2(Math.min(width / xRange, height / yRange)) - zoomBackoff;\n  } else {\n    return {\n      initialTargetX: null, initialTargetY: null, initialTargetZ: null, initialZoom: null,\n    };\n  }\n  return {\n    initialTargetX, initialTargetY, initialZoom, initialTargetZ,\n  };\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} data PixelSource | PixelSource[]\n * @returns {Array} [Layer, PixelSource | PixelSource[]] tuple.\n */\nexport function getLayerLoaderTuple(data, use3d) {\n  const loader = ((Array.isArray(data) && data.length > 1) || !Array.isArray(data))\n    ? data : data[0];\n  if (use3d) {\n    return [VolumeLayer, Array.isArray(loader) ? loader : [loader]];\n  }\n  const Layer = (Array.isArray(data) && data.length > 1) ? MultiscaleImageLayer : ImageLayer;\n  return [Layer, loader];\n}\n\n\nexport function renderSubBitmaskLayers(props) {\n  const {\n    bbox: {\n      left, top, right, bottom,\n    },\n    x,\n    y,\n    z,\n  } = props.tile;\n  const { data, id, loader } = props;\n  // Only render in positive coorinate system\n  if ([left, bottom, right, top].some(v => v < 0) || !data) {\n    return null;\n  }\n  const base = loader[0];\n  const [height, width] = loader[0].shape.slice(-2);\n  // Tiles are exactly fitted to have height and width such that their bounds\n  // match that of the actual image (not some padded version).\n  // Thus the right/bottom given by deck.gl are incorrect since\n  // they assume tiles are of uniform sizes, which is not the case for us.\n  const bounds = [\n    left,\n    data.height < base.tileSize ? height : bottom,\n    data.width < base.tileSize ? width : right,\n    top,\n  ];\n  return new BitmaskLayer(props, {\n    channelData: data,\n    cellColor: {\n      data: props.cellColorData,\n      height: props.cellColorHeight,\n      width: props.cellColorWidth,\n    },\n    // Uncomment to help debugging - shades the tile being hovered over.\n    // autoHighlight: true,\n    // highlightColor: [80, 80, 80, 50],\n    // Shared props with BitmapLayer:\n    bounds,\n    id: `sub-layer-${bounds}-${id}`,\n    tileId: { x, y, z },\n  });\n}\n","import { ZarrPixelSource, loadOmeTiff } from '@hms-dbmi/viv';\nimport { openArray } from 'zarr';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeRasterLayersAndChannels } from '../components/spatial/utils';\n\nasync function initLoader(imageData) {\n  const {\n    type, url, metadata, requestInit,\n  } = imageData;\n  switch (type) {\n    case ('zarr'): {\n      const {\n        dimensions, isPyramid, transform,\n      } = metadata || {};\n      const labels = dimensions.map(d => d.field);\n      let source;\n      if (isPyramid) {\n        const metadataUrl = `${url}${\n          url.slice(-1) === '/' ? '' : '/'\n        }.zmetadata`;\n        const response = await fetch(metadataUrl);\n        const { metadata: zarrMetadata } = await response.json();\n        const paths = Object.keys(zarrMetadata)\n          .filter(metaKey => metaKey.includes('.zarray'))\n          .map(arrMetaKeys => arrMetaKeys.slice(0, -7));\n        const data = await Promise.all(\n          paths.map(path => openArray({ store: url, path })),\n        );\n        const [yChunk, xChunk] = data[0].chunks.slice(-2);\n        const size = Math.min(yChunk, xChunk);\n        // deck.gl requirement for power-of-two tile size.\n        const tileSize = 2 ** Math.floor(Math.log2(size));\n        source = data.map(d => new ZarrPixelSource(d, labels, tileSize));\n      } else {\n        const data = await openArray({ store: url });\n        source = new ZarrPixelSource(data, labels);\n      }\n      return { data: source, metadata: { dimensions, transform }, channels: (dimensions.find(d => d.field === 'channel') || dimensions[0]).values };\n    }\n    case ('ome-tiff'): {\n      let loader;\n      // Fetch offsets for ome-tiff if needed.\n      if (metadata && 'omeTiffOffsetsUrl' in metadata) {\n        const { omeTiffOffsetsUrl } = metadata;\n        const res = await fetch(omeTiffOffsetsUrl, (requestInit || {}));\n        if (res.ok) {\n          const offsets = await res.json();\n          loader = await loadOmeTiff(\n            url,\n            {\n              offsets,\n              headers: requestInit?.headers,\n            },\n          );\n        } else {\n          throw new Error('Offsets not found but provided.');\n        }\n      } else {\n        loader = await loadOmeTiff(url, { headers: requestInit?.headers });\n      }\n      const { Pixels: { Channels } } = loader.metadata;\n      const channels = Array.isArray(Channels)\n        ? Channels.map((channel, i) => channel.Name || `Channel ${i}`)\n        : [Channels.Name || `Channel ${0}`];\n      return { ...loader, channels };\n    }\n    default: {\n      throw Error(`Image type (${type}) is not supported`);\n    }\n  }\n}\n\nexport default class RasterLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n    const { url, options } = params;\n    if (!url && options) {\n      this.url = URL.createObjectURL(new Blob([JSON.stringify(options)]));\n      this.options = undefined;\n    }\n    this.schema = rasterSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data: raster } = payload;\n    const { images, renderLayers, usePhysicalSizeScaling = false } = raster;\n\n    // Get image name and URL tuples.\n    const urls = images\n      .filter(image => !image.url.includes('zarr'))\n      .map(image => ([image.url, image.name]));\n\n    // Add a loaderCreator function for each image layer.\n    const imagesWithLoaderCreators = images.map(image => ({\n      ...image,\n      loaderCreator: async () => initLoader(image),\n    }));\n\n    // TODO: use options for initial selection of channels\n    // which omit domain/slider ranges.\n    if (!this.autoImageCache) {\n      this.autoImageCache = initializeRasterLayersAndChannels(\n        imagesWithLoaderCreators,\n        renderLayers,\n        usePhysicalSizeScaling,\n      );\n    }\n\n    return this.autoImageCache.then((autoImages) => {\n      const [autoImageLayers, imageLayerLoaders, imageLayerMeta] = autoImages;\n\n      const coordinationValues = {\n        spatialRasterLayers: autoImageLayers,\n      };\n      return new LoaderResult(\n        { loaders: imageLayerLoaders, meta: imageLayerMeta },\n        urls,\n        coordinationValues,\n      );\n    });\n  }\n}\n","import { loadOmeZarr } from '@hms-dbmi/viv';\nimport AbstractZarrLoader from './AbstractZarrLoader';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeRasterLayersAndChannels } from '../components/spatial/utils';\n\nfunction hexToRgb(hex) {\n  const result = /^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})$/i.exec(hex);\n  return [\n    parseInt(result[1].toLowerCase(), 16),\n    parseInt(result[2].toLowerCase(), 16),\n    parseInt(result[3].toLowerCase(), 16),\n  ];\n}\n\nexport default class OmeZarrLoader extends AbstractZarrLoader {\n  async load() {\n    const payload = await this.getJson('.zattrs').catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n\n    const loader = await loadOmeZarr(this.url, { fetchOptions: this.requestInit, type: 'multiscales' });\n    const { metadata } = loader;\n\n    const { omero } = metadata;\n\n    if (!omero) {\n      console.error('Path for image not valid');\n      return Promise.reject(payload);\n    }\n\n    const { rdefs, channels } = omero;\n\n    const t = rdefs.defaultT ?? 0;\n    const z = rdefs.defaultZ ?? 0;\n\n    const imagesWithLoaderCreators = [\n      {\n        name: omero.name,\n        channels: channels.map((channel, i) => ({\n          selection: { z, t, c: i },\n          slider: [channel.window.start, channel.window.end],\n          color: hexToRgb(channel.color),\n        })),\n        loaderCreator: async () => ({ ...loader, channels: channels.map(c => c.label) }),\n      },\n    ];\n\n    // TODO: use options for initial selection of channels\n    // which omit domain/slider ranges.\n    const [\n      autoImageLayers, imageLayerLoaders, imageLayerMeta,\n    ] = await initializeRasterLayersAndChannels(\n      imagesWithLoaderCreators, undefined,\n    );\n\n    const coordinationValues = {\n      spatialRasterLayers: autoImageLayers,\n    };\n    return Promise.resolve(new LoaderResult(\n      { loaders: imageLayerLoaders, meta: imageLayerMeta },\n      [],\n      coordinationValues,\n    ));\n  }\n}\n","import tinycolor from 'tinycolor2';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * Execute a callback function based on a keypress event.\n * @param {object} event The event from onKeyPress\n * @param {string} key The key identifier to match.\n * @param {Function} callback The function to execute.\n */\nexport function callbackOnKeyPress(event, key, callback) {\n  if (event.key === key) {\n    event.preventDefault();\n    callback();\n  }\n}\n\n/**\n * Convert an array of [r, g, b] numbers to a hex color.\n * @param {number[]} rgbArray The color [r, g, b] array.\n * @returns {string} The hex color as a string.\n */\nexport function colorArrayToString(rgbArray) {\n  return tinycolor({ r: rgbArray[0], g: rgbArray[1], b: rgbArray[2] }).toHexString();\n}\n\n/**\n * Convert a string color representation to an array of [r,g,b].\n * @param {string} colorString The color as a string.\n * @returns {number[]} The color as an array.\n */\nexport function colorStringToArray(colorString) {\n  const colorObj = tinycolor(colorString).toRgb();\n  return [colorObj.r, colorObj.g, colorObj.b];\n}\n\n/**\n * Get a string of help text for coloring a particular hierarchy level.\n * @param {integer} i The level. 1 for cluster, 2 for subcluster, etc.\n * @returns {string} The tooltip text for coloring the level.\n */\nexport function getLevelTooltipText(i) {\n  if (i === 0) return 'Color by hierarchy';\n  if (i <= 2) {\n    const subs = j => ('sub'.repeat(j));\n    return `Color by ${subs(i - 1)}cluster`;\n  }\n  return `Color by cluster level ${i}`;\n}\n\nexport function isEqualOrPrefix(targetPath, testPath) {\n  if (targetPath.length <= testPath.length) {\n    return isEqual(targetPath, testPath.slice(0, targetPath.length));\n  }\n  return false;\n}\n\nexport function tryRenamePath(targetPath, testPath, nextTargetPath) {\n  if (isEqualOrPrefix(targetPath, testPath)) {\n    return [...nextTargetPath, ...testPath.slice(nextTargetPath.length)];\n  }\n  return testPath;\n}\n\nexport const PATH_SEP = '___';\n\nexport function pathToKey(path) {\n  return path.join(PATH_SEP);\n}\n","/* eslint-disable no-underscore-dangle */\nimport uuidv4 from 'uuid/v4';\nimport isNil from 'lodash/isNil';\nimport isEqual from 'lodash/isEqual';\nimport range from 'lodash/range';\nimport { featureCollection as turfFeatureCollection, point as turfPoint } from '@turf/helpers';\nimport centroid from '@turf/centroid';\nimport concaveman from 'concaveman';\nimport {\n  HIERARCHICAL_SCHEMAS,\n} from './constants';\nimport { DEFAULT_COLOR, PALETTE } from '../utils';\nimport { pathToKey } from './utils';\n\n/**\n * Alias for the uuidv4 function to make code more readable.\n * @returns {string} UUID.\n */\nfunction generateKey() {\n  return uuidv4();\n}\n\n/**\n * Get the set associated with a particular node.\n * Recursive.\n * @param {object} currNode A node object.\n * @returns {array} The array representing the set associated with the node.\n */\nexport function nodeToSet(currNode) {\n  if (!currNode) {\n    return [];\n  }\n  if (!currNode.children) {\n    return (currNode.set || []);\n  }\n  return currNode.children.flatMap(c => nodeToSet(c));\n}\n\n/**\n * Get the height of a node (the number of levels to reach a leaf).\n * @param {object} currNode A node object.\n * @param {number} level The level that the height will be computed relative to. By default, 0.\n * @returns {number} The height. If the node has a .children property,\n * then the minimum value returned is 1.\n */\nexport function nodeToHeight(currNode, level = 0) {\n  if (!currNode.children) {\n    return level;\n  }\n  const newLevel = level + 1;\n  const childrenHeights = currNode.children.map(c => nodeToHeight(c, newLevel));\n  return Math.max(...childrenHeights, newLevel);\n}\n\n/**\n * Find a node with a matching name path, relative to a particular node.\n * @param {object} node A node object.\n * @param {string[]} path The name path for the node of interest.\n * @param {number} currLevelIndex The index of the current hierarchy level.\n * @returns {object|null} A matching node object, or null if none is found.\n */\nfunction nodeFindNodeByNamePath(node, path, currLevelIndex) {\n  const currNodeName = path[currLevelIndex];\n  if (node.name === currNodeName) {\n    if (currLevelIndex === path.length - 1) {\n      return node;\n    }\n    if (node.children) {\n      const foundNodes = node.children\n        .map(child => nodeFindNodeByNamePath(child, path, currLevelIndex + 1))\n        .filter(Boolean);\n      if (foundNodes.length === 1) {\n        return foundNodes[0];\n      }\n    }\n  }\n  return null;\n}\n\n/**\n * Find a node with a matching name path, relative to the whole tree.\n * @param {object} currTree A tree object.\n * @param {string[]} targetNamePath The name path for the node of interest.\n * @returns {object|null} A matching node object, or null if none is found.\n */\nexport function treeFindNodeByNamePath(currTree, targetNamePath) {\n  const foundNodes = currTree.tree\n    .map(levelZeroNode => nodeFindNodeByNamePath(levelZeroNode, targetNamePath, 0))\n    .filter(Boolean);\n  if (foundNodes.length === 1) {\n    return foundNodes[0];\n  }\n  return null;\n}\n\n/**\n * Transform a node object using a transform function.\n * @param {object} node A node object.\n * @param {function} predicate Returns true if a node matches a condition of interest.\n * @param {function} transform Takes the node matching the predicate as input, returns\n * a transformed version of the node.\n * @param {array} transformedPaths This array parameter is mutated. The path of\n * each transformed node is appended to this array.\n * @param {string[]} The current path of the node being updated, used internally\n * during recursion.\n * @returns {object} The updated node.\n */\nexport function nodeTransform(node, predicate, transform, transformedPaths, currPath) {\n  let newPath;\n  if (!currPath) {\n    newPath = [node.name];\n  } else {\n    newPath = [...currPath];\n  }\n  if (predicate(node, newPath)) {\n    transformedPaths.push(newPath);\n    return transform(node, newPath);\n  }\n  if (node.children) {\n    return {\n      ...node,\n      children: node.children.map(\n        child => nodeTransform(\n          child, predicate, transform, transformedPaths, newPath.concat([child.name]),\n        ),\n      ),\n    };\n  }\n  return node;\n}\n\n/**\n * Transform many node objects using a transform function.\n * @param {object} node A node object.\n * @param {function} predicate Returns true if a node matches a condition of interest.\n * @param {function} transform Takes the node matching the predicate as input, returns\n * a transformed version of the node.\n * @param {array} transformedPaths This array parameter is mutated. The path of\n * each transformed node is appended to this array.\n * @param {string[]} The current path of the node being updated, used internally\n * during recursion.\n * @returns {object} The updated node.\n */\nexport function nodeTransformAll(node, predicate, transform, transformedPaths, currPath) {\n  let newPath;\n  if (!currPath) {\n    newPath = [node.name];\n  } else {\n    newPath = [...currPath];\n  }\n  let newNode = node;\n  if (predicate(node, newPath)) {\n    transformedPaths.push(newPath);\n    newNode = transform(node, newPath);\n  }\n  if (node.children) {\n    return {\n      ...newNode,\n      children: newNode.children.map(\n        child => nodeTransformAll(\n          child, predicate, transform, transformedPaths, newPath.concat([child.name]),\n        ),\n      ),\n    };\n  }\n  return newNode;\n}\n\n/**\n * Append a child to a parent node.\n * @param {object} currNode A node object.\n * @param {object} newChild The child node object.\n * @returns {object} The updated node.\n */\nexport function nodeAppendChild(currNode, newChild) {\n  return {\n    ...currNode,\n    children: [...currNode.children, newChild],\n  };\n}\n\n/**\n * Prepend a child to a parent node.\n * @param {object} currNode A node object.\n * @param {object} newChild The child node object.\n * @returns {object} The updated node.\n */\nexport function nodePrependChild(currNode, newChild) {\n  return {\n    ...currNode,\n    children: [newChild, ...currNode.children],\n  };\n}\n\n/**\n * Insert a child to a parent node.\n * @param {object} currNode A node object.\n * @param {*} newChild The child node object.\n * @param {*} insertIndex The index at which to insert the child.\n * @returns {object} The updated node.\n */\nexport function nodeInsertChild(currNode, newChild, insertIndex) {\n  const newChildren = Array.from(currNode.children);\n  newChildren.splice(insertIndex, 0, newChild);\n  return {\n    ...currNode,\n    children: newChildren,\n  };\n}\n\n/**\n * Get an array representing the union of the sets of checked nodes.\n * @param {object} currTree A tree object.\n * @returns {array} An array representing the union of the sets of checked nodes.\n */\nexport function treeToUnion(currTree, checkedPaths) {\n  const nodes = checkedPaths.map(path => treeFindNodeByNamePath(currTree, path));\n  const nodeSets = nodes.map(node => nodeToSet(node).map(([cellId]) => cellId));\n  return nodeSets\n    .reduce((a, h) => a.concat(h.filter(hEl => !a.includes(hEl))), nodeSets[0] || []);\n}\n\n/**\n * Get an array representing the intersection of the sets of checked nodes.\n * @param {object} currTree A tree object.\n * @returns {array} An array representing the intersection of the sets of checked nodes.\n */\nexport function treeToIntersection(currTree, checkedPaths) {\n  const nodes = checkedPaths.map(path => treeFindNodeByNamePath(currTree, path));\n  const nodeSets = nodes.map(node => nodeToSet(node).map(([cellId]) => cellId));\n  return nodeSets\n    .reduce((a, h) => h.filter(hEl => a.includes(hEl)), nodeSets[0] || []);\n}\n\n/**\n * Get an array representing the complement of the union of the sets of checked nodes.\n * @param {object} currTree\n * @returns {array} An array representing the complement of the\n * union of the sets of checked nodes.\n */\nexport function treeToComplement(currTree, checkedPaths, items) {\n  const primaryUnion = treeToUnion(currTree, checkedPaths);\n  return items.filter(el => !primaryUnion.includes(el));\n}\n\n/**\n * Get an flattened array of descendants at a particular relative\n * level of interest.\n * @param {object} node A node object.\n * @param {number} level The relative level of interest.\n * 0 for this node's children, 1 for grandchildren, etc.\n * @param {boolean} stopEarly Should a node be returned early if no children exist?\n * @returns {object[]} An array of descendants at the specified level,\n * where the level is relative to the node.\n */\nexport function nodeToLevelDescendantNamePaths(node, level, prevPath, stopEarly = false) {\n  if (!node.children) {\n    if (!stopEarly) {\n      return null;\n    }\n    return [[...prevPath, node.name]];\n  }\n  if (level === 0) {\n    return [[...prevPath, node.name]];\n  }\n  return node.children\n    .flatMap(c => nodeToLevelDescendantNamePaths(c, level - 1, [...prevPath, node.name], stopEarly))\n    .filter(Boolean);\n}\n\n/**\n * Export the tree by clearing tree state and all node states.\n * @param {object} currTree A tree object.\n * @returns {object} Tree object with tree and node state removed.\n */\nexport function treeExport(currTree, datatype) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n    datatype,\n    tree: currTree.tree,\n  };\n}\n\n/**\n * Export the tree by clearing tree state and all node states,\n * and filter so that only the level zero node of interest is included.\n * @param {object} currTree A tree object.\n * @param {string} nodeKey The key of the node of interest.\n * @returns {object} { treeToExport, nodeName }\n * Tree with one level zero node, and with state removed.\n */\nexport function treeExportLevelZeroNode(currTree, nodePath, datatype, cellSetColors) {\n  const node = treeFindNodeByNamePath(currTree, nodePath);\n  const nodeWithColors = nodeTransformAll(node, () => true, (n, nPath) => {\n    const nodeColor = cellSetColors?.find(c => isEqual(c.path, nPath))?.color ?? DEFAULT_COLOR;\n    return {\n      ...n,\n      color: nodeColor.slice(0, 3),\n    };\n  }, []);\n  const treeWithOneLevelZeroNode = {\n    ...currTree,\n    tree: [nodeWithColors],\n  };\n  return {\n    treeToExport: treeExport(treeWithOneLevelZeroNode, datatype),\n    nodeName: node.name,\n  };\n}\n\n/**\n * Prepare the set of a node of interest for export.\n * @param {object} currTree A tree object.\n * @param {string} nodeKey The key of the node of interest.\n * @returns {object} { setToExport, nodeName } The set as an array.\n */\nexport function treeExportSet(currTree, nodePath) {\n  const node = treeFindNodeByNamePath(currTree, nodePath);\n  return { setToExport: nodeToSet(node), nodeName: node.name };\n}\n\n/**\n * Get an empty tree, with a default tree state.\n * @param {string} datatype The type of sets that this tree contains.\n * @returns {object} Empty tree.\n */\nexport function treeInitialize(datatype) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n    datatype,\n    tree: [],\n  };\n}\n\n/**\n * For convenience, get an object with information required\n * to render a node as a component.\n * @param {object} node A node to be rendered.\n * @returns {object} An object containing properties required\n * by the TreeNode render functions.\n */\nexport function nodeToRenderProps(node, path, cellSetColor) {\n  const level = path.length - 1;\n  return {\n    title: node.name,\n    nodeKey: pathToKey(path),\n    path,\n    size: nodeToSet(node).length,\n    color: cellSetColor?.find(d => isEqual(d.path, path))?.color,\n    level,\n    isLeaf: (!node.children || node.children.length === 0) && Boolean(node.set),\n    height: nodeToHeight(node),\n  };\n}\n\n/**\n * Using a color and a probability, mix the color with an \"uncertainty\" color,\n * for example, gray.\n * Reference: https://github.com/bgrins/TinyColor/blob/80f7225029c428c0de0757f7d98ac15f497bee57/tinycolor.js#L701\n * @param {number[]} originalColor The color assignment for the class.\n * @param {number} p The mixing amount, or level certainty in the originalColor classification,\n * between 0 and 1.\n * @param {number[]} mixingColor The color with which to mix. By default, [128, 128, 128] gray.\n * @returns {number[]} Returns the color after mixing.\n */\nfunction colorMixWithUncertainty(originalColor, p, mixingColor = [128, 128, 128]) {\n  return [\n    ((originalColor[0] - mixingColor[0]) * p) + mixingColor[0],\n    ((originalColor[1] - mixingColor[1]) * p) + mixingColor[1],\n    ((originalColor[2] - mixingColor[2]) * p) + mixingColor[2],\n  ];\n}\n\n/**\n * Given a tree with state, get the cellIds and cellColors,\n * based on the nodes currently marked as \"visible\".\n * @param {object} currTree A tree object.\n *  @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} cellSetColor Array of objects with the\n * properties `path` and `color`.\n * @returns {array} Tuple of [cellIds, cellColors]\n * where cellIds is an array of strings,\n * and cellColors is an object mapping cellIds to color [r,g,b] arrays.\n */\nexport function treeToCellColorsBySetNames(currTree, selectedNamePaths, cellSetColor) {\n  let cellColorsArray = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        cellSetColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || DEFAULT_COLOR\n      );\n      cellColorsArray = [\n        ...cellColorsArray,\n        ...nodeSet.map(([cellId, prob]) => [\n          cellId,\n          (isNil(prob) ? nodeColor : colorMixWithUncertainty(nodeColor, prob)),\n        ]),\n      ];\n    }\n  });\n  return new Map(cellColorsArray);\n}\n\n/**\n * Given a tree with state, get an array of\n * objects with cellIds and cellColors,\n * based on the nodes currently marked as \"visible\".\n * @param {object} currTree A tree object.\n * @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} setColor Array of objects with the\n * properties `path` and `color`.\n * @returns {object[]} Array of objects with properties\n * `obsId`, `name`, and `color`.\n */\nexport function treeToObjectsBySetNames(currTree, selectedNamePaths, setColor) {\n  let cellsArray = [];\n  for (let i = 0; i < selectedNamePaths.length; i += 1) {\n    const setNamePath = selectedNamePaths[i];\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        setColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || DEFAULT_COLOR\n      );\n      cellsArray = cellsArray.concat(nodeSet.map(([cellId]) => ({\n        obsId: cellId,\n        name: node.name,\n        color: nodeColor,\n      })));\n    }\n  }\n  return cellsArray;\n}\n\nexport function treeToCellPolygonsBySetNames(\n  currTree, cells, mapping, selectedNamePaths, cellSetColor,\n) {\n  const cellSetPolygons = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = (\n        cellSetColor?.find(d => isEqual(d.path, setNamePath))?.color\n        || DEFAULT_COLOR\n      );\n      const cellPositions = nodeSet\n        .map(([cellId]) => ([\n          cells[cellId]?.mappings[mapping][0],\n          -cells[cellId]?.mappings[mapping][1],\n        ]))\n        .filter(cell => cell.every(i => typeof i === 'number'));\n\n      if (cellPositions.length > 2) {\n        const points = turfFeatureCollection(\n          cellPositions.map(turfPoint),\n        );\n        const concavity = Infinity;\n        const hullCoords = concaveman(cellPositions, concavity);\n        if (hullCoords) {\n          const centroidCoords = centroid(points).geometry.coordinates;\n          cellSetPolygons.push({\n            path: setNamePath,\n            name: setNamePath[setNamePath.length - 1],\n            hull: hullCoords,\n            color: nodeColor,\n            centroid: centroidCoords,\n          });\n        }\n      }\n    }\n  });\n  return cellSetPolygons;\n}\n\n/**\n * Given a tree with state, get the sizes of the\n * sets currently marked as \"visible\".\n * @param {object} currTree A tree object.\n * @param {array} selectedNamePaths Array of arrays of strings,\n * representing set \"paths\".\n * @param {object[]} setColor Array of objects with the\n * properties `path` and `color`.\n * @returns {object[]} Array of objects\n * with the properties `name`, `size`, `key`,\n * and `color`.\n */\nexport function treeToSetSizesBySetNames(currTree, selectedNamePaths, setColor) {\n  const sizes = [];\n  selectedNamePaths.forEach((setNamePath) => {\n    const node = treeFindNodeByNamePath(currTree, setNamePath);\n    if (node) {\n      const nodeSet = nodeToSet(node);\n      const nodeColor = setColor.find(d => isEqual(d.path, setNamePath))?.color || DEFAULT_COLOR;\n      sizes.push({\n        key: generateKey(),\n        name: node.name,\n        size: nodeSet.length,\n        color: nodeColor,\n      });\n    }\n  });\n  return sizes;\n}\n\n/**\n * Find and remove a node from the descendants of the current node.\n * @param {object} node A node to search on.\n * @param {array} prevPath Path of the current node to be searched.\n * @param {array} filterPath The path sought.\n * @returns {object} A new node without a node at filterPath.\n */\nexport function filterNode(node, prevPath, filterPath) {\n  if (isEqual([...prevPath, node.name], filterPath)) {\n    return null;\n  }\n  if (!node.children) {\n    return node;\n  }\n  return {\n    ...node,\n    children: node.children.map(\n      c => filterNode(c, [...prevPath, node.name], filterPath),\n    ).filter(Boolean),\n  };\n}\n\nexport function treeToExpectedCheckedLevel(currTree, checkedPaths) {\n  let result = null;\n  if (currTree) {\n    currTree.tree.forEach((lzn) => {\n      const levelZeroPath = [lzn.name];\n      const height = nodeToHeight(lzn);\n      range(height).forEach((i) => {\n        const levelIndex = i + 1;\n        const levelNodePaths = nodeToLevelDescendantNamePaths(lzn, levelIndex, [], true);\n        if (isEqual(levelNodePaths, checkedPaths)) {\n          result = { levelZeroPath, levelIndex };\n        }\n      });\n    });\n  }\n  return result;\n}\n\nexport function treesConflict(cellSets, testCellSets) {\n  const paths = [];\n  const testPaths = [];\n  let hasConflict = false;\n\n  function getPaths(node, prevPath) {\n    paths.push([...prevPath, node.name]);\n    if (node.children) {\n      node.children.forEach(c => getPaths(c, [...prevPath, node.name]));\n    }\n  }\n  cellSets.tree.forEach(lzn => getPaths(lzn, []));\n\n  function getTestPaths(node, prevPath) {\n    testPaths.push([...prevPath, node.name]);\n    if (node.children) {\n      node.children.forEach(c => getPaths(c, [...prevPath, node.name]));\n    }\n  }\n  testCellSets.tree.forEach(lzn => getTestPaths(lzn, []));\n\n  testPaths.forEach((testPath) => {\n    if (paths.find(p => isEqual(p, testPath))) {\n      hasConflict = true;\n    }\n  });\n  return hasConflict;\n}\n\nexport function initializeCellSetColor(cellSets, cellSetColor) {\n  const nextCellSetColor = [...(cellSetColor || [])];\n  const nodeCountPerTreePerLevel = cellSets.tree.map(tree => Array\n    .from({\n      length: nodeToHeight(tree) + 1, // Need to add one because its an array.\n    }).fill(0));\n\n  function processNode(node, prevPath, hierarchyLevel, treeIndex) {\n    const index = nodeCountPerTreePerLevel[treeIndex][hierarchyLevel];\n    const nodePath = [...prevPath, node.name];\n\n    const nodeColor = nextCellSetColor.find(d => isEqual(d.path, nodePath));\n    if (!nodeColor) {\n      nextCellSetColor.push({\n        path: nodePath,\n        color: PALETTE[index % PALETTE.length],\n      });\n    }\n    nodeCountPerTreePerLevel[treeIndex][hierarchyLevel] += 1;\n    if (node.children) {\n      node.children.forEach(c => processNode(c, nodePath, hierarchyLevel + 1, treeIndex));\n    }\n  }\n\n  cellSets.tree.forEach((lzn, treeIndex) => processNode(lzn, [], 0, treeIndex));\n  return nextCellSetColor;\n}\n\nexport function getCellSetPolygons(params) {\n  const {\n    cells,\n    mapping,\n    cellSets,\n    cellSetSelection,\n    cellSetColor,\n  } = params;\n  if (cellSetSelection && cellSetSelection.length > 0 && cellSets && cells) {\n    return treeToCellPolygonsBySetNames(cellSets, cells, mapping, cellSetSelection, cellSetColor);\n  }\n  return [];\n}\n","import Ajv from 'ajv';\nimport isNil from 'lodash/isNil';\nimport { dsvFormat } from 'd3-dsv';\nimport { parse as json2csv } from 'json2csv';\nimport { colorArrayToString, colorStringToArray } from './utils';\nimport { nodeTransform } from './cell-set-utils';\nimport { DEFAULT_COLOR } from '../utils';\nimport {\n  HIERARCHICAL_SCHEMAS, TABULAR_SCHEMAS,\n  MIME_TYPE_JSON, MIME_TYPE_TABULAR,\n  SEPARATOR_TABULAR, NA_VALUE_TABULAR,\n} from './constants';\n\n/**\n * Check if an imported tree has an old schema version that we know how to\n * \"upgrade\" to the latest schema version.  Validate against the schema.\n * @param {object} currTree A hierarchical tree object with a .version property,\n * which has already passed schema validation, but may not have the latest schema version.\n * @param {string} datatype The data type of the items in the schema.\n */\nexport function tryUpgradeTreeToLatestSchema(currTree, datatype) {\n  const validate = new Ajv().compile(HIERARCHICAL_SCHEMAS[datatype].schema);\n  const valid = validate(currTree);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    throw new Error(`Tree validation failed: ${failureReason}`);\n  } else if (currTree.datatype !== datatype) {\n    throw new Error(\n      `The data type does not match the expected data type of '${datatype}'.`,\n    );\n  }\n  if (currTree.version === '0.1.2') {\n    // To upgrade from cell-sets schema 0.1.2 to 0.1.3,\n    // add a confidence value of null for each cell ID.\n    return {\n      ...currTree,\n      version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n      tree: currTree.tree.map(levelZeroNode => nodeTransform(\n        levelZeroNode,\n        n => !n.children && Array.isArray(n.set),\n        n => ({ ...n, set: n.set.map(itemId => ([itemId, null])) }), [],\n      )),\n    };\n  }\n  return currTree;\n}\n\n/**\n * Handler for JSON imports. Validates and upgrades against the hierarchical sets schema.\n * @param {string} result The data passed from the FileReader as a string.\n * @param {string} datatype The data type to validate against.\n * @returns {object} The imported tree object.\n * @throws {Error} Throws error if validation fails or if the datatype does not match.\n */\nexport function handleImportJSON(result, datatype) {\n  let importData = JSON.parse(result);\n  // Validate the imported file.\n  importData = tryUpgradeTreeToLatestSchema(importData, datatype);\n  return importData;\n}\n\n/**\n * Handler for tabular imports. Validates against the tabular sets schema.\n * @param {string} result The data passed from the FileReader as a string.\n * @param {string} datatype The data type to validate against.\n * @returns {object} The imported tree object.\n * @throws {Error} Throws error if validation fails or if the datatype does not match.\n */\nexport function handleImportTabular(result, datatype) {\n  const dsvParser = dsvFormat(SEPARATOR_TABULAR);\n  const importData = dsvParser.parse(result, row => ({\n    groupName: row.groupName,\n    setName: row.setName,\n    setColor: (row.setColor ? colorStringToArray(row.setColor) : DEFAULT_COLOR),\n    obsId: row.obsId,\n    predictionScore: (\n      (\n        isNil(row.predictionScore)\n        || row.predictionScore === NA_VALUE_TABULAR\n      )\n        ? null\n        : +row.predictionScore\n    ),\n  }));\n  // Validate the imported file.\n  const validate = new Ajv().compile(TABULAR_SCHEMAS[datatype].schema);\n  const valid = validate(importData);\n  if (!valid) {\n    const failureReason = JSON.stringify(validate.errors, null, 2);\n    throw new Error(`Import validation failed: ${failureReason}`);\n  } else {\n    // Convert the validated array to a tree representation.\n    const treeToImport = {\n      version: HIERARCHICAL_SCHEMAS[datatype].latestVersion,\n      datatype,\n      tree: [],\n    };\n    const uniqueGroupNames = Array.from(new Set(importData.map(d => d.groupName)));\n    uniqueGroupNames.forEach((groupName) => {\n      const levelZeroNode = {\n        name: groupName,\n        children: [],\n      };\n      const groupRows = importData.filter(d => d.groupName === groupName);\n      const uniqueSetNames = Array.from(new Set(groupRows.map(d => d.setName)));\n      uniqueSetNames.forEach((setName) => {\n        const setRows = groupRows.filter(d => d.setName === setName);\n        const { setColor } = setRows[0];\n        const levelOneNode = {\n          name: setName,\n          color: setColor,\n          set: setRows.map(d => ([d.obsId, d.predictionScore])),\n        };\n        levelZeroNode.children.push(levelOneNode);\n      });\n      treeToImport.tree.push(levelZeroNode);\n    });\n    return treeToImport;\n  }\n}\n\n/**\n * Convert a tree object to a JSON representation.\n * @param {object} result The object to export.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportJSON(result) {\n  const jsonString = JSON.stringify(result);\n  const dataString = `data:${MIME_TYPE_JSON};charset=utf-8,${encodeURIComponent(jsonString)}`;\n  return dataString;\n}\n\n/**\n * Convert a tree object with one level (height === 1) to a tabular representation.\n * @param {object} result The object to export.\n * @returns {string} The data in a string representation.\n */\nexport function handleExportTabular(result) {\n  // Convert a tree object to an array of JSON objects.\n  const exportData = [];\n  result.tree.forEach((levelZeroNode) => {\n    levelZeroNode.children.forEach((levelOneNode) => {\n      if (levelOneNode.set) {\n        levelOneNode.set.forEach(([obsId, prob]) => {\n          exportData.push({\n            groupName: levelZeroNode.name,\n            setName: levelOneNode.name,\n            setColor: colorArrayToString(levelOneNode.color),\n            obsId,\n            predictionScore: isNil(prob) ? NA_VALUE_TABULAR : prob,\n          });\n        });\n      }\n    });\n  });\n  const csvString = json2csv(exportData, {\n    fields: ['groupName', 'setName', 'setColor', 'obsId', 'predictionScore'],\n    delimiter: SEPARATOR_TABULAR,\n  });\n  const dataString = `data:${MIME_TYPE_TABULAR};charset=utf-8,${encodeURIComponent(csvString)}`;\n  return dataString;\n}\n\n/**\n * Download a file. Appends and removes an anchor node in the DOM.\n * @param {string} dataString The function that converts the data to a string.\n * @param {string} fileName The name of the file to be downloaded.\n */\nexport function downloadForUser(dataString, fileName) {\n  const downloadAnchorNode = document.createElement('a');\n  downloadAnchorNode.setAttribute('href', dataString);\n  downloadAnchorNode.setAttribute('download', fileName);\n  document.body.appendChild(downloadAnchorNode); // required for firefox\n  downloadAnchorNode.click();\n  downloadAnchorNode.remove();\n}\n","import cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport JsonLoader from './JsonLoader';\nimport { tryUpgradeTreeToLatestSchema } from '../components/sets/io';\nimport { AbstractLoaderError } from './errors';\nimport LoaderResult from './LoaderResult';\n\nimport { initializeCellSetColor } from '../components/sets/cell-set-utils';\n\nexport default class CellSetsJsonLoader extends JsonLoader {\n  constructor(params) {\n    super(params);\n\n    this.schema = cellSetsSchema;\n  }\n\n  async load() {\n    const payload = await super.load().catch(reason => Promise.resolve(reason));\n    if (payload instanceof AbstractLoaderError) {\n      return Promise.reject(payload);\n    }\n    const { data: rawData, url } = payload;\n    const upgradedData = tryUpgradeTreeToLatestSchema(rawData, 'cell');\n\n    const coordinationValues = {\n      cellSetSelection: [],\n      cellSetColor: [],\n    };\n\n    // Set up the initial coordination values.\n    if (upgradedData && upgradedData.tree.length >= 1) {\n      const { tree } = upgradedData;\n      const newAutoSetSelectionParentName = tree[0].name;\n      // Create a list of set paths to initally select.\n      const newAutoSetSelections = tree[0].children\n        .map(node => ([newAutoSetSelectionParentName, node.name]));\n      // Create a list of cell set objects with color mappings.\n      const newAutoSetColors = initializeCellSetColor(upgradedData, []);\n      coordinationValues.cellSetSelection = newAutoSetSelections;\n      coordinationValues.cellSetColor = newAutoSetColors;\n    }\n    return Promise.resolve(new LoaderResult(upgradedData, url, coordinationValues));\n  }\n}\n","import { openArray } from 'zarr';\nimport range from 'lodash/range';\nimport AbstractZarrLoader from '../AbstractZarrLoader';\n\nconst readFloat32FromUint8 = (bytes) => {\n  if (bytes.length !== 4) {\n    throw new Error('readFloat32 only takes in length 4 byte buffers');\n  }\n  return new Int32Array(bytes.buffer)[0];\n};\n\nconst HEADER_LENGTH = 4;\n\n/**\n   * Method for decoding text arrays from zarr.\n   * Largerly a port of https://github.com/zarr-developers/numcodecs/blob/2c1aff98e965c3c4747d9881d8b8d4aad91adb3a/numcodecs/vlen.pyx#L135-L178\n   * @returns {string[]} An array of strings.\n   */\nfunction parseVlenUtf8(buffer) {\n  const decoder = new TextDecoder();\n  let data = 0;\n  const dataEnd = data + buffer.length;\n  const length = readFloat32FromUint8(buffer.slice(data, HEADER_LENGTH));\n  if (buffer.length < HEADER_LENGTH) {\n    throw new Error('corrupt buffer, missing or truncated header');\n  }\n  data += HEADER_LENGTH;\n  const output = new Array(length);\n  for (let i = 0; i < length; i += 1) {\n    if (data + 4 > dataEnd) {\n      throw new Error('corrupt buffer, data seem truncated');\n    }\n    const l = readFloat32FromUint8(buffer.slice(data, data + 4));\n    data += 4;\n    if (data + l > dataEnd) {\n      throw new Error('corrupt buffer, data seem truncated');\n    }\n    output[i] = decoder.decode(buffer.slice(data, data + l));\n    data += l;\n  }\n  return output;\n}\n\n/**\n * A base AnnData loader which has all shared methods for more comlpex laoders,\n * like loading cell names and ids. It inherits from AbstractLoader.\n */\nexport default class BaseAnnDataLoader extends AbstractZarrLoader {\n  /**\n   * Class method for loading cell set ids.\n   * Takes the location as an argument because this is shared across objects,\n   * which have different ways of specifying location.\n   * @param {Array} cellSetZarrLocation An array of strings like obs.leiden or obs.bulk_labels.\n   * @returns {Promise} A promise for an array of ids with one per cell.\n   */\n  loadCellSetIds(cellSetZarrLocation) {\n    const { store } = this;\n    if (this.cellSets) {\n      return this.cellSets;\n    }\n    this.cellSets = Promise.all(\n      cellSetZarrLocation.map(async (setName) => {\n        const { categories } = await this.getJson(`${setName}/.zattrs`);\n        let categoriesValues;\n        if (categories) {\n          const { dtype } = await this.getJson(`/obs/${categories}/.zarray`);\n          if (dtype === '|O') {\n            categoriesValues = await this.getFlatArrDecompressed(`/obs/${categories}`);\n          }\n        }\n        const cellSetsArr = await openArray({\n          store,\n          path: setName,\n          mode: 'r',\n        });\n        const cellSetsValues = await cellSetsArr.get();\n        const { data } = cellSetsValues;\n        const mappedCellSetValues = Array.from(data).map(\n          i => (!categoriesValues ? String(i) : categoriesValues[i]),\n        );\n        return mappedCellSetValues;\n      }),\n    );\n    return this.cellSets;\n  }\n\n  /**\n   * Class method for loading general numeric arrays.\n   * @param {string} path A string like obsm.X_pca.\n   * @returns {Promise} A promise for a zarr array containing the data.\n   */\n  loadNumeric(path) {\n    const { store } = this;\n    return openArray({\n      store,\n      path,\n      mode: 'r',\n    }).then(arr => arr.get());\n  }\n\n  getFlatArrDecompressed(path) {\n    const { store } = this;\n    return openArray({\n      store,\n      path,\n      mode: 'r',\n    }).then(async (z) => {\n      let data;\n      const parseAndMergeTextBytes = (dbytes) => {\n        const text = parseVlenUtf8(dbytes);\n        if (!data) {\n          data = text;\n        } else {\n          data = data.concat(text);\n        }\n      };\n      const mergeBytes = (dbytes) => {\n        if (!data) {\n          data = dbytes;\n        } else {\n          const tmp = new Uint8Array(dbytes.buffer.byteLength + data.buffer.byteLength);\n          tmp.set(new Uint8Array(data.buffer), 0);\n          tmp.set(dbytes, data.buffer.byteLength);\n          data = tmp;\n        }\n      };\n      const numRequests = Math.ceil(z.meta.shape[0] / z.meta.chunks[0]);\n      const requests = range(numRequests).map(async item => store.getItem(`${z.keyPrefix}${String(item)}`)\n        .then(buf => z.compressor.then(compressor => compressor.decode(buf))));\n      const dbytesArr = await Promise.all(requests);\n      dbytesArr.forEach((dbytes) => {\n        // Use vlenutf-8 decoding if necessary and merge `data` as a normal array.\n        if (Array.isArray(z.meta.filters) && z.meta.filters[0].id === 'vlen-utf8') {\n          parseAndMergeTextBytes(dbytes);\n          // Otherwise just merge the bytes as a typed array.\n        } else {\n          mergeBytes(dbytes);\n        }\n      });\n      const {\n        meta: {\n          shape: [length],\n        },\n      } = z;\n      // truncate the filled in values\n      return data.slice(0, length);\n    });\n  }\n\n  /**\n   * Class method for loading the cell names from obs.\n   * @returns {Promise} An promise for a zarr array containing the names.\n   */\n  loadCellNames() {\n    if (this.cellNames) {\n      return this.cellNames;\n    }\n    this.cellNames = this.getJson('obs/.zattrs')\n      .then(({ _index }) => this.getFlatArrDecompressed(`/obs/${_index}`));\n    return this.cellNames;\n  }\n}\n","/* eslint-disable no-underscore-dangle */\nimport { openArray, slice } from 'zarr';\nimport { extent } from 'd3-array';\nimport BaseAnnDataLoader from './BaseAnnDataLoader';\nimport LoaderResult from '../LoaderResult';\n\nconst normalize = (arr) => {\n  const [min, max] = extent(arr);\n  const ratio = 255 / (max - min);\n  const data = new Uint8Array(\n    arr.map(i => Math.floor((i - min) * ratio)),\n  );\n  return { data };\n};\n\nconst concatenateColumnVectors = (arr) => {\n  const numCols = arr.length;\n  const numRows = arr[0].length;\n  const { BYTES_PER_ELEMENT } = arr[0];\n  const view = new DataView(new ArrayBuffer(numCols * numRows * BYTES_PER_ELEMENT));\n  const TypedArray = arr[0].constructor;\n  const dtype = TypedArray.name.replace('Array', '');\n  for (let i = 0; i < numCols; i += 1) {\n    for (let j = 0; j < numRows; j += 1) {\n      view[`set${dtype}`](BYTES_PER_ELEMENT * (j * numCols + i), arr[i][j], true);\n    }\n  }\n  return new TypedArray(view.buffer);\n};\n\n/**\n * Loader for converting zarr into the a cell x gene matrix for use in Genes/Heatmap components.\n */\nexport default class MatrixZarrLoader extends BaseAnnDataLoader {\n  /**\n   * Class method for loading the genes list from AnnData.var.\n   * @returns {Promise} A promise for the zarr array contianing the gene names.\n   */\n  async loadGeneNames() {\n    if (this.geneNames) {\n      return this.geneNames;\n    }\n    const { geneFilter: geneFilterZarr } = this.options;\n    let geneFilter;\n    if (geneFilterZarr) {\n      geneFilter = await this.getFlatArrDecompressed(geneFilterZarr);\n    }\n    const { _index } = await this.getJson('var/.zattrs');\n    if (this.geneNames) {\n      return this.geneNames;\n    }\n    this.geneNames = this.getFlatArrDecompressed(`var/${_index}`).then(data => data.filter((_, j) => !geneFilter || geneFilter[j]));\n    return this.geneNames;\n  }\n\n  /**\n   * Class method for loading a filtered subset of the genes list\n   * @param {String} filterZarr A location in the zarr store to fetch a boolean array from.\n   * @returns {Array} A list of filtered genes.\n   */\n  async _getFilteredGenes(filterZarr) {\n    const filter = await this.getFlatArrDecompressed(filterZarr);\n    const geneNames = await this.loadGeneNames();\n    const genes = geneNames.filter((_, i) => filter[i]);\n    return genes;\n  }\n\n  /**\n   * Class method for getting the integer indices of a selection of genes within a list.\n   * @param {Array} selection A list of gene names.\n   * @returns {Array} A list of integer indices.\n   */\n  async _getGeneIndices(selection) {\n    const geneNames = await this.loadGeneNames();\n    return selection.map(gene => geneNames.indexOf(gene));\n  }\n\n  /**\n   * Class method for getting the number of cells i.e entries in `obs`.\n   * @returns {Number} The number of cells.\n   */\n  async _getNumCells() {\n    const cells = await this.loadCellNames();\n    return cells.length;\n  }\n\n  /**\n   * Class method for getting the number of genes i.e entries in `var`,\n   * potentially filtered by `genesFilter`.\n   * @returns {Number} The number of genes.\n   */\n  async _getNumGenes() {\n    const cells = await this.loadGeneNames();\n    return cells.length;\n  }\n\n  /**\n   * Class method for opening the sparse matrix arrays in zarr.\n   * @returns {Array} A list of promises pointing to the indptr, indices, and data of the matrix.\n   */\n  async _openSparseArrays() {\n    const {\n      options: { matrix },\n      store,\n    } = this;\n    if (this.sparseArrays) {\n      return this.sparseArrays;\n    }\n    this.sparseArrays = Promise.all(\n      ['indptr', 'indices', 'data'].map(name => openArray({ store, path: `${matrix}/${name}`, mode: 'r' })),\n    );\n    return this.sparseArrays;\n  }\n\n  /**\n   * Class method for loading a gene selection from a CSC matrix.\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Promise} A Promise.all array of promises containing Uint8Arrays, one per selection.\n   */\n  async _loadCSCGeneSelection(selection) {\n    const indices = await this._getGeneIndices(selection);\n    const [indptrArr, indexArr, cellXGeneArr] = await this._openSparseArrays();\n    const numCells = await this._getNumCells();\n    const { data: cols } = await indptrArr.getRaw(null);\n    // If there is not change in the column indexer, then the data is all zeros\n    return Promise.all(\n      indices.map(async (index) => {\n        const startRowIndex = cols[index];\n        const endRowIndex = cols[index + 1];\n        const isColumnAllZeros = startRowIndex === endRowIndex;\n        const geneData = new Float32Array(numCells).fill(0);\n        if (isColumnAllZeros) {\n          return geneData;\n        }\n        const { data: rowIndices } = await indexArr.get([\n          slice(startRowIndex, endRowIndex),\n        ]);\n        const { data: cellXGeneData } = await cellXGeneArr.get([\n          slice(startRowIndex, endRowIndex),\n        ]);\n        for (let rowIndex = 0; rowIndex < rowIndices.length; rowIndex += 1) {\n          geneData[rowIndices[rowIndex]] = cellXGeneData[rowIndex];\n        }\n        return geneData;\n      }),\n    );\n  }\n\n  /**\n   * Class method for loading a gene selection from a CSR matrix.\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Promise} A Promise.all array of promises containing Uint8Arrays, one per selection.\n   */\n  async _loadCSRGeneSelection(selection) {\n    const indices = await this._getGeneIndices(selection);\n    const numGenes = await this._getNumGenes();\n    const numCells = await this._getNumCells();\n    const cellXGene = await this._loadCSRSparseCellXGene();\n    return indices.map((index) => {\n      const geneData = new Float32Array(numCells).fill(0);\n      for (let i = 0; i < numCells; i += 1) {\n        geneData[i] = cellXGene[i * numGenes + index];\n      }\n      return geneData;\n    });\n  }\n\n  /**\n   * Class method for loading row oriented (CSR) sparse data from zarr.\n   * @returns {Object} A { data: Float32Array } contianing the CellXGene matrix.\n   */\n  async _loadCSRSparseCellXGene() {\n    if (this._sparseMatrix) {\n      return this._sparseMatrix;\n    }\n    this._sparseMatrix = this._openSparseArrays().then(async (sparseArrays) => {\n      const {\n        options: { matrix },\n      } = this;\n      const { shape } = await this.getJson(`${matrix}/.zattrs`);\n      const [rows, cols, cellXGene] = await Promise.all(\n        sparseArrays.map(async (arr) => {\n          const { data } = await arr.getRaw(null);\n          return data;\n        }),\n      );\n      const cellXGeneMatrix = new Float32Array(shape[0] * shape[1]).fill(0);\n      let row = 0;\n      rows.forEach((_, index) => {\n        const rowStart = rows[index];\n        const rowEnd = rows[index + 1];\n        for (let i = rowStart; i < rowEnd; i += 1) {\n          const val = cellXGene[i];\n          const col = cols[i];\n          cellXGeneMatrix[row * shape[1] + col] = val;\n        }\n        row += 1;\n      });\n      return cellXGeneMatrix;\n    });\n    return this._sparseMatrix;\n  }\n\n  /**\n   * Class method for loading column oriented (CSC) sparse data from zarr.\n   * @returns {Object} A { data: Float32Array } contianing the CellXGene matrix.\n   */\n  async _loadCSCSparseCellXGene() {\n    if (this._sparseMatrix) {\n      return this._sparseMatrix;\n    }\n    this._sparseMatrix = this._openSparseArrays().then(async (sparseArrays) => {\n      const {\n        options: { matrix },\n      } = this;\n      const { shape } = await this.getJson(`${matrix}/.zattrs`);\n      const [cols, rows, cellXGene] = await Promise.all(\n        sparseArrays.map(async (arr) => {\n          const { data } = await arr.getRaw(null);\n          return data;\n        }),\n      );\n      const cellXGeneMatrix = new Float32Array(shape[0] * shape[1]).fill(0);\n      let col = 0;\n      cols.forEach((_, index) => {\n        const colStart = cols[index];\n        const colEnd = cols[index + 1];\n        for (let i = colStart; i < colEnd; i += 1) {\n          const val = cellXGene[i];\n          const row = rows[i];\n          cellXGeneMatrix[row * shape[1] + col] = val;\n        }\n        col += 1;\n      });\n      return cellXGeneMatrix;\n    });\n    return this._sparseMatrix;\n  }\n\n  /**\n   * Class method for loading the cell x gene matrix.\n   * @returns {Promise} A promise for the zarr array contianing the cell x gene data.\n   */\n  async loadCellXGene() {\n    const { store } = this;\n    if (this.cellXGene) {\n      return this.cellXGene;\n    }\n    const {\n      options: { matrix, matrixGeneFilter },\n    } = this;\n    if (!this._matrixZattrs) {\n      this._matrixZattrs = await this.getJson(`${matrix}/.zattrs`);\n    }\n    const encodingType = this._matrixZattrs['encoding-type'];\n    if (!matrixGeneFilter) {\n      if (encodingType === 'csr_matrix') {\n        this.cellXGene = this._loadCSRSparseCellXGene().then(data => normalize(data));\n      } else if (encodingType === 'csc_matrix') {\n        this.cellXGene = this._loadCSCSparseCellXGene().then(data => normalize(data));\n      } else {\n        if (!this.arr) {\n          this.arr = openArray({ store, path: matrix, mode: 'r' });\n        }\n        this.cellXGene = this.arr.then(z => z.getRaw(null).then(({ data }) => normalize(data)));\n      }\n    } else if (encodingType === 'csr_matrix') {\n      this.cellXGene = this._loadCSRSparseCellXGene().then(\n        async (cellXGene) => {\n          const filteredGenes = await this._getFilteredGenes(matrixGeneFilter);\n          const numGenesFiltered = filteredGenes.length;\n          const geneNames = await this.loadGeneNames();\n          const numGenes = geneNames.length;\n          const numCells = await this._getNumCells();\n          const cellXGeneMatrixFiltered = new Float32Array(\n            numCells * numGenesFiltered,\n          ).fill(0);\n          for (let i = 0; i < numGenesFiltered; i += 1) {\n            const index = geneNames.indexOf(filteredGenes[i]);\n            for (let j = 0; j < numCells; j += 1) {\n              cellXGeneMatrixFiltered[j * numGenesFiltered + i] = cellXGene[j * numGenes + index];\n            }\n          }\n          return normalize(cellXGeneMatrixFiltered);\n        },\n      );\n    } else {\n      const genes = await this._getFilteredGenes(matrixGeneFilter);\n      this.cellXGene = this.loadGeneSelection({ selection: genes, shouldNormalize: false })\n        .then(({ data }) => (normalize(concatenateColumnVectors(data))));\n    }\n    return this.cellXGene;\n  }\n\n  /**\n   * Class method for loading a gene selection.\n   * @param {Object} args\n   * @param {Array} args.selection A list of gene names whose data should be fetched.\n   * @param {Boolean} args.shouldNormalize A list of gene names whose data should be fetched.\n   * @returns {Object} { data } containing an array of gene expression data.\n   */\n  async loadGeneSelection({ selection, shouldNormalize = true }) {\n    const {\n      options: { matrix },\n      store,\n    } = this;\n    if (!this._matrixZattrs) {\n      this._matrixZattrs = await this.getJson(`${matrix}/.zattrs`);\n    }\n    const encodingType = this._matrixZattrs['encoding-type'];\n    let genes;\n    if (encodingType === 'csc_matrix') {\n      genes = await this._loadCSCGeneSelection(selection);\n    } else if (encodingType === 'csr_matrix') {\n      genes = await this._loadCSRGeneSelection(selection);\n    } else {\n      if (!this.arr) {\n        this.arr = openArray({ store, path: matrix, mode: 'r' });\n      }\n      const indices = await this._getGeneIndices(selection);\n      // We can index directly into a normal dense array zarr store via `get`.\n      genes = await Promise.all(\n        indices.map(index => this.arr.then(z => z.get([null, index])).then(({ data }) => data)),\n      );\n    }\n    return { data: genes.map(i => (shouldNormalize ? normalize(i).data : i)), url: null };\n  }\n\n  /**\n   * Class method for loading only attributes i.e rows and columns\n   * @param {Array} selection A list of gene names whose data should be fetched.\n   * @returns {Object} { data: { rows, cols }, url } containing row and col labels for the matrix.\n   */\n  loadAttrs() {\n    return Promise.all([this.loadCellNames(), this.loadGeneNames()]).then(\n      (d) => {\n        const [cellNames, geneNames] = d;\n        const attrs = { rows: cellNames, cols: geneNames };\n        return {\n          data: attrs,\n          url: null,\n        };\n      },\n    );\n  }\n\n  load() {\n    return Promise.all([this.loadAttrs(), this.loadCellXGene()]).then(\n      async (d) => {\n        const [{ data: attrs }, cellXGene] = d;\n        const {\n          options: { matrixGeneFilter: matrixGeneFilterZarr },\n        } = this;\n        // In order to return the correct gene list with the heatmap data,\n        // we need to filter the columns of attrs so it matches the cellXGene data.\n        if (matrixGeneFilterZarr) {\n          const matrixGeneFilter = await this.getFlatArrDecompressed(\n            matrixGeneFilterZarr,\n          );\n          attrs.cols = attrs.cols.filter((_, i) => matrixGeneFilter[i]);\n        }\n        return Promise.resolve(new LoaderResult([attrs, cellXGene], null));\n      },\n    );\n  }\n}\n","import CellSetsZarrLoader from './CellSetsZarrLoader';\nimport CellsZarrLoader from './CellsZarrLoader';\nimport MatrixZarrLoader from './MatrixZarrLoader';\n\nexport default { CellSetsZarrLoader, CellsZarrLoader, MatrixZarrLoader };\n","/* eslint-disable no-control-regex */\nimport {\n  treeInitialize,\n  nodeAppendChild,\n  initializeCellSetColor,\n} from '../../components/sets/cell-set-utils';\nimport {\n  SETS_DATATYPE_CELL,\n} from '../../components/sets/constants';\nimport BaseAnnDataLoader from './BaseAnnDataLoader';\nimport LoaderResult from '../LoaderResult';\n\n/**\n * Loader for converting zarr into the cell sets json schema.\n */\nexport default class CellSetsZarrLoader extends BaseAnnDataLoader {\n  async load() {\n    if (!this.cellSetsTree) {\n      const { options } = this;\n      // eslint-disable-next-line camelcase\n      const cellSetZarrLocation = options.map(({ setName }) => setName);\n      this.cellSetsTree = Promise.all([\n        this.loadCellNames(),\n        this.loadCellSetIds(cellSetZarrLocation),\n      ]).then((data) => {\n        const [cellNames, cellSets] = data;\n        const cellSetsTree = treeInitialize(SETS_DATATYPE_CELL);\n        cellSets.forEach((cellSetIds, j) => {\n          const name = options[j].groupName;\n          let levelZeroNode = {\n            name,\n            children: [],\n          };\n          const uniqueCellSetIds = Array(...new Set(cellSetIds)).sort();\n          const clusters = {};\n          // eslint-disable-next-line no-return-assign\n          uniqueCellSetIds.forEach(id => (clusters[id] = { name: id, set: [] }));\n          cellSetIds.forEach((id, i) => clusters[id].set.push([cellNames[i], null]));\n          Object.values(clusters).forEach(\n            // eslint-disable-next-line no-return-assign\n            cluster => (levelZeroNode = nodeAppendChild(levelZeroNode, cluster)),\n          );\n          cellSetsTree.tree.push(levelZeroNode);\n        });\n        return cellSetsTree;\n      });\n    }\n    const cellSetsTree = await this.cellSetsTree;\n    const coordinationValues = {};\n    const { tree } = cellSetsTree;\n    const newAutoSetSelectionParentName = tree[0].name;\n    // Create a list of set paths to initally select.\n    const newAutoSetSelections = tree[0].children.map(node => [\n      newAutoSetSelectionParentName,\n      node.name,\n    ]);\n    // Create a list of cell set objects with color mappings.\n    const newAutoSetColors = initializeCellSetColor(cellSetsTree, []);\n    coordinationValues.cellSetSelection = newAutoSetSelections;\n    coordinationValues.cellSetColor = newAutoSetColors;\n    return Promise.resolve(\n      new LoaderResult(cellSetsTree, null, coordinationValues),\n    );\n  }\n}\n","import BaseAnnDataLoader from './BaseAnnDataLoader';\nimport LoaderResult from '../LoaderResult';\n\n/**\n * Loader for converting zarr into the cell json schema.\n */\nexport default class CellsZarrLoader extends BaseAnnDataLoader {\n  /**\n   * Class method for loading spatial cell centroids.\n   * @returns {Promise} A promise for an array of tuples/triples for cell centroids.\n   */\n  loadXy() {\n    const { xy } = this.options || {};\n    if (this.xy) {\n      return this.xy;\n    }\n    if (!this.xy && xy) {\n      this.xy = this.loadNumeric(xy);\n      return this.xy;\n    }\n    this.xy = Promise.resolve(null);\n    return this.xy;\n  }\n\n  /**\n   * Class method for loading spatial cell polygons.\n   * @returns {Promise} A promise for an array of arrays for cell polygons.\n   */\n  loadPoly() {\n    const { poly } = (this.options || {});\n    if (this.poly) {\n      return this.poly;\n    }\n    if (!this.poly && poly) {\n      this.poly = this.loadNumeric(poly);\n      return this.poly;\n    }\n    this.poly = Promise.resolve(null);\n    return this.poly;\n  }\n\n  /**\n   * Class method for loading various mappings, like UMAP or tSNE cooridnates.\n   * @returns {Promise} A promise for an array of tuples of coordinates.\n   */\n  loadMappings() {\n    const { mappings } = (this.options || {});\n    if (this.mappings) {\n      return this.mappings;\n    }\n    if (!this.mappings && mappings) {\n      this.mappings = Promise.all(\n        Object.keys(mappings).map(async (coordinationName) => {\n          const { key } = mappings[coordinationName];\n          return { coordinationName, arr: await this.loadNumeric(key) };\n        }),\n      );\n      return this.mappings;\n    }\n    this.mappings = Promise.resolve(null);\n    return this.mappings;\n  }\n\n  /**\n   * Class method for loading factors, which are cell set ids.\n   * @returns {Promise} A promise for an array of an array of strings of ids,\n   * where subarray is a clustering/factor.\n   */\n  loadFactors() {\n    const { factors } = this.options || {};\n    if (factors) {\n      return this.loadCellSetIds(factors);\n    }\n    return Promise.resolve(null);\n  }\n\n  async load() {\n    if (!this.cells) {\n      this.cells = Promise.all([\n        this.loadMappings(),\n        this.loadXy(),\n        this.loadPoly(),\n        this.loadCellNames(),\n        this.loadFactors(),\n      ]).then(([mappings, xy, poly, cellNames, factors]) => {\n        const cells = {};\n        cellNames.forEach((name, i) => {\n          cells[name] = {};\n          if (mappings) {\n            mappings.forEach(({ coordinationName, arr }) => {\n              if (!cells[name].mappings) {\n                cells[name].mappings = {};\n              }\n              const { dims } = this.options.mappings[coordinationName];\n              cells[name].mappings[coordinationName] = dims.map(\n                dim => arr.data[i][dim],\n              );\n            });\n          }\n          if (xy) {\n            cells[name].xy = xy.data[i];\n          }\n          if (poly) {\n            cells[name].poly = poly.data[i];\n          }\n          if (factors) {\n            const factorsObj = {};\n            factors.forEach(\n              // eslint-disable-next-line no-return-assign\n              (factor, j) => (factorsObj[this.options.factors[j].split('/').slice(-1)] = factor[i]),\n            );\n            cells[name].factors = factorsObj;\n          }\n        });\n        return cells;\n      });\n    }\n    return Promise.resolve(new LoaderResult(await this.cells, null));\n  }\n}\n","import { HTTPStore } from 'zarr';\nimport AbstractLoader from './AbstractLoader';\nimport LoaderResult from './LoaderResult';\n\nexport default class GenomicProfilesZarrLoader extends AbstractLoader {\n  constructor(params) {\n    super(params);\n\n    // TODO: Use this.requestInit to provide headers, tokens, etc.\n    // eslint-disable-next-line no-unused-vars\n    const { url, requestInit } = this;\n    this.store = new HTTPStore(url);\n  }\n\n  loadAttrs() {\n    const { store } = this;\n    if (this.attrs) {\n      return this.attrs;\n    }\n    this.attrs = store.getItem('.zattrs')\n      .then((bytes) => {\n        const decoder = new TextDecoder('utf-8');\n        const json = JSON.parse(decoder.decode(bytes));\n        return json;\n      });\n    return this.attrs;\n  }\n\n  load() {\n    const { url } = this;\n    return this.loadAttrs()\n      .then(attrs => Promise.resolve(new LoaderResult(attrs, url)));\n  }\n}\n","import JsonLoader from './JsonLoader';\nimport MatrixZarrLoader from './MatrixZarrLoader';\nimport GenesJsonAsMatrixZarrLoader from './GenesJsonAsMatrixZarrLoader';\nimport ClustersJsonAsMatrixZarrLoader from './ClustersJsonAsMatrixZarrLoader';\nimport RasterJsonLoader from './RasterJsonLoader';\nimport OmeZarrLoader from './OmeZarrLoader';\nimport CellSetsJsonLoader from './CellSetsJsonLoader';\nimport AnnDataLoaders from './anndata-loaders';\nimport GenomicProfilesZarrLoader from './GenomicProfilesZarrLoader';\n\nconst ANNDATA = 'anndata';\n\nexport const fileTypeToLoader = {\n  'expression-matrix.zarr': MatrixZarrLoader,\n  'clusters.json': ClustersJsonAsMatrixZarrLoader,\n  'genes.json': GenesJsonAsMatrixZarrLoader,\n  'cells.json': JsonLoader,\n  'molecules.json': JsonLoader,\n  'neighborhoods.json': JsonLoader,\n  'raster.json': RasterJsonLoader,\n  'raster.ome-zarr': OmeZarrLoader,\n  'cell-sets.json': CellSetsJsonLoader,\n  [`${ANNDATA}-cell-sets.zarr`]: AnnDataLoaders.CellSetsZarrLoader,\n  [`${ANNDATA}-cells.zarr`]: AnnDataLoaders.CellsZarrLoader,\n  [`${ANNDATA}-expression-matrix.zarr`]: AnnDataLoaders.MatrixZarrLoader,\n  'genomic-profiles.zarr': GenomicProfilesZarrLoader,\n};\n","import { useRef, useCallback, useMemo } from 'react';\nimport create from 'zustand';\nimport shallow from 'zustand/shallow';\nimport { fromEntries, capitalize } from '../../utils';\n\n/**\n * The useViewConfigStore hook is initialized via the zustand\n * create() function, which sets up both the state variables\n * and the reducer-type functions.\n * Reference: https://github.com/react-spring/zustand\n * @returns {function} The useStore hook.\n */\nexport const useViewConfigStore = create(set => ({\n  // State:\n  // The viewConfig is an object which must conform to the schema\n  // found in src/schemas/config.schema.json.\n  viewConfig: null,\n  // The loaders object is a mapping from dataset ID to\n  // data type to loader object instance.\n  loaders: null,\n  // Reducer functions which update the state\n  // (although technically also part of state):\n  setViewConfig: viewConfig => set({ viewConfig }),\n  setLoaders: loaders => set({ loaders }),\n  setCoordinationValue: ({ parameter, scope, value }) => set(state => ({\n    viewConfig: {\n      ...state.viewConfig,\n      coordinationSpace: {\n        ...state.viewConfig.coordinationSpace,\n        [parameter]: {\n          ...state.viewConfig.coordinationSpace[parameter],\n          [scope]: value,\n        },\n      },\n    },\n  })),\n  removeComponent: i => set((state) => {\n    const newLayout = state.viewConfig.layout.slice();\n    newLayout.splice(i, 1);\n    return {\n      viewConfig: {\n        ...state.viewConfig,\n        layout: newLayout,\n      },\n    };\n  }),\n  changeLayout: newComponentProps => set((state) => {\n    const newLayout = state.viewConfig.layout.slice();\n    newComponentProps.forEach(([i, newProps]) => {\n      newLayout[i] = {\n        ...newLayout[i],\n        ...newProps,\n      };\n    });\n    return {\n      viewConfig: {\n        ...state.viewConfig,\n        layout: newLayout,\n      },\n    };\n  }),\n}));\n\n/**\n * Hook for getting components' layout from the view config based on\n * matching all coordination scopes.\n * @returns {Object} The components' layout.\n */\nexport const useComponentLayout = (component, scopes, coordinationScopes) => useViewConfigStore(\n  state => state.viewConfig.layout.filter(l => l.component === component).filter(\n    l => scopes.every(scope => l.coordinationScopes[scope]\n          === coordinationScopes[scope]),\n  ),\n);\n\n/**\n * The useAuxiliaryStore hook is initialized via the zustand\n * create() function, which sets up both the state variables\n * and the reducer-type functions.\n * Reference: https://github.com/react-spring/zustand\n * It is meant to be used for non-viewconfig-based coordination between components.\n * For example, as currently happens, the layer controller can coordinate\n * on-load callbacks with spatial view based on whether or not they are\n * coordinated via `spatialRasterLayers` - the callbacks are not part of the view config\n * though so they live here.\n * @returns {function} The useStore hook.\n */\nexport const useAuxiliaryStore = create(set => ({\n  auxiliaryStore: null,\n  setCoordinationValue: ({ parameter, scope, value }) => set(state => ({\n    auxiliaryStore: {\n      ...state.auxiliaryStore,\n      [parameter]: {\n        [scope]: value,\n      },\n    },\n  })),\n}));\n\n/**\n * The hover store can be used to store global state\n * related to which component is currently hovered,\n * which is required for tooltip / crossover elements.\n * @returns {function} The useStore hook.\n */\nconst useHoverStore = create(set => ({\n  // Components may need to know if they are the \"hover source\"\n  // for tooltip interactions. This value should be a unique\n  // component ID, such as its index in the view config layout.\n  componentHover: null,\n  setComponentHover: componentHover => set({ componentHover }),\n}));\n\n/**\n * The warning store can be used to store global state\n * related to app warning messages.\n * @returns {function} The useStore hook.\n */\nconst useWarnStore = create(set => ({\n  // Want a global state to collect warning messages\n  // that occur anywhere in the app.\n  warning: null,\n  setWarning: warning => set({ warning }),\n}));\n\n/**\n * The view info store can be used to store component-level\n * viewInfo objects,\n * which are required for tooltip / crossover elements.\n * @returns {function} The useStore hook.\n */\nconst useViewInfoStore = create(set => ({\n  // The viewInfo object is a mapping from\n  // component IDs to component view info objects.\n  // Each view info object must have a project() function.\n  viewInfo: {},\n  setComponentViewInfo: (uuid, viewInfo) => set(state => ({\n    viewInfo: {\n      ...state.viewInfo,\n      [uuid]: viewInfo,\n    },\n  })),\n}));\n\n/**\n * The grid size store can be used to store a\n * counter which updates on each window or react-grid-layout\n * resize event.\n * @returns {function} The useStore hook.\n */\nconst useGridSizeStore = create(set => ({\n  resizeCount: {},\n  incrementResizeCount: () => set(state => ({\n    resizeCount: state.resizeCount + 1,\n  })),\n}));\n\n/**\n * The useCoordination hook returns both the\n * values and setter functions for the coordination objects\n * in a particular coordination scope mapping.\n * This hook is intended to be used within the ___Subscriber\n * components to allow them to \"hook into\" only those coordination\n * objects and setter functions of relevance.\n * @param {string[]} parameters Array of coordination types.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {array} Returns a tuple [values, setters]\n * where values is an object containing all coordination values,\n * and setters is an object containing all coordination setter\n * functions for the values in `values`, named with a \"set\"\n * prefix.\n */\nexport function useCoordination(parameters, coordinationScopes) {\n  const setCoordinationValue = useViewConfigStore(state => state.setCoordinationValue);\n\n  const values = useViewConfigStore((state) => {\n    const { coordinationSpace } = state.viewConfig;\n    return fromEntries(parameters.map((parameter) => {\n      if (coordinationSpace && coordinationSpace[parameter]) {\n        const value = coordinationSpace[parameter][coordinationScopes[parameter]];\n        return [parameter, value];\n      }\n      return [parameter, undefined];\n    }));\n  }, shallow);\n\n  const setters = useMemo(() => fromEntries(parameters.map((parameter) => {\n    const setterName = `set${capitalize(parameter)}`;\n    const setterFunc = value => setCoordinationValue({\n      parameter,\n      scope: coordinationScopes[parameter],\n      value,\n    });\n    return [setterName, setterFunc];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  })), [parameters, coordinationScopes]);\n\n  return [values, setters];\n}\n\nconst AUXILIARY_COORDINATION_TYPES_MAP = {\n  spatialRasterLayers: ['rasterLayersCallbacks', 'areLoadingRasterChannnels'],\n};\n\n/**\n * The maps the coordination types of incoming scopes to new types\n * for the auxiliary store.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {object} Mapping of coordination types\n * to new scope names for the auxiliary store.\n */\nconst mapCoordinationScopes = (coordinationScopes) => {\n  const newCoordinationScopes = {};\n  Object.keys(coordinationScopes).forEach((key) => {\n    const newCoordinationTypes = AUXILIARY_COORDINATION_TYPES_MAP[key] || [];\n    newCoordinationTypes.forEach((coordinationType) => {\n      newCoordinationScopes[coordinationType || key] = coordinationScopes[key];\n    });\n  });\n  return newCoordinationScopes;\n};\n\nconst mapParameters = parameters => parameters\n  .map(parameter => AUXILIARY_COORDINATION_TYPES_MAP[parameter]).filter(Boolean).flat();\n\n/**\n * The useAuxiliaryCoordination hook returns both the\n * values and setter functions for the auxiliary coordination objects\n * in a particular coordination scope mapping.\n * This hook is intended to be used within the ___Subscriber\n * components to allow them to \"hook into\" only those auxiliary coordination\n * objects and setter functions of relevance, for example \"on load\" callbacks.\n * @param {string[]} parameters Array of coordination types.\n * @param {object} coordinationScopes Mapping of coordination types\n * to scope names.\n * @returns {array} Returns a tuple [values, setters]\n * where values is an object containing all coordination values,\n * and setters is an object containing all coordination setter\n * functions for the values in `values`, named with a \"set\"\n * prefix.\n */\nexport function useAuxiliaryCoordination(parameters, coordinationScopes) {\n  const setCoordinationValue = useAuxiliaryStore(state => state.setCoordinationValue);\n  const mappedCoordinationScopes = mapCoordinationScopes(coordinationScopes);\n  const mappedParameters = mapParameters(parameters);\n  const values = useAuxiliaryStore((state) => {\n    const { auxiliaryStore } = state;\n    return fromEntries(mappedParameters.map((parameter) => {\n      if (auxiliaryStore && auxiliaryStore[parameter]) {\n        const value = auxiliaryStore[parameter][mappedCoordinationScopes[parameter]];\n        return [parameter, value];\n      }\n      return [parameter, undefined];\n    }));\n  }, shallow);\n  const setters = useMemo(() => fromEntries(mappedParameters.map((parameter) => {\n    const setterName = `set${capitalize(parameter)}`;\n    const setterFunc = value => setCoordinationValue({\n      parameter,\n      scope: mappedCoordinationScopes[parameter],\n      value,\n    });\n    return [setterName, setterFunc];\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  })), [parameters, coordinationScopes]);\n\n  return [values, setters];\n}\n\n/**\n * Obtain the loaders object from\n * the global app state.\n * @returns {object} The loaders object\n * in the `useViewConfigStore` store.\n */\nexport function useLoaders() {\n  return useViewConfigStore(state => state.loaders);\n}\n\n/**\n * Obtain the view config layout array from\n * the global app state.\n * @returns {object[]} The layout array\n * in the `useViewConfigStore` store.\n */\nexport function useLayout() {\n  return useViewConfigStore(state => state.viewConfig?.layout);\n}\n\n/**\n * Obtain the component removal function from\n * the global app state.\n * @returns {function} The remove component function\n * in the `useViewInfoStore` store.\n */\nexport function useRemoveComponent() {\n  return useViewConfigStore(state => state.removeComponent);\n}\n\n/**\n * Obtain the component prop setter function from\n * the global app state.\n * @returns {function} The set component props function\n * in the `useViewInfoStore` store.\n */\nexport function useChangeLayout() {\n  return useViewConfigStore(state => state.changeLayout);\n}\n\n/**\n * Obtain the loaders setter function from\n * the global app state.\n * @returns {function} The loaders setter function\n * in the `useViewConfigStore` store.\n */\nexport function useSetLoaders() {\n  return useViewConfigStore(state => state.setLoaders);\n}\n\n/**\n * Obtain the view config setter function from\n * the global app state.\n * @returns {function} The view config setter function\n * in the `useViewConfigStore` store.\n */\nexport function useSetViewConfig() {\n  const setViewConfigRef = useRef(useViewConfigStore.getState().setViewConfig);\n  const setViewConfig = setViewConfigRef.current;\n  return setViewConfig;\n}\n\n/**\n * Obtain the component hover value from\n * the global app state.\n * @returns {number} The hovered component ID\n * in the `useHoverStore` store.\n */\nexport function useComponentHover() {\n  return useHoverStore(state => state.componentHover);\n}\n\n/**\n * Obtain the component hover setter function from\n * the global app state.\n * @returns {function} The component hover setter function\n * in the `useHoverStore` store.\n */\nexport function useSetComponentHover() {\n  return useHoverStore(state => state.setComponentHover);\n}\n\n/**\n * Obtain the warning message from\n * the global app state.\n * @returns {string} The warning message\n * in the `useWarnStore` store.\n */\nexport function useWarning() {\n  return useWarnStore(state => state.warning);\n}\n\n/**\n * Obtain the warning setter function from\n * the global app state.\n * @returns {function} The warning setter function\n * in the `useWarnStore` store.\n */\nexport function useSetWarning() {\n  return useWarnStore(state => state.setWarning);\n}\n\n/**\n * Obtain the component view info value from\n * the global app state.\n * @returns {object} The view info object for the component\n * in the `useViewInfoStore` store.\n */\nexport function useComponentViewInfo(uuid) {\n  return useViewInfoStore(useCallback(state => state.viewInfo[uuid], [uuid]));\n}\n\n/**\n * Obtain the component view info setter function from\n * the global app state.\n * @returns {function} The component view info setter function\n * in the `useViewInfoStore` store.\n */\nexport function useSetComponentViewInfo(uuid) {\n  const setViewInfoRef = useRef(useViewInfoStore.getState().setComponentViewInfo);\n  const setComponentViewInfo = viewInfo => setViewInfoRef.current(uuid, viewInfo);\n  return setComponentViewInfo;\n}\n\n/**\n * Obtain the grid resize count value\n * from the global app state.\n * @returns {number} The grid resize increment value.\n */\nexport function useGridResize() {\n  return useGridSizeStore(state => state.resizeCount);\n}\n\n/**\n * Obtain the grid resize count increment function\n * from the global app state.\n * @returns {function} The grid resize count increment\n * function.\n */\nexport function useEmitGridResize() {\n  return useGridSizeStore(state => state.incrementResizeCount);\n}\n","import React, {\n  useEffect,\n} from 'react';\nimport { VitessceGridLayout } from './vitessce-grid-layout';\nimport { useRowHeight, createLoaders } from './vitessce-grid-utils';\nimport {\n  useSetViewConfig,\n  useSetLoaders,\n  useEmitGridResize,\n  useRemoveComponent,\n  useChangeLayout,\n  useLayout,\n} from './state/hooks';\n\nconst padding = 10;\nconst margin = 5;\n\n/**\n * The wrapper for the VitessceGrid and LoadingIndicator components.\n * @param {object} props\n * @param {number} props.rowHeight The height of each grid row. Optional.\n * @param {object} props.config The view config.\n * @param {function} props.getComponent A function that maps component names to their\n * React counterparts.\n * @param {string} props.theme The theme name.\n * @param {number} props.height Total height for grid. Optional.\n * @param {function} props.onWarn A callback for warning messages. Optional.\n */\nexport default function VitessceGrid(props) {\n  const {\n    rowHeight: initialRowHeight,\n    config,\n    getComponent,\n    theme,\n    height,\n  } = props;\n\n  const [rowHeight, containerRef] = useRowHeight(config, initialRowHeight, height, margin, padding);\n  const onResize = useEmitGridResize();\n\n  // When the row height has changed, publish a GRID_RESIZE event.\n  useEffect(() => {\n    onResize();\n  }, [rowHeight, onResize]);\n\n  const setViewConfig = useSetViewConfig();\n  const setLoaders = useSetLoaders();\n  const removeComponent = useRemoveComponent();\n  const changeLayout = useChangeLayout();\n  const layout = useLayout();\n\n  // Update the view config and loaders in the global state.\n  useEffect(() => {\n    if (config) {\n      setViewConfig(config);\n      const loaders = createLoaders(config.datasets, config.description);\n      setLoaders(loaders);\n    } else {\n      // No config found, so clear the loaders.\n      setLoaders({});\n    }\n  }, [config, setViewConfig, setLoaders]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={`vitessce-container vitessce-theme-${theme}`}\n    >\n      {layout && (\n        <VitessceGridLayout\n          layout={layout}\n          height={height}\n          rowHeight={rowHeight}\n          theme={theme}\n          getComponent={getComponent}\n          draggableHandle=\".title\"\n          margin={margin}\n          padding={padding}\n          onRemoveComponent={removeComponent}\n          onLayoutChange={changeLayout}\n          reactGridLayoutProps={{\n            onResize,\n            onResizeStop: onResize,\n          }}\n        />\n      )}\n    </div>\n  );\n}\n","import {\n  useState, useEffect, useRef,\n} from 'react';\nimport { fileTypeToLoader } from '../loaders/types';\nimport JsonLoader from '../loaders/JsonLoader';\n\n/**\n * Return the bottom coordinate of the layout.\n * https://github.com/STRML/react-grid-layout/blob/20dac73f91274526034c00968b5bedb9c2ed36b9/lib/utils.js#L82\n * @param  {array} layout react-grid-layout layout array.\n * @returns {number} Bottom coordinate.\n */\nfunction getNumRows(layout) {\n  let max = 0;\n  let bottomY;\n  // eslint-disable-next-line no-plusplus\n  for (let i = 0, len = layout.length; i < len; i++) {\n    bottomY = layout[i].y + layout[i].h;\n    if (bottomY > max) max = bottomY;\n  }\n  return max;\n}\n\n/**\n * Compute the row height based on the container height, number of rows,\n * and margin/padding. Basically the reverse of the react-grid-layout's\n * `.containerHeight()` function.\n * https://github.com/STRML/react-grid-layout/blob/83251e5e682abfa3252ff89d4bacf47fdc1f4270/lib/ReactGridLayout.jsx#L223\n * @param {number} containerHeight The height of the .vitessce-container element.\n * @param {number} numRows The number of rows in the layout.\n * @param {number} margin The margin value that will be passed to VitessceGrid.\n * @param {number} padding The padding value that will be passed to VitessceGrid.\n * @returns {number} The new row height value.\n */\nfunction getRowHeight(containerHeight, numRows, margin, padding) {\n  const effectiveContainerHeight = containerHeight - 2 * padding - (numRows - 1) * margin;\n  return effectiveContainerHeight / numRows;\n}\n\nexport function useRowHeight(config, initialRowHeight, height, margin, padding) {\n  const [containerHeight, setContainerHeight] = useState(height);\n  const [rowHeight, setRowHeight] = useState(initialRowHeight);\n  const containerRef = useRef();\n\n  // Detect when the `config` or `containerHeight` variables\n  // have changed, and update `rowHeight` in response.\n  useEffect(() => {\n    const numRows = getNumRows(config.layout);\n    const newRowHeight = getRowHeight(containerHeight, numRows, margin, padding);\n    setRowHeight(newRowHeight);\n  }, [containerHeight, config, margin, padding]);\n\n  // Update the `containerHeight` state when the `height` prop has changed.\n  useEffect(() => {\n    if (height !== null && height !== undefined) {\n      setContainerHeight(height);\n    }\n  }, [height]);\n\n  // If no height prop has been provided, set the `containerHeight`\n  // using height of the `.vitessce-container` element.\n  // Check the container element height whenever the window has been\n  // resized, as it may change if `.vitessce-container` should be\n  // sized relative to its parent (and by extension, potentially the window).\n  useEffect(() => {\n    if (height !== null && height !== undefined) {\n      // eslint will complain if the return value is inconsistent,\n      // so return a no-op function.\n      return () => {};\n    }\n    function onWindowResize() {\n      if (!containerRef.current) return;\n      const containerRect = containerRef.current.getBoundingClientRect();\n      setContainerHeight(containerRect.height);\n    }\n    window.addEventListener('resize', onWindowResize);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n    };\n  }, [containerRef, height]);\n\n\n  return [rowHeight, containerRef];\n}\n\n/**\n * Create a mapping from dataset ID to loader objects by data type.\n * @param {object[]} datasets The datasets array from the view config.\n * @param {string} configDescription The top-level description in the\n * view config.\n * @returns {object} Mapping from dataset ID to data type to loader\n * instance.\n */\nexport function createLoaders(datasets, configDescription) {\n  const result = {};\n  datasets.forEach((dataset) => {\n    const datasetLoaders = {\n      name: dataset.name,\n      description: dataset.description || configDescription,\n      loaders: {},\n    };\n    dataset.files.forEach((file) => {\n      // Fall back to JsonLoader if a loader is not found for the file type.\n      const matchingLoaderClass = fileTypeToLoader[file.fileType] || JsonLoader;\n      // eslint-disable-next-line new-cap\n      datasetLoaders.loaders[file.type] = new matchingLoaderClass(file);\n    });\n    result[dataset.uid] = datasetLoaders;\n  });\n  return result;\n}\n","import Ajv from 'ajv';\nimport { useEffect } from 'react';\nimport configSchema from '../schemas/config-1.0.1.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport { useViewConfigStore, useLoaders, useWarning } from './state/hooks';\n\nfunction validateViewConfig(viewConfig) {\n  // Need the try-catch here since Zustand will actually\n  // just catch and ignore errors in its subscription callbacks.\n  try {\n    const validate = new Ajv()\n      .addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema);\n    const valid = validate(viewConfig);\n    if (!valid) {\n      const failureReason = JSON.stringify(validate.errors, null, 2);\n      throw new Error(`Config validation failed: ${failureReason}`);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n  // Do nothing if successful.\n}\n\n/**\n * This is a dummy component which handles\n * publishing new view configs and loaders to\n * the provided callbacks on changes.\n * @param {object} props\n * @param {function} props.onConfigChange A callback function\n * to execute on each change of the Vitessce view config.\n * @param {function} props.onLoaderChange A callback function\n * to execute on each change of the loaders object.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes.\n */\nexport default function CallbackPublisher(props) {\n  const {\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange,\n  } = props;\n\n  const warning = useWarning();\n  const loaders = useLoaders();\n\n  // View config updates are often-occurring, so\n  // we want to use the \"transient update\" approach\n  // to subscribe to view config changes.\n  // Reference: https://github.com/react-spring/zustand#transient-updates-for-often-occuring-state-changes\n  useEffect(() => useViewConfigStore.subscribe(\n    // The function to run on each publish.\n    (viewConfig) => {\n      if (validateOnConfigChange && viewConfig) {\n        validateViewConfig(viewConfig);\n      }\n      if (onConfigChange && viewConfig) {\n        onConfigChange(viewConfig);\n      }\n    },\n    // The function to specify which part of the store\n    // we want to subscribe to.\n    state => state.viewConfig,\n  ), [onConfigChange, validateOnConfigChange]);\n\n  // Emit updates to the warning message.\n  useEffect(() => {\n    if (onWarn && warning) {\n      onWarn(warning);\n    }\n  }, [warning, onWarn]);\n\n  // Emit updates to the loaders.\n  useEffect(() => {\n    if (onLoaderChange && loaders) {\n      onLoaderChange(loaders);\n    }\n  }, [loaders, onLoaderChange]);\n\n  // Render nothing.\n  return null;\n}\n","import {\n  useRef, useState, useEffect, useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport { useGridResize, useEmitGridResize } from '../app/state/hooks';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\n/**\n * Custom hook, gets the full window dimensions.\n * @returns {array} `[width, height]` where width and height\n * are numbers.\n */\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    const onResizeDebounced = debounce(handleResize, 100, { trailing: true });\n\n    window.addEventListener('resize', onResizeDebounced);\n    return () => window.removeEventListener('resize', onResizeDebounced);\n  }, []);\n\n  return windowDimensions;\n}\n\n/**\n * Custom hook, subscribes to GRID_RESIZE and window resize events.\n * @returns {array} `[width, height, containerRef]` where width and height\n * are numbers and containerRef is a React ref.\n */\nexport function useGridItemSize() {\n  const containerRef = useRef();\n\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  const resizeCount = useGridResize();\n  const incrementResizeCount = useEmitGridResize();\n\n  // On window resize events, increment the grid resize count.\n  useEffect(() => {\n    function onWindowResize() {\n      incrementResizeCount();\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [incrementResizeCount]);\n\n  // On new grid resize counts, re-compute the component\n  // width/height.\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n    const containerRect = container.getBoundingClientRect();\n    setHeight(containerRect.height);\n    setWidth(containerRect.width);\n  }, [resizeCount]);\n\n  return [width, height, containerRef];\n}\n\n/**\n * Custom hook, subscribes to GRID_RESIZE and window resize events.\n * @returns {array} `[width, height, deckRef]` where width and height\n * are numbers and deckRef is a React ref to be used with\n * a <DeckGL/> element (or a forwardRef to one).\n */\nexport function useDeckCanvasSize() {\n  const deckRef = useRef();\n\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  const resizeCount = useGridResize();\n  const incrementResizeCount = useEmitGridResize();\n\n  // On window resize events, increment the grid resize count.\n  useEffect(() => {\n    function onWindowResize() {\n      incrementResizeCount();\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [incrementResizeCount]);\n\n  // On new grid resize counts, re-compute the DeckGL canvas\n  // width/height.\n  useEffect(() => {\n    if (!deckRef.current) return;\n    const { canvas } = deckRef.current.deck;\n    const canvasRect = canvas.getBoundingClientRect();\n    setHeight(canvasRect.height);\n    setWidth(canvasRect.width);\n  }, [resizeCount]);\n\n  return [width, height, deckRef];\n}\n\n/**\n * This hook handles a boolean isReady value,\n * which only returns true once every item in the\n * input list has been marked as \"ready\".\n * @param {string[]} items The items to wait on.\n * Should be defined as a constant\n * (outside a function component / render function),\n * otherwise strange bugs may occur.\n * @returns {array} An array\n * [isReady, setItemIsReady, resetReadyItems]\n * where isReady is the boolean value,\n * setItemIsReady marks one item as ready,\n * and resetReadyItem marks all items as waiting.\n */\nexport function useReady(supportedItems) {\n  const items = supportedItems;\n  const [waiting, setWaiting] = useState(items);\n\n  const setItemIsReady = useCallback((readyItem) => {\n    setWaiting((waitingItems) => {\n      const nextWaitingItems = waitingItems.filter(item => item !== readyItem);\n      // eslint-disable-next-line no-console\n      console.log(`cleared ${readyItem}; waiting on ${nextWaitingItems.length}: ${JSON.stringify(nextWaitingItems)}`);\n      return nextWaitingItems;\n    });\n  }, [setWaiting]);\n\n  const resetReadyItems = useCallback(() => {\n    setWaiting(items);\n    // eslint-disable-next-line no-console\n    console.log(`waiting on ${items.length}: ${JSON.stringify(items)}`);\n  }, [setWaiting, items]);\n\n  const isReady = waiting.length === 0;\n\n  return [isReady, setItemIsReady, resetReadyItems];\n}\n\n/**\n * This hook manages a list of URLs,\n * with adding and resetting helpers.\n * @returns {array} An array\n * [urls, addUrl, resetUrls]\n * where urls is the array of URL objects,\n * addUrl is a function for adding a URL to the array,\n * resetUrls is a function that clears the array.\n */\nexport function useUrls() {\n  const [urls, setUrls] = useState([]);\n\n  const addUrl = useCallback((url, name) => {\n    if (url) {\n      setUrls(prev => ([...prev, { url, name }]));\n    }\n  }, [setUrls]);\n\n  const resetUrls = useCallback(() => {\n    setUrls([]);\n  }, [setUrls]);\n\n  return [urls, addUrl, resetUrls];\n}\n\n/**\n * Custom hook, subscribes to the width and height of the closest .vitessce-container\n * element and updates upon window resize events.\n * @param {Ref} ref A React ref object within the `.vitessce-container`.\n * @returns {array} `[width, height]` where width and height\n * are numbers.\n */\nexport function useClosestVitessceContainerSize(ref) {\n  const [height, setHeight] = useState();\n  const [width, setWidth] = useState();\n\n  useEffect(() => {\n    function onWindowResize() {\n      if (ref.current) {\n        const {\n          clientHeight: componentHeight, clientWidth: componentWidth,\n        } = ref.current.closest('.vitessce-container');\n        setWidth(componentWidth);\n        setHeight(componentHeight);\n      }\n    }\n    const onResizeDebounced = debounce(onWindowResize, 100, { trailing: true });\n    window.addEventListener('resize', onResizeDebounced);\n    onWindowResize();\n    return () => {\n      window.removeEventListener('resize', onResizeDebounced);\n    };\n  }, [ref]);\n\n  return [width, height];\n}\n","/**\n * Constants representing names of coordination types,\n * to help prevent typos.\n */\nexport const COORDINATION_TYPES = {\n  DATASET: 'dataset',\n  EMBEDDING_TYPE: 'embeddingType',\n  EMBEDDING_ZOOM: 'embeddingZoom',\n  EMBEDDING_ROTATION: 'embeddingRotation',\n  EMBEDDING_TARGET_X: 'embeddingTargetX',\n  EMBEDDING_TARGET_Y: 'embeddingTargetY',\n  EMBEDDING_TARGET_Z: 'embeddingTargetZ',\n  EMBEDDING_CELL_SET_POLYGONS_VISIBLE: 'embeddingCellSetPolygonsVisible',\n  EMBEDDING_CELL_SET_LABELS_VISIBLE: 'embeddingCellSetLabelsVisible',\n  EMBEDDING_CELL_SET_LABEL_SIZE: 'embeddingCellSetLabelSize',\n  EMBEDDING_CELL_RADIUS: 'embeddingCellRadius',\n  SPATIAL_ZOOM: 'spatialZoom',\n  SPATIAL_ROTATION: 'spatialRotation',\n  SPATIAL_TARGET_X: 'spatialTargetX',\n  SPATIAL_TARGET_Y: 'spatialTargetY',\n  SPATIAL_TARGET_Z: 'spatialTargetZ',\n  SPATIAL_ROTATION_X: 'spatialRotationX',\n  SPATIAL_ROTATION_Y: 'spatialRotationY',\n  SPATIAL_ROTATION_Z: 'spatialRotationZ',\n  SPATIAL_ROTATION_ORBIT: 'spatialRotationOrbit',\n  SPATIAL_ORBIT_AXIS: 'spatialOrbitAxis',\n  SPATIAL_AXIS_FIXED: 'spatialAxisFixed',\n  HEATMAP_ZOOM_X: 'heatmapZoomX',\n  HEATMAP_ZOOM_Y: 'heatmapZoomY',\n  HEATMAP_TARGET_X: 'heatmapTargetX',\n  HEATMAP_TARGET_Y: 'heatmapTargetY',\n  CELL_FILTER: 'cellFilter',\n  CELL_HIGHLIGHT: 'cellHighlight',\n  CELL_SET_SELECTION: 'cellSetSelection',\n  CELL_SET_HIGHLIGHT: 'cellSetHighlight',\n  CELL_SET_COLOR: 'cellSetColor',\n  GENE_FILTER: 'geneFilter',\n  GENE_HIGHLIGHT: 'geneHighlight',\n  GENE_SELECTION: 'geneSelection',\n  GENE_EXPRESSION_COLORMAP: 'geneExpressionColormap',\n  GENE_EXPRESSION_TRANSFORM: 'geneExpressionTransform',\n  GENE_EXPRESSION_COLORMAP_RANGE: 'geneExpressionColormapRange',\n  CELL_COLOR_ENCODING: 'cellColorEncoding',\n  SPATIAL_RASTER_LAYERS: 'spatialRasterLayers',\n  SPATIAL_CELLS_LAYER: 'spatialCellsLayer',\n  SPATIAL_MOLECULES_LAYER: 'spatialMoleculesLayer',\n  SPATIAL_NEIGHBORHOODS_LAYER: 'spatialNeighborhoodsLayer',\n  GENOMIC_ZOOM_X: 'genomicZoomX',\n  GENOMIC_ZOOM_Y: 'genomicZoomY',\n  GENOMIC_TARGET_X: 'genomicTargetX',\n  GENOMIC_TARGET_Y: 'genomicTargetY',\n  ADDITIONAL_CELL_SETS: 'additionalCellSets',\n  MOLECULE_HIGHLIGHT: 'moleculeHighlight',\n};\n\n/**\n * Coordination types may have default values,\n * which can be defined here, and used by the\n * auto initialization strategy.\n */\nexport const DEFAULT_COORDINATION_VALUES = {\n  [COORDINATION_TYPES.EMBEDDING_ZOOM]: null,\n  [COORDINATION_TYPES.EMBEDDING_ROTATION]: 0,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_X]: null,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_Y]: null,\n  [COORDINATION_TYPES.EMBEDDING_TARGET_Z]: 0,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE]: false,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE]: false,\n  [COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE]: 14,\n  [COORDINATION_TYPES.EMBEDDING_CELL_RADIUS]: 1,\n  [COORDINATION_TYPES.SPATIAL_ZOOM]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION]: 0,\n  [COORDINATION_TYPES.SPATIAL_TARGET_X]: null,\n  [COORDINATION_TYPES.SPATIAL_TARGET_Y]: null,\n  [COORDINATION_TYPES.SPATIAL_TARGET_Z]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_X]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_Y]: null,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_Z]: null,\n  [COORDINATION_TYPES.SPATIAL_AXIS_FIXED]: false,\n  [COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT]: 0,\n  [COORDINATION_TYPES.SPATIAL_ORBIT_AXIS]: 'Y',\n  [COORDINATION_TYPES.SPATIAL_RASTER_LAYERS]: null,\n  [COORDINATION_TYPES.SPATIAL_CELLS_LAYER]: null,\n  [COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER]: null,\n  [COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER]: null,\n  [COORDINATION_TYPES.HEATMAP_ZOOM_X]: 0,\n  [COORDINATION_TYPES.HEATMAP_ZOOM_Y]: 0,\n  [COORDINATION_TYPES.HEATMAP_TARGET_X]: 0,\n  [COORDINATION_TYPES.HEATMAP_TARGET_Y]: 0,\n  [COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP]: 'plasma',\n  [COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE]: [0.0, 1.0],\n  [COORDINATION_TYPES.GENE_EXPRESSION_TRANSFORM]: null,\n  [COORDINATION_TYPES.GENE_FILTER]: null,\n  [COORDINATION_TYPES.GENE_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.GENE_SELECTION]: null,\n  [COORDINATION_TYPES.CELL_FILTER]: null,\n  [COORDINATION_TYPES.CELL_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.CELL_SET_SELECTION]: null,\n  [COORDINATION_TYPES.CELL_SET_HIGHLIGHT]: null,\n  [COORDINATION_TYPES.CELL_SET_COLOR]: null,\n  [COORDINATION_TYPES.CELL_COLOR_ENCODING]: 'cellSetSelection',\n  [COORDINATION_TYPES.GENOMIC_ZOOM_X]: 0,\n  [COORDINATION_TYPES.GENOMIC_ZOOM_Y]: 0,\n  [COORDINATION_TYPES.GENOMIC_TARGET_X]: 1549999999.5,\n  [COORDINATION_TYPES.GENOMIC_TARGET_Y]: 1549999999.5,\n  [COORDINATION_TYPES.ADDITIONAL_CELL_SETS]: null,\n  [COORDINATION_TYPES.MOLECULE_HIGHLIGHT]: null,\n};\n\n// The following coordination types should be\n// initialized to independent scopes when\n// initialized automatically.\n// These make the resulting view config\n// (after auto-initialization) behave\n// like \"legacy\" Vitessce (pre-coordination model).\nexport const AUTO_INDEPENDENT_COORDINATION_TYPES = [\n  COORDINATION_TYPES.HEATMAP_ZOOM_X,\n  COORDINATION_TYPES.HEATMAP_ZOOM_Y,\n  COORDINATION_TYPES.HEATMAP_TARGET_X,\n  COORDINATION_TYPES.HEATMAP_TARGET_Y,\n  COORDINATION_TYPES.EMBEDDING_ZOOM,\n  COORDINATION_TYPES.EMBEDDING_TARGET_X,\n  COORDINATION_TYPES.EMBEDDING_TARGET_Y,\n  COORDINATION_TYPES.EMBEDDING_TARGET_Z,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE,\n  COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE,\n  COORDINATION_TYPES.EMBEDDING_CELL_RADIUS,\n];\n\n/**\n   * Mapping from component type to\n   * supported coordination object types.\n   * This mapping can be used to determine\n   * which pieces of state that a component will\n   * need to get/set.\n   * Keys here are the component registry keys.\n   */\nexport const COMPONENT_COORDINATION_TYPES = {\n  scatterplot: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.EMBEDDING_TYPE,\n    COORDINATION_TYPES.EMBEDDING_ZOOM,\n    COORDINATION_TYPES.EMBEDDING_ROTATION,\n    COORDINATION_TYPES.EMBEDDING_TARGET_X,\n    COORDINATION_TYPES.EMBEDDING_TARGET_Y,\n    COORDINATION_TYPES.EMBEDDING_TARGET_Z,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_POLYGONS_VISIBLE,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_LABELS_VISIBLE,\n    COORDINATION_TYPES.EMBEDDING_CELL_SET_LABEL_SIZE,\n    COORDINATION_TYPES.EMBEDDING_CELL_RADIUS,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  spatial: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_ZOOM,\n    COORDINATION_TYPES.SPATIAL_ROTATION,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n    COORDINATION_TYPES.SPATIAL_CELLS_LAYER,\n    COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER,\n    COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER,\n    COORDINATION_TYPES.SPATIAL_TARGET_X,\n    COORDINATION_TYPES.SPATIAL_TARGET_Y,\n    COORDINATION_TYPES.SPATIAL_TARGET_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_X,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Y,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT,\n    COORDINATION_TYPES.SPATIAL_ORBIT_AXIS,\n    COORDINATION_TYPES.SPATIAL_AXIS_FIXED,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n    COORDINATION_TYPES.MOLECULE_HIGHLIGHT,\n  ],\n  heatmap: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.HEATMAP_ZOOM_X,\n    COORDINATION_TYPES.HEATMAP_ZOOM_Y,\n    COORDINATION_TYPES.HEATMAP_TARGET_X,\n    COORDINATION_TYPES.HEATMAP_TARGET_Y,\n    COORDINATION_TYPES.CELL_FILTER,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP,\n    COORDINATION_TYPES.GENE_EXPRESSION_COLORMAP_RANGE,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSets: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSetSizes: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  cellSetExpression: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.GENE_EXPRESSION_TRANSFORM,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  status: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.CELL_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.MOLECULE_HIGHLIGHT,\n  ],\n  genes: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.CELL_COLOR_ENCODING,\n  ],\n  expressionHistogram: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENE_SELECTION,\n  ],\n  layerController: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n    COORDINATION_TYPES.SPATIAL_CELLS_LAYER,\n    COORDINATION_TYPES.SPATIAL_MOLECULES_LAYER,\n    COORDINATION_TYPES.SPATIAL_NEIGHBORHOODS_LAYER,\n    COORDINATION_TYPES.SPATIAL_ZOOM,\n    COORDINATION_TYPES.SPATIAL_TARGET_X,\n    COORDINATION_TYPES.SPATIAL_TARGET_Y,\n    COORDINATION_TYPES.SPATIAL_TARGET_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_X,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Y,\n    COORDINATION_TYPES.SPATIAL_ROTATION_Z,\n    COORDINATION_TYPES.SPATIAL_ROTATION_ORBIT,\n    COORDINATION_TYPES.SPATIAL_ORBIT_AXIS,\n  ],\n  higlass: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENOMIC_ZOOM_X,\n    COORDINATION_TYPES.GENOMIC_ZOOM_Y,\n    COORDINATION_TYPES.GENOMIC_TARGET_X,\n    COORDINATION_TYPES.GENOMIC_TARGET_Y,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n  ],\n  genomicProfiles: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.GENOMIC_ZOOM_X,\n    COORDINATION_TYPES.GENOMIC_ZOOM_Y,\n    COORDINATION_TYPES.GENOMIC_TARGET_X,\n    COORDINATION_TYPES.GENOMIC_TARGET_Y,\n    COORDINATION_TYPES.GENE_FILTER,\n    COORDINATION_TYPES.GENE_HIGHLIGHT,\n    COORDINATION_TYPES.GENE_SELECTION,\n    COORDINATION_TYPES.CELL_SET_SELECTION,\n    COORDINATION_TYPES.CELL_SET_HIGHLIGHT,\n    COORDINATION_TYPES.CELL_SET_COLOR,\n    COORDINATION_TYPES.ADDITIONAL_CELL_SETS,\n  ],\n  description: [\n    COORDINATION_TYPES.DATASET,\n    COORDINATION_TYPES.SPATIAL_RASTER_LAYERS,\n  ],\n};\n","import { useState, useEffect } from 'react';\nimport equal from 'fast-deep-equal';\nimport { capitalize } from '../utils';\nimport { useSetWarning } from '../app/state/hooks';\nimport {\n  AbstractLoaderError,\n  LoaderNotFoundError,\n} from '../loaders/errors/index';\nimport {\n  DEFAULT_MOLECULES_LAYER,\n  DEFAULT_CELLS_LAYER,\n  DEFAULT_NEIGHBORHOODS_LAYER,\n} from './spatial/constants';\nimport { DEFAULT_COORDINATION_VALUES } from '../app/state/coordination';\n\n/**\n * Warn via publishing to the console\n * and to the global warning store.\n * @param {AbstractLoaderError} error An error instance.\n */\nfunction warn(error, setWarning) {\n  setWarning(error.message);\n  console.warn(error.message);\n  if (error instanceof AbstractLoaderError) {\n    error.warnInConsole();\n  }\n}\n\n/**\n * Initialize values in the coordination space.\n * @param {object} values Object where\n * keys are coordination type names,\n * values are initial coordination values.\n * @param {object} setters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialValues Object where\n * keys are coordination type names and keys are values.\n */\nfunction initCoordinationSpace(values, setters, initialValues) {\n  if (!values || !setters) {\n    return;\n  }\n  Object.entries(values).forEach(([coordinationType, value]) => {\n    const setterName = `set${capitalize(coordinationType)}`;\n    const setterFunc = setters[setterName];\n    const initialValue = initialValues && initialValues[coordinationType];\n    const shouldInit = equal(initialValue, DEFAULT_COORDINATION_VALUES[coordinationType]);\n    if (shouldInit && setterFunc) {\n      setterFunc(value);\n    }\n  });\n}\n\n/**\n * Get the dataset description string.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @returns {array} [description] where\n * description is a string.\n */\nexport function useDescription(loaders, dataset) {\n  const [description, setDescription] = useState();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].description) {\n      setDescription(loaders[dataset].description);\n    } else {\n      setDescription(null);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [description];\n}\n\n/**\n * Get data from a cells data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [cells, cellsCount] where\n * cells is an object and cellsCount is the\n * number of items in the cells object.\n */\nexport function useCellsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [cells, setCells] = useState({});\n  const [cellsCount, setCellsCount] = useState(0);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.cells) {\n      loaders[dataset].loaders.cells.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setCells(data);\n        setCellsCount(Object.keys(data).length);\n        addUrl(url, 'Cells');\n        // This dataset has cells, so set up the\n        // spatial cells layer coordination value\n        // using the cell layer singleton.\n        const coordinationValuesOrDefault = {\n          spatialCellsLayer: DEFAULT_CELLS_LAYER,\n          ...coordinationValues,\n        };\n        initCoordinationSpace(\n          coordinationValuesOrDefault,\n          coordinationSetters, initialCoordinationValues,\n        );\n        setItemIsReady('cells');\n      });\n    } else {\n      setCells({});\n      setCellsCount(0);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'cells', null, null), setWarning);\n      } else {\n        setItemIsReady('cells');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [cells, cellsCount];\n}\n\n/**\n * Get data from a cell sets data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names and values are the current values.\n * @returns {array} [cellSets] where\n * cellSets is a sets tree object.\n */\nexport function useCellSetsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [cellSets, setCellSets] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['cell-sets']) {\n      // Load the data initially.\n      loaders[dataset].loaders['cell-sets'].load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setCellSets(data);\n        addUrl(url, 'Cell Sets');\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('cell-sets');\n      });\n    } else {\n      setCellSets(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'cell-sets', null, null), setWarning);\n      } else {\n        setItemIsReady('cell-sets');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [cellSets];\n}\n\n/**\n * Get (potentially filtered) data from an expression matrix data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.  Should not be used in conjunction (called in the same component)\n * with useExpressionAttrs as this returns a potentially filtered set of attributes\n * specifically for the returned expression data.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [expressionMatrix] where\n * expressionMatrix is an object with\n * shape { cols, rows, matrix }.\n */\nexport function useExpressionMatrixData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [expressionMatrix, setExpressionMatrix] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['expression-matrix']) {\n      loaders[dataset].loaders['expression-matrix'].load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        const [attrs, arr] = data;\n        setExpressionMatrix({\n          cols: attrs.cols,\n          rows: attrs.rows,\n          matrix: arr.data,\n        });\n        addUrl(url, 'Expression Matrix');\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('expression-matrix');\n      });\n    } else {\n      setExpressionMatrix(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [expressionMatrix];\n}\n\n/**\n * Get data from the expression matrix data type loader for a given gene selection.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {boolean} selection A list of gene names to get expression data for.\n * @returns {array} [geneData] where geneData is an array [Uint8Array, ..., Uint8Array]\n * for however many genes are in the selection.\n */\nexport function useGeneSelection(loaders, dataset, setItemIsReady, isRequired, selection) {\n  const [geneData, setGeneData] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n    if (!selection) {\n      setItemIsReady('expression-matrix');\n      return;\n    }\n    const loader = loaders[dataset].loaders['expression-matrix'];\n    if (loader) {\n      const implementsGeneSelection = typeof loader.loadGeneSelection === 'function';\n      if (implementsGeneSelection) {\n        loaders[dataset].loaders['expression-matrix']\n          .loadGeneSelection({ selection })\n          .catch(e => warn(e, setWarning))\n          .then((payload) => {\n            if (!payload) return;\n            const { data } = payload;\n            setGeneData(data);\n          });\n      } else {\n        loader.load().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data } = payload;\n          const [attrs, { data: matrix }] = data;\n          const expressionDataForSelection = selection.map((sel) => {\n            const geneIndex = attrs.cols.indexOf(sel);\n            const numGenes = attrs.cols.length;\n            const numCells = attrs.rows.length;\n            const expressionData = new Uint8Array(numCells);\n            for (let cellIndex = 0; cellIndex < numCells; cellIndex += 1) {\n              expressionData[cellIndex] = matrix[cellIndex * numGenes + geneIndex];\n            }\n            return expressionData;\n          });\n          setGeneData(expressionDataForSelection);\n        });\n      }\n    } else {\n      setGeneData(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset, selection]);\n\n  return [geneData];\n}\n\n/**\n * Get the attributes for the expression matrix data type loader,\n * i.e names of cells and genes.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.  Should not be used in conjunction (called in the same component)\n * with useExpressionMatrixData.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @returns {object} [attrs] { rows, cols } object containing cell and gene names.\n */\nexport function useExpressionAttrs(loaders, dataset, setItemIsReady, addUrl, isRequired) {\n  const [attrs, setAttrs] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n    const loader = loaders[dataset].loaders['expression-matrix'];\n    if (loader) {\n      const implementsLoadAttrs = typeof loader.loadAttrs === 'function';\n      if (implementsLoadAttrs) {\n        loader.loadAttrs().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data, url } = payload;\n          setAttrs(data);\n          addUrl(url, 'Expression Matrix');\n          setItemIsReady('expression-matrix');\n        });\n      } else {\n        loader.load().catch(e => warn(e, setWarning)).then((payload) => {\n          if (!payload) return;\n          const { data, url } = payload;\n          setAttrs(data[0]);\n          addUrl(url, 'Expression Matrix');\n          setItemIsReady('expression-matrix');\n        });\n      }\n    } else {\n      setAttrs(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'expression-matrix', null, null), setWarning);\n      } else {\n        setItemIsReady('expression-matrix');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [attrs];\n}\n\n/**\n * Get data from a molecules data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [molecules, moleculesCount, locationsCount] where\n * molecules is an object,\n * moleculesCount is the number of unique molecule types, and\n * locationsCount is the number of molecules.\n */\nexport function useMoleculesData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [molecules, setMolecules] = useState();\n  const [moleculesCount, setMoleculesCount] = useState(0);\n  const [locationsCount, setLocationsCount] = useState(0);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.molecules) {\n      loaders[dataset].loaders.molecules.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url, coordinationValues } = payload;\n        setMolecules(data);\n        setMoleculesCount(Object.keys(data).length);\n        setLocationsCount(Object.values(data)\n          .map(l => l.length)\n          .reduce((a, b) => a + b, 0));\n        addUrl(url, 'Molecules');\n        const coordinationValuesOrDefault = {\n          spatialMoleculesLayer: DEFAULT_MOLECULES_LAYER,\n          ...coordinationValues,\n        };\n        initCoordinationSpace(\n          coordinationValuesOrDefault,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('molecules');\n      });\n    } else {\n      setMolecules({});\n      setMoleculesCount(0);\n      setLocationsCount(0);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'molecules', null, null), setWarning);\n      } else {\n        setItemIsReady('molecules');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [molecules, moleculesCount, locationsCount];\n}\n\n/**\n * Get data from a neighborhoods data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [neighborhoods] where\n * neighborhoods is an object.\n */\nexport function useNeighborhoodsData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [neighborhoods, setNeighborhoods] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.neighborhoods) {\n      loaders[dataset].loaders.neighborhoods.load().catch(e => warn(e, setWarning))\n        .then((payload) => {\n          if (!payload) return;\n          const { data, url, coordinationValues } = payload;\n          setNeighborhoods(data);\n          addUrl(url, 'Neighborhoods');\n          const coordinationValuesOrDefault = {\n            spatialNeighborhoodsLayer: DEFAULT_NEIGHBORHOODS_LAYER,\n            ...coordinationValues,\n          };\n          initCoordinationSpace(\n            coordinationValuesOrDefault,\n            coordinationSetters,\n            initialCoordinationValues,\n          );\n          setItemIsReady('neighborhoods');\n        });\n    } else {\n      setNeighborhoods({});\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'neighborhoods', null, null), setWarning);\n      } else {\n        setItemIsReady('neighborhoods');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [neighborhoods];\n}\n\n/**\n * Get data from a raster data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [raster, imageLayerLoaders, imageLayerMeta] where\n * raster is an object,\n * imageLayerLoaders is an object, and\n * imageLayerMeta is an object.\n */\nexport function useRasterData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [raster, setRaster] = useState();\n  // Since we want the image layer / channel definitions to come from the\n  // coordination space stored as JSON in the view config,\n  // we need to set up a separate state variable here to store the\n  // non-JSON objects, such as layer loader instances.\n  const [imageLayerLoaders, setImageLayerLoaders] = useState([]);\n  const [imageLayerMeta, setImageLayerMeta] = useState([]);\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders.raster) {\n      loaders[dataset].loaders.raster.load().catch(e => warn(e, setWarning)).then((payload) => {\n        if (!payload) return;\n        const { data, url: urls, coordinationValues } = payload;\n        setRaster(data);\n        urls.forEach(([url, name]) => {\n          addUrl(url, name);\n        });\n        const { loaders: nextImageLoaders, meta: nextImageMeta } = data;\n        setImageLayerLoaders(nextImageLoaders);\n        setImageLayerMeta(nextImageMeta);\n        initCoordinationSpace(\n          coordinationValues,\n          coordinationSetters,\n          initialCoordinationValues,\n        );\n        setItemIsReady('raster');\n      });\n    } else {\n      // There was no raster loader for this dataset,\n      // and raster should be optional.\n      setImageLayerLoaders([]);\n      setImageLayerMeta([]);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'raster', null, null), setWarning);\n      } else {\n        setItemIsReady('raster');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n  return [raster, imageLayerLoaders, imageLayerMeta];\n}\n\n/**\n * Get data from a genomic-profiles data type loader,\n * updating \"ready\" and URL state appropriately.\n * Throw warnings if the data is marked as required.\n * Subscribe to loader updates.\n * @param {object} loaders The object mapping\n * datasets and data types to loader instances.\n * @param {string} dataset The key for a dataset,\n * used to identify which loader to use.\n * @param {function} setItemIsReady A function to call\n * when done loading.\n * @param {function} addUrl A function to call to update\n * the URL list.\n * @param {boolean} isRequired Should a warning be thrown if\n * loading is unsuccessful?\n * @param {object} coordinationSetters Object where\n * keys are coordination type names with the prefix 'set',\n * values are coordination setter functions.\n * @param {object} initialCoordinationValues Object where\n * keys are coordination type names with the prefix 'initialize',\n * values are initialization preferences as boolean values.\n * @returns {array} [neighborhoods] where\n * neighborhoods is an object.\n */\nexport function useGenomicProfilesData(\n  loaders, dataset, setItemIsReady, addUrl, isRequired,\n  coordinationSetters, initialCoordinationValues,\n) {\n  const [genomicProfilesAttrs, setGenomicProfilesAttrs] = useState();\n\n  const setWarning = useSetWarning();\n\n  useEffect(() => {\n    if (!loaders[dataset]) {\n      return;\n    }\n\n    if (loaders[dataset].loaders['genomic-profiles']) {\n      loaders[dataset].loaders['genomic-profiles'].load().catch(e => warn(e, setWarning))\n        .then((payload) => {\n          if (!payload) return;\n          const { data, url, coordinationValues } = payload;\n          setGenomicProfilesAttrs(data);\n          addUrl(url);\n          initCoordinationSpace(\n            coordinationValues,\n            coordinationSetters,\n            initialCoordinationValues,\n          );\n          setItemIsReady('genomic-profiles');\n        });\n    } else {\n      setGenomicProfilesAttrs(null);\n      if (isRequired) {\n        warn(new LoaderNotFoundError(dataset, 'genomic-profiles', null, null), setWarning);\n      } else {\n        setItemIsReady('genomic-profiles');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return [genomicProfilesAttrs];\n}\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport default function LoadingIndicator() {\n  return (\n    <div className=\"loading-indicator-backdrop\">\n      <div className=\"loading-indicator-container\">\n        <CircularProgress />\n      </div>\n    </div>\n  );\n}\n","import React, { useRef } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport { styles } from './styles';\n\nfunction MuiPopper(props) {\n  const classes = styles();\n  const {\n    anchorEl,\n    open,\n    placement = 'bottom-start',\n    children,\n  } = props;\n  return (\n    <Popper\n      className={classes.popper}\n      open={open}\n      anchorEl={anchorEl.current}\n      placement={placement}\n    >\n      {children}\n    </Popper>\n  );\n}\n\nfunction MuiPaper(props) {\n  const { children } = props;\n  const classes = styles();\n  return (\n    <Paper className={classes.paper} elevation={4}>\n      {children}\n    </Paper>\n  );\n}\n\nexport function MuiSpan(props) {\n  const { children } = props;\n  const classes = styles();\n  return <span className={classes.span}>{children}</span>;\n}\n\nexport function PopperMenu(props) {\n  const {\n    buttonIcon,\n    open,\n    toggle,\n    children,\n    placement,\n    buttonClassName,\n  } = props;\n  const anchorRef = useRef(null);\n  const classes = styles();\n  return (\n    <>\n      <IconButton\n        onClick={toggle}\n        size=\"small\"\n        ref={anchorRef}\n        className={buttonClassName}\n      >\n        {buttonIcon}\n      </IconButton>\n      <MuiPopper\n        className={classes.popper}\n        open={open}\n        anchorEl={anchorRef}\n        placement={placement}\n      >\n        <MuiPaper>\n          <ClickAwayListener onClickAway={toggle}>\n            <MenuList>{children}</MenuList>\n          </ClickAwayListener>\n        </MuiPaper>\n      </MuiPopper>\n    </>\n  );\n}\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { SCROLL_CARD, BLACK_CARD, SECONDARY_CARD } from './classNames';\nimport LoadingIndicator from './LoadingIndicator';\nimport { PopperMenu } from './shared-mui/components';\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    border: 'none',\n    marginLeft: 0,\n    background: 'none',\n    color: theme.palette.primaryForeground,\n    paddingLeft: '0.25em',\n    paddingRight: '0.25em',\n    borderRadius: '2px',\n    '&:hover': {\n      backgroundColor: theme.palette.primaryBackgroundLight,\n    },\n    '&:first-child': {\n      marginLeft: '0.75em',\n    },\n    '&:last-child': {\n      marginRight: '0.25em',\n    },\n    '& svg': {\n      width: '0.7em',\n      height: '0.7em',\n      verticalAlign: 'middle',\n    },\n  },\n  downloadLink: {\n    color: theme.palette.primaryForeground,\n  },\n}));\n\nfunction SettingsIconWithArrow({ open }) {\n  return (\n    <>\n      <SettingsIcon />\n      {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n    </>\n  );\n}\n\nfunction PlotOptions(props) {\n  const { options } = props;\n  const [open, toggle] = useReducer(v => !v, false);\n  const classes = useStyles();\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<SettingsIconWithArrow open={open} />}\n      buttonClassName={classes.iconButton}\n      placement=\"bottom-end\"\n    >\n      {options}\n    </PopperMenu>\n  );\n}\n\nfunction CloudDownloadIconWithArrow({ open }) {\n  return (\n    <>\n      <CloudDownloadIcon />\n      {open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n    </>\n  );\n}\n\nfunction DownloadOptions(props) {\n  const { urls } = props;\n  const [open, toggle] = useReducer(v => !v, false);\n  const classes = useStyles();\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<CloudDownloadIconWithArrow open={open} />}\n      buttonClassName={classes.iconButton}\n      placement=\"bottom-end\"\n    >\n      {urls.map(({ url, name }) => (\n        <MenuItem dense key={url}>\n          <Link underline=\"none\" href={url} target=\"_blank\" rel=\"noopener\" className={classes.downloadLink}>\n            Download {name}\n          </Link>\n        </MenuItem>\n      ))}\n    </PopperMenu>\n  );\n}\n\nfunction ClosePaneButton(props) {\n  const { removeGridComponent } = props;\n  const classes = useStyles();\n  return (\n    <IconButton\n      onClick={removeGridComponent}\n      size=\"small\"\n      className={classes.iconButton}\n      title=\"close\"\n    >\n      <CloseIcon />\n    </IconButton>\n  );\n}\n\nexport default function TitleInfo(props) {\n  const {\n    title, info, children, isScroll, isSpatial, removeGridComponent, urls,\n    isReady, options,\n  } = props;\n  // eslint-disable-next-line no-nested-ternary\n  const childClassName = isScroll ? SCROLL_CARD : (isSpatial ? BLACK_CARD : SECONDARY_CARD);\n  return (\n    // d-flex without wrapping div is not always full height; I don't understand the root cause.\n    <>\n      <div className=\"title d-flex justify-content-between align-items-baseline\">\n        <div className=\"justify-content-between d-flex align-items-end\">\n          <span>{title}</span>\n        </div>\n        <span className=\"details pl-2 align-items-end\">\n          <span className=\"d-flex justify-content-between\">\n            {info}\n            { options && (\n              <PlotOptions\n                options={options}\n              />\n            ) }\n            {urls && urls.length > 0 && (\n              <DownloadOptions\n                urls={urls}\n              />\n            )}\n            <ClosePaneButton\n              removeGridComponent={removeGridComponent}\n            />\n          </span>\n        </span>\n      </div>\n      <div className={childClassName}>\n        { !isReady && <LoadingIndicator /> }\n        {children}\n      </div>\n    </>\n    // \"pl-2\" only matters when the window is very narrow.\n  );\n}\n","import React from 'react';\n\nexport default function Description(props) {\n  const { description, metadata } = props;\n\n  return (\n    <div className=\"description\">\n      <p>{description}</p>\n\n      {metadata && Array.from(metadata.entries())\n        .map(([layerIndex, { name: layerName, metadata: metadataRecord }]) => (\n          metadataRecord && Object.entries(metadataRecord).length > 0 ? (\n            <details key={layerIndex}>\n              <summary>{layerName}</summary>\n              <div className=\"metadata-container\">\n                <table>\n                  <tbody>\n                    {Object.entries(metadataRecord)\n                      .map(([key, value]) => (\n                        <tr key={key}>\n                          <th title={key}>{key}</th>\n                          <td title={value}>{value}</td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </table>\n              </div>\n            </details>\n          ) : null))}\n    </div>\n  );\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { useReady } from '../hooks';\nimport { useDescription, useRasterData } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Description from './Description';\n\nconst DESCRIPTION_DATA_TYPES = ['raster'];\n\n/**\n * A subscriber component for a text description component.\n * Also renders a table containing image metadata.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function DescriptionSubscriber(props) {\n  const {\n    coordinationScopes,\n    description: descriptionOverride,\n    removeGridComponent,\n    theme,\n    title = 'Data Set',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    spatialRasterLayers: rasterLayers,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.description, coordinationScopes);\n\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    DESCRIPTION_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [description] = useDescription(loaders, dataset);\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n  );\n\n  const metadata = useMemo(() => {\n    const result = new Map();\n    if (rasterLayers && rasterLayers.length > 0 && raster && imageLayerMeta && imageLayerLoaders) {\n      rasterLayers.forEach((layer) => {\n        if (imageLayerMeta[layer.index]) {\n          // Want to ensure that layer index is a string.\n          const { format } = imageLayerLoaders[layer.index].metadata;\n          result.set(`${layer.index}`, {\n            name: raster.meta[layer.index].name,\n            metadata: format && format(),\n          });\n        }\n      });\n    }\n    return result;\n  }, [raster, rasterLayers, imageLayerMeta, imageLayerLoaders]);\n\n  return (\n    <TitleInfo\n      title={title}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      theme={theme}\n      isReady={isReady}\n    >\n      <Description\n        description={descriptionOverride || description}\n        metadata={metadata}\n      />\n    </TitleInfo>\n  );\n}\n","import React from 'react';\n\nexport default function Status(props) {\n  const warnClass = 'alert alert-warning my-0 details';\n  const { info, warn } = props;\n  const messages = [];\n  if (info) {\n    messages.push(<p className=\"details\" key=\"info\">{info}</p>);\n  }\n  if (warn) {\n    messages.push(<p className={warnClass} key=\"warn\">{warn}</p>);\n  }\n  return (\n    messages\n  );\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Table, AutoSizer } from 'react-virtualized';\nimport uuidv4 from 'uuid/v4';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\n\n/**\n * A table with \"selectable\" rows.\n * @prop {string[]} columns An array of column names, corresponding to data object properties.\n * @prop {object[]} data An array of data objects used to populate table rows.\n * @prop {function} onChange Callback function,\n * passed a selection object when `allowMultiple` is false (and `null` if `allowUncheck` is true),\n * or passed an array of selection objects when `allowMultiple` is true.\n * @prop {string} idKey The key for a unique identifier property of `data` objects.\n * @prop {string} valueKey If initially-selected rows are required,\n * this key specifies a boolean property of the `data` objects\n * indicating those rows that should be initially selected.\n * @prop {boolean} allowMultiple Whether to allow multiple rows to be selected. By default, false.\n * @prop {boolean} allowUncheck Whether to allow selected rows to be un-checked. By default, false.\n * @prop {boolean} showTableHead Whether to show the table header element. By default, true.\n * @prop {boolean} showTableInputs Whether to show the table input elements for each row.\n * By default, false.\n */\nexport default function SelectableTable(props) {\n  const {\n    hasColorEncoding,\n    columns,\n    data,\n    onChange,\n    idKey = 'id',\n    valueKey = 'value',\n    allowMultiple = false,\n    allowUncheck = false,\n    showTableHead = true,\n    showTableInputs = false,\n    testHeight = undefined,\n    testWidth = undefined,\n  } = props;\n\n  const [selectedRows, setSelectedRows] = useState(null);\n\n  // Callback function to update the `selectedRows` state.\n  const onSelectRow = useCallback((value, checked) => {\n    if (checked || allowUncheck) {\n      if (!allowMultiple) {\n        setSelectedRows(checked ? [value] : []);\n      } else {\n        setSelectedRows(\n          checked\n            ? union(selectedRows || [], [value])\n            : difference(selectedRows || [], [value]),\n        );\n      }\n    }\n  }, [allowMultiple, allowUncheck, selectedRows]);\n\n  // Handler for checkbox input elements.\n  const handleInputChange = useCallback((event) => {\n    const { target } = event;\n    const { checked } = target;\n    const { value } = target;\n    onSelectRow(value, checked);\n  }, [onSelectRow]);\n\n  // Function to map row IDs to corresponding objects\n  // to pass to the `onChange` callback.\n  const getDataFromIds = useCallback(ids => ids.map(id => ({\n    [idKey]: id,\n    data: data.find(item => item[idKey] === id),\n  })), [data, idKey]);\n\n  // Function to check if a row ID has been selected.\n  const isSelected = useCallback(id => (\n    Array.isArray(selectedRows) && selectedRows.includes(id)\n  ), [selectedRows]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Check whether an initial set of rows should be selected.\n    const initialSelectedRows = data\n      .map((d) => {\n        if (d[valueKey]) {\n          return d[idKey];\n        }\n        return null;\n      })\n      .filter(Boolean);\n    if (!isEqual(initialSelectedRows, selectedRows)) {\n      if (initialSelectedRows.length > 0) {\n        setSelectedRows(initialSelectedRows);\n      } else {\n        setSelectedRows(null);\n      }\n    }\n  }, [data, idKey, valueKey]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Call the `onChange` prop function with an updated row or set of rows.\n    if (!onChange || !selectedRows) {\n      return;\n    }\n    const selectedRowData = getDataFromIds(selectedRows);\n    if (allowMultiple) {\n      onChange(selectedRowData);\n    } else if (selectedRows.length === 1) {\n      onChange(selectedRowData[0]);\n    } else if (selectedRows.length === 0) {\n      onChange(null);\n    }\n  }, [selectedRows]);\n\n  // Generate a unique ID to use in (for, id) label-input pairs.\n  const inputUuid = uuidv4();\n\n  // Class for first column of inputs, to hide them if desired.\n  const hiddenInputsClass = (showTableInputs ? '' : 'hidden-input-column');\n\n  const rowRenderer = ({ index, style }) => (\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    <div\n      key={data[index][idKey]}\n      className={`table-item table-row ${isSelected(data[index][idKey]) ? 'row-checked ' : ''}`}\n      style={style}\n      role=\"button\"\n      onClick={() => onSelectRow(\n        data[index][idKey],\n        !isSelected(data[index][idKey]) || !hasColorEncoding,\n      )}\n    >\n      <div className={`input-container ${hiddenInputsClass} table-cell`}>\n        <label htmlFor={`${inputUuid}_${data[index][idKey]}`}>\n          <input\n            id={`${inputUuid}_${data[index][idKey]}`}\n            type=\"checkbox\"\n            className={(allowMultiple ? 'checkbox' : 'radio')}\n            name={inputUuid}\n            value={data[index][idKey]}\n            onChange={handleInputChange}\n            checked={isSelected(data[index][idKey])}\n          />\n        </label>\n      </div>\n      {columns.map(column => (\n        <div\n          className=\"table-cell\"\n          key={column}\n        >\n          {data[index][column]}\n        </div>\n      ))}\n    </div>\n  );\n\n  const headerRowRenderer = ({ style }) => (\n    <div className={`${hiddenInputsClass} table-row`} style={style}>\n      {columns.map(column => (\n        <div key={column}>{column}</div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"selectable-table\">\n      <AutoSizer>\n        {({ width, height }) => (\n          <Table\n            height={testHeight || height}\n            gridStyle={{ outline: 'none' }}\n            rowCount={data.length}\n            // 24 is 1 em + padding in either direction (see _selectable_table.scss).\n            rowHeight={24}\n            headerHeight={showTableHead ? 24 : undefined}\n            rowRenderer={rowRenderer}\n            width={testWidth || width}\n            headerRowRenderer={showTableHead ? headerRowRenderer : undefined}\n            rowGetter={({ index }) => data[index]}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { SelectableTable } from '../selectable-table/index';\n\nexport default function Genes(props) {\n  const {\n    hasColorEncoding,\n    geneList = [],\n    geneSelection = [],\n    geneFilter = null,\n    setGeneSelection,\n  } = props;\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState(geneList);\n\n  useEffect(() => {\n    const results = geneList\n      .filter(gene => gene.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm, geneList]);\n\n  function onChange(selection) {\n    if (setGeneSelection && selection && selection.name) {\n      setGeneSelection([selection.name]);\n    }\n  }\n\n  const data = searchResults\n    .filter(gene => (geneFilter ? geneFilter.includes(gene) : true))\n    .sort((a, b) => a.localeCompare(b))\n    .map(\n      gene => ({ name: gene, value: (geneSelection ? geneSelection.includes(gene) : false) }),\n    );\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <>\n      <input\n        className=\"search-bar\"\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      <SelectableTable\n        columns={['name']}\n        data={data}\n        hasColorEncoding={hasColorEncoding}\n        idKey=\"name\"\n        valueKey=\"value\"\n        onChange={onChange}\n        allowUncheck={false}\n        showTableHead={false}\n      />\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { pluralize } from '../../utils';\nimport { useReady, useUrls } from '../hooks';\nimport { useExpressionAttrs } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nimport TitleInfo from '../TitleInfo';\nimport Genes from './Genes';\n\nconst GENES_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n */\nexport default function GenesSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    theme,\n    title = 'Expression Levels',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n    geneFilter,\n    cellColorEncoding,\n  }, {\n    setGeneSelection,\n    setGeneFilter,\n    setGeneHighlight,\n    setCellColorEncoding,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.genes, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    GENES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const geneList = attrs ? attrs.cols : [];\n  const numGenes = geneList.length;\n\n  function setGeneSelectionAndColorEncoding(newSelection) {\n    setGeneSelection(newSelection);\n    setCellColorEncoding('geneSelection');\n  }\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${numGenes} ${pluralize(variablesLabel, variablesPluralLabel, numGenes)}`}\n      theme={theme}\n      // Virtual scroll is used but this allows for the same styling as a scroll component\n      // even though this no longer uses the TitleInfo component's\n      // scroll css (SelectableTable is virtual scroll).\n      isScroll\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      urls={urls}\n    >\n      <Genes\n        hasColorEncoding={cellColorEncoding === 'geneSelection'}\n        geneList={geneList}\n        geneSelection={geneSelection}\n        geneFilter={geneFilter}\n        setGeneSelection={setGeneSelectionAndColorEncoding}\n        setGeneFilter={setGeneFilter}\n        setGeneHighlight={setGeneHighlight}\n      />\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport RcTree from 'rc-tree';\nimport classNames from 'classnames';\n\n/**\n * A helper component around the rc-tree\n * library's tree component, to set\n * default props.\n */\nconst Tree = React.forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    showIcon,\n    blockNode,\n    children,\n    checkable,\n  } = props;\n  return (\n    <RcTree\n      itemHeight={32}\n      ref={ref}\n      {...props}\n      className={classNames(className, {\n        [`${prefixCls}-icon-hide`]: !showIcon,\n        [`${prefixCls}-block-node`]: blockNode,\n      })}\n      checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`} /> : checkable}\n    >\n      {children}\n    </RcTree>\n  );\n});\n\nTree.defaultProps = {\n  virtual: false,\n  checkable: false,\n  showIcon: false,\n  blockNode: true,\n  prefixCls: 'rc-tree',\n};\n\nexport default Tree;\n","import React, { useRef, useCallback } from 'react';\nimport RcTooltip from 'rc-tooltip';\n\n/**\n * This is a small wrapper around the Tooltip component from the rc-tooltip library,\n * which is required to be able to apply theme styles to the tooltip.\n * The default `getTooltipContainer` function used by rc-tooltip\n * just returns `document.body` (see https://github.com/react-component/tooltip#props),\n * We want theme styles to be applied relative to the closest `.vitessce-container`\n * ancestor element.\n * https://github.com/hubmapconsortium/vitessce/pull/494#discussion_r395957914\n * @param {object} props Props are passed through to the <RcTooltip/> from the library.\n */\nexport default function HelpTooltip(props) {\n  const { title, content, overlayClassName } = props;\n  const spanRef = useRef();\n\n  const getTooltipContainer = useCallback(() => {\n    if (spanRef.current) {\n      return spanRef.current.closest('.vitessce-container');\n    }\n    return null;\n  }, [spanRef]);\n\n  const overlay = title || content;\n\n  return (\n    <>\n      <span ref={spanRef} />\n      <RcTooltip\n        getTooltipContainer={getTooltipContainer}\n        overlayClassName={overlayClassName}\n        overlay={overlay}\n        {...props}\n      />\n    </>\n  );\n}\n\nHelpTooltip.defaultProps = {\n  overlayClassName: 'help-tooltip',\n  placement: 'top',\n  trigger: 'hover',\n  mouseEnterDelay: 0.2,\n  mouseLeaveDelay: 0,\n};\n","import React from 'react';\nimport HelpTooltip from './HelpTooltip';\n\n/**\n * This is a wrapper around the HelpTooltip component, to style it as a popover,\n * and change the trigger to \"click\" rather than \"hover\".\n * @param {*} props Props are passed through to the HelpTooltip component.\n */\nexport default function Popover(props) {\n  return (\n    <HelpTooltip {...props} />\n  );\n}\n\nPopover.defaultProps = {\n  overlayClassName: 'popover',\n  placement: 'top',\n  trigger: 'click',\n  mouseEnterDelay: 0,\n  mouseLeaveDelay: 0,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TwitterPicker } from 'react-color';\nimport { colorArrayToString, callbackOnKeyPress } from './utils';\nimport { PALETTE } from '../utils';\nimport Popover from './Popover';\n\n/**\n * Wrapper around a button element that supports asking for confirmation.\n * @param {object} props\n * @param {string} props.title The main button text.\n * @param {string} props.subtitle Smaller text on a line beneath the main text. Optional.\n * @param {function} props.onClick A \"clean up\" handler passed from the parent,\n * to alert the parent Popover component that it should close the popover after the button has\n * fired its handler.\n * @param {function} props.handler A function to call on button click (or after confirmation).\n * @param {string} props.handlerKey A key associated with the button, to support accessibility.\n * @param {boolean} props.confirm Does the user need to press the button again to confirm?\n * By default, false.\n * @param {boolean} props.visible The visibility state from the parent popover,\n * so that on visibility change, the button can clear its confirmation state.\n */\nfunction PopoverMenuListButton(props) {\n  const {\n    title, subtitle, onClick, handler, handlerKey, confirm,\n    visible,\n  } = props;\n\n  const [isConfirming, setIsConfirming] = useState(false);\n\n  useEffect(() => {\n    // Want to clear the \"confirming\",\n    // state if the user hides the popover.\n    setIsConfirming(false);\n  }, [visible]);\n\n  function handleOrRequireConfirm() {\n    if (!confirm || isConfirming) {\n      onClick();\n      handler();\n    } else {\n      setIsConfirming(true);\n    }\n  }\n\n  const titleWithConfirm = `${isConfirming ? 'Confirm ' : ''}${title}`;\n\n  return (\n    <button\n      title={titleWithConfirm}\n      type=\"button\"\n      onClick={handleOrRequireConfirm}\n      onKeyPress={e => callbackOnKeyPress(e, handlerKey, handleOrRequireConfirm)}\n    >{titleWithConfirm}\n      {subtitle && (<><br /><span className=\"small\">{subtitle}</span></>)}\n    </button>\n  );\n}\n\n/**\n * Helper component to create a list of buttons for the body of a popover.\n * If the color, setColor, and palette props are provided then a color picker\n * will be rendered at the top of the button list.\n * @param {object} props\n * @param {object[]} props.menuConfig The list of button definition objects.\n * `{ title, subtitle, confirm, handler, handlerKey }`\n * @param {function} props.onClick A \"clean up\" handler passed from the parent,\n * to alert the parent Popover component that it should close the popover after the button has\n * fired its handler.\n * @param {number[]} props.color The current color. Optional.\n * @param {string} props.palette The color palette for the color picker. Optional.\n * @param {boolean} props.setColor The handler to call when a color has been selected. Optional.\n * @param {boolean} props.visible The visibility state from the parent popover,\n * so that on visibility change, buttons can clear confirmation states.\n */\nfunction PopoverMenuList(props) {\n  const {\n    menuConfig,\n    onClick,\n    color = null,\n    palette = null,\n    setColor = null,\n    visible,\n  } = props;\n\n  function handleColorChange({ rgb }) {\n    if (rgb && setColor) {\n      setColor([rgb.r, rgb.g, rgb.b]);\n    }\n  }\n\n  const defaultPalette = palette\n    ? palette.map(colorArrayToString)\n    : PALETTE.concat([[255, 255, 255], [128, 128, 128], [0, 0, 0]]).map(colorArrayToString);\n\n  return (\n    <div>\n      {color && setColor && defaultPalette && (\n        <TwitterPicker\n          className=\"popover-menu-color\"\n          disableAlpha\n          width={108}\n          triangle=\"hide\"\n          colors={defaultPalette}\n          color={colorArrayToString(color)}\n          onChangeComplete={handleColorChange}\n        />\n      )}\n      <ul className=\"popover-menu-list\">\n        {menuConfig.map(item => (\n          <li key={item.title + item.subtitle}>\n            <PopoverMenuListButton\n              {...item}\n              onClick={onClick}\n              visible={visible}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n/**\n * Helper component to create a popover component with a list of buttons.\n * If the color, setColor, and palette props are provided then a color picker\n * will be rendered at the top of the button list.\n * @param {object} props\n * @param {object[]} props.menuConfig The list of button definition objects.\n * `{ title, subtitle, confirm, handler, handlerKey }`\n * @param {string} placement Where to place the popover (top, bottom, left, right).\n * @param {number[]} props.color The current color. Optional.\n * @param {string} props.palette The color palette for the color picker. Optional.\n * @param {boolean} props.setColor The handler to call when a color has been selected. Optional.\n * @param {Element|React.Component} props.children Children to render,\n * which will trigger the popover on click.\n */\nexport default function PopoverMenu(props) {\n  const {\n    menuConfig, placement, children,\n    color = null, setColor = null, palette = null,\n  } = props;\n\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <Popover\n      content={(\n        <PopoverMenuList\n          menuConfig={menuConfig}\n          onClick={() => setVisible(false)}\n          color={color}\n          setColor={setColor}\n          palette={palette}\n          visible={visible}\n        />\n)}\n      placement={placement}\n      visible={visible}\n      onVisibleChange={setVisible}\n    >\n      {children}\n    </Popover>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z\"\n});\n\nfunction SvgMenu(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenu, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/menu.bc56e94a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { TreeNode as RcTreeNode } from 'rc-tree';\nimport { getDataAndAria } from 'rc-tree/es/util';\nimport classNames from 'classnames';\nimport range from 'lodash/range';\nimport isEqual from 'lodash/isEqual';\nimport PopoverMenu from './PopoverMenu';\nimport HelpTooltip from './HelpTooltip';\nimport { callbackOnKeyPress, colorArrayToString, getLevelTooltipText } from './utils';\nimport { ReactComponent as MenuSVG } from '../../assets/menu.svg';\nimport { DEFAULT_COLOR } from '../utils';\n\n\n/**\n * Construct a `menuConfig` array for the PopoverMenu component.\n * @param {object} props The props for the TreeNode component.\n * @returns {object[]} An array of menu items to pass to PopoverMenu.\n */\nfunction makeNodeViewMenuConfig(props) {\n  const {\n    path,\n    level,\n    height,\n    onCheckNode,\n    onNodeRemove,\n    onNodeSetIsEditing,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    checkable,\n    editable,\n    exportable,\n    checked,\n  } = props;\n\n  return [\n    ...(editable ? [\n      {\n        title: 'Rename',\n        handler: () => { onNodeSetIsEditing(path, true); },\n        handlerKey: 'r',\n      },\n      {\n        title: 'Delete',\n        confirm: true,\n        handler: () => { onNodeRemove(path); },\n        handlerKey: 'd',\n      },\n    ] : []),\n    ...(level === 0 && exportable ? [\n      {\n        title: 'Export hierarchy',\n        subtitle: '(to JSON file)',\n        handler: () => { onExportLevelZeroNodeJSON(path); },\n        handlerKey: 'j',\n      },\n      ...(height <= 1 ? [\n        {\n          title: 'Export hierarchy',\n          subtitle: '(to CSV file)',\n          handler: () => { onExportLevelZeroNodeTabular(path); },\n          handlerKey: 't',\n        },\n      ] : []),\n    ] : []),\n    ...(level > 0 ? [\n      ...(checkable ? [\n        {\n          title: (checked ? 'Uncheck' : 'Check'),\n          handler: () => { onCheckNode(path, !checked); },\n          handlerKey: 's',\n        },\n      ] : []),\n      ...(exportable ? [\n        {\n          title: 'Export set',\n          subtitle: '(to JSON file)',\n          handler: () => { onExportSetJSON(path); },\n          handlerKey: 'e',\n        },\n      ] : []),\n    ] : []),\n  ];\n}\n\n/**\n * The \"static\" node component to render when the user is not renaming.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeStatic(props) {\n  const {\n    title,\n    path,\n    nodeKey,\n    level,\n    height,\n    color,\n    checkbox,\n    isChecking,\n    isLeaf,\n    onNodeSetColor,\n    onNodeView,\n    expanded,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    disableTooltip,\n    size,\n    datatype,\n    editable,\n  } = props;\n  const shouldCheckNextLevel = (level === 0 && !expanded);\n  const nextLevelToCheck = (\n    (checkedLevelIndex && isEqual(path, checkedLevelPath) && checkedLevelIndex < height)\n      ? checkedLevelIndex + 1\n      : 1\n  );\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  const niceSize = numberFormatter.format(size);\n  let tooltipText;\n  if (shouldCheckNextLevel) {\n    tooltipText = getLevelTooltipText(nextLevelToCheck);\n  } else if (isLeaf || !expanded) {\n    tooltipText = `Color individual set (${niceSize} ${datatype}${(size === 1 ? '' : 's')})`;\n  } else {\n    tooltipText = 'Color by expanded descendants';\n  }\n  // If this is a level zero node and is _not_ expanded, then upon click,\n  // the behavior should be to color by the first or next cluster level.\n  // If this is a level zero node and _is_ expanded, or if any other node,\n  // click should trigger onNodeView.\n  const onClick = (level === 0 && !expanded\n    ? () => onCheckLevel(nodeKey, nextLevelToCheck)\n    : () => onNodeView(path)\n  );\n  const tooltipProps = (disableTooltip ? { visible: false } : {});\n  const popoverMenuConfig = makeNodeViewMenuConfig(props);\n  return (\n    <span>\n      <HelpTooltip title={tooltipText} {...tooltipProps}>\n        <button\n          type=\"button\"\n          onClick={onClick}\n          onKeyPress={e => callbackOnKeyPress(e, 'v', () => onNodeView(path))}\n          className=\"title-button\"\n        >\n          {title}\n        </button>\n      </HelpTooltip>\n      {popoverMenuConfig.length > 0 ? (\n        <PopoverMenu\n          menuConfig={makeNodeViewMenuConfig(props)}\n          color={level > 0 && editable ? (color || DEFAULT_COLOR) : null}\n          setColor={c => onNodeSetColor(path, c)}\n        >\n          <MenuSVG className=\"node-menu-icon\" />\n        </PopoverMenu>\n      ) : null}\n      {level > 0 && isChecking ? checkbox : null}\n      {level > 0 && (<span className=\"node-size-label\">{niceSize}</span>)}\n    </span>\n  );\n}\n\n/**\n * The \"editing\" node component to render when the user is renaming,\n * containing a text input field and a save button.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeEditing(props) {\n  const {\n    title,\n    path,\n    onNodeSetName,\n    onNodeCheckNewName,\n  } = props;\n  const [currentTitle, setCurrentTitle] = useState(title);\n\n  // Do not allow the user to save a potential name if it conflicts with\n  // another name in the hierarchy.\n  const hasConflicts = onNodeCheckNewName(path, currentTitle);\n  function trySetName() {\n    if (!hasConflicts) {\n      onNodeSetName(path, currentTitle, true);\n    }\n  }\n  return (\n    <span className=\"title-button-with-input\">\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        className=\"title-input\"\n        type=\"text\"\n        value={currentTitle}\n        onChange={(e) => { setCurrentTitle(e.target.value); }}\n        onKeyPress={e => callbackOnKeyPress(\n          e,\n          'Enter',\n          trySetName,\n        )}\n        onFocus={e => e.target.select()}\n      />\n      {!hasConflicts && (\n        <button\n          type=\"button\"\n          className=\"title-save-button\"\n          onClick={trySetName}\n        >\n          Save\n        </button>\n      )}\n    </span>\n  );\n}\n\n/**\n * A \"delegation\" component, to decide whether to render\n * an \"editing\" vs. \"static\" node component.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNode(props) {\n  const {\n    isEditing,\n    isCurrentSet,\n  } = props;\n  return (\n    (isEditing || isCurrentSet)\n      ? (<NamedSetNodeEditing {...props} />)\n      : (<NamedSetNodeStatic {...props} />)\n  );\n}\n\n/**\n * Buttons for viewing each hierarchy level,\n * rendered below collapsed level zero nodes.\n * @param {object} props The props for the (level zero) TreeNode component.\n */\nfunction LevelsButtons(props) {\n  const {\n    nodeKey,\n    path,\n    height,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    hasColorEncoding,\n  } = props;\n  function onCheck(event) {\n    if (event.target.checked) {\n      const newLevel = parseInt(event.target.value, 10);\n      onCheckLevel(nodeKey, newLevel);\n    }\n  }\n  return (\n    <div className=\"level-buttons-container\">\n      {range(1, height + 1).map((i) => {\n        const isChecked = isEqual(path, checkedLevelPath) && i === checkedLevelIndex;\n        return (\n          <div className=\"level-buttons\" key={i}>\n            <HelpTooltip title={getLevelTooltipText(i)}>\n              <input\n                className={clsx('level-radio-button', { checked: isChecked && !hasColorEncoding })}\n                type=\"checkbox\"\n                value={i}\n                checked={isChecked && hasColorEncoding}\n                onChange={onCheck}\n              />\n            </HelpTooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Render the \"switcher\" icon.\n * Arrow for collapsed/expanded non-leaf nodes,\n * or square for leaf nodes.\n * @param {object} props The props for the TreeNode component.\n */\nfunction SwitcherIcon(props) {\n  const {\n    isLeaf, isOpen, color,\n  } = props;\n  const hexColor = (color ? colorArrayToString(color) : undefined);\n  if (isLeaf) {\n    return (\n      <i\n        className=\"anticon anticon-circle rc-tree-switcher-icon\"\n      >\n        <svg\n          viewBox=\"0 0 1024 1024\"\n          focusable=\"false\"\n          data-icon=\"caret-down\"\n          width=\"1em\"\n          height=\"1em\"\n          aria-hidden=\"true\"\n        >\n          <rect fill={hexColor} x={600 / 2} y={600 / 2} width={1024 - 600} height={1024 - 600} />\n        </svg>\n      </i>\n    );\n  }\n  return (\n    <i\n      className=\"anticon anticon-caret-down rc-tree-switcher-icon\"\n    >\n      <svg\n        viewBox=\"0 0 1024 1024\"\n        focusable=\"false\"\n        data-icon=\"caret-down\"\n        width=\"1em\"\n        height=\"1em\"\n        aria-hidden=\"true\"\n      >\n        <path\n          fill={(isOpen ? '#444' : hexColor)}\n          d=\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\"\n        />\n      </svg>\n    </i>\n  );\n}\n\n/**\n * A custom TreeNode component.\n * @extends {RcTreeNode} TreeNode from the rc-tree library.\n */\nexport default class TreeNode extends RcTreeNode {\n  /**\n   * Override the main node text elements.\n   */\n  renderSelector = () => {\n    const {\n      title,\n      isCurrentSet,\n      isSelected,\n      isEditing,\n      onDragStart: onDragStartProp,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        draggable,\n      },\n    } = this.context;\n\n    const onDragStart = (e) => {\n      onDragStartProp();\n      this.onDragStart(e);\n    };\n\n    const wrapClass = `${prefixClass}-node-content-wrapper`;\n    const isDraggable = (!isCurrentSet && !isEditing && draggable);\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={title}\n        className={classNames(\n          wrapClass,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          isSelected && `${prefixClass}-node-selected`,\n          isDraggable && 'draggable',\n        )}\n        draggable={isDraggable}\n        aria-grabbed={isDraggable}\n        onDragStart={isDraggable ? onDragStart : undefined}\n      >\n        <NamedSetNode\n          {...this.props}\n          prefixClass={prefixClass}\n          checkbox={this.renderCheckbox()}\n        />\n        {this.renderLevels()}\n      </span>\n    );\n  };\n\n  /**\n   * Render the LevelsButtons component if this node\n   * is a collapsed level zero node.\n   */\n  renderLevels = () => {\n    const { level, expanded } = this.props;\n    if (level !== 0 || expanded) {\n      return null;\n    }\n    return (\n      <LevelsButtons\n        {...this.props}\n      />\n    );\n  }\n\n  /**\n   * Override the switcher element.\n   */\n  renderSwitcher = () => {\n    const { expanded, isLeaf, color } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        onNodeExpand,\n      },\n    } = this.context;\n\n    const onNodeExpandWrapper = (e) => {\n      // Do not call onNodeExpand if the node is a leaf node.\n      if (!isLeaf) {\n        onNodeExpand(e, this);\n      }\n    };\n\n    const switcherClass = classNames(\n      `${prefixClass}-switcher`,\n      { [`${prefixClass}-switcher_${(expanded ? 'open' : 'close')}`]: !isLeaf },\n    );\n    return (\n      <span\n        className={switcherClass}\n        onClick={onNodeExpandWrapper}\n        onKeyPress={e => callbackOnKeyPress(e, 'd', onNodeExpandWrapper)}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <SwitcherIcon\n          isLeaf={isLeaf}\n          isOpen={expanded}\n          color={color}\n        />\n      </span>\n    );\n  };\n\n  /**\n   * Override main render function,\n   * to enable overriding the sub-render functions\n   * for switcher, selector, etc.\n   */\n  render() {\n    const {\n      style, loading, level,\n      dragOver, dragOverGapTop, dragOverGapBottom,\n      isLeaf,\n      expanded, selected, checked, halfChecked,\n      onDragEnd: onDragEndProp,\n      expandable,\n      ...otherProps\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        filterTreeNode,\n        draggable,\n      },\n    } = this.context;\n    const disabled = this.isDisabled();\n    const dataAndAriaAttributeProps = getDataAndAria(otherProps);\n\n    const onDragEnd = (e) => {\n      onDragEndProp();\n      this.onDragEnd(e);\n    };\n\n    return (\n      <li\n        className={classNames('rc-tree-treenode', `level-${level}-treenode`, {\n          [`${prefixClass}-treenode-disabled`]: disabled,\n          [`${prefixClass}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixClass}-treenode-checkbox-checked`]: checked,\n          [`${prefixClass}-treenode-checkbox-indeterminate`]: halfChecked,\n          [`${prefixClass}-treenode-selected`]: selected,\n          [`${prefixClass}-treenode-loading`]: loading,\n\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(this),\n        })}\n        style={style}\n        role=\"treeitem\"\n        onDragEnter={draggable ? this.onDragEnter : undefined}\n        onDragOver={draggable ? this.onDragOver : undefined}\n        onDragLeave={draggable ? this.onDragLeave : undefined}\n        onDrop={draggable ? this.onDrop.bind(this) : undefined}\n        onDragEnd={draggable ? onDragEnd : undefined}\n        {...dataAndAriaAttributeProps}\n      >\n        {expandable ? this.renderSwitcher() : null}\n        {this.renderSelector()}\n        {this.renderChildren()}\n      </li>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUnion(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 16.433999 10.234\",\n    height: 12,\n    width: 18,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.117,-2.883)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m 11.467471,11.811278 c 0.198237,-0.322177 0.508,-1.011333 0.653661,-1.454255 0.659343,-2.0049141 0.44323,-4.2620847 -0.577734,-6.0340822 l -0.168844,-0.2930481 0.105744,0.017887 c 0.759902,0.1285441 1.368762,0.3699553 1.856675,0.7361658 1.988296,1.4923476 2.192477,4.3353549 0.434717,6.0529895 -0.641216,0.626581 -1.299647,0.94683 -2.294136,1.115833 l -0.108488,0.01844 z M 4.3162122,11.919169 C 1.9278944,11.487872 0.46692382,9.0323123 1.234873,6.7401372 1.5621727,5.763213 2.2610593,4.9489746 3.1840041,4.4693005 3.5978035,4.2542401 3.9427842,4.145371 4.5197023,4.0477802 L 4.6254464,4.0298927 4.4571836,4.3223069 C 3.4332707,6.1017061 3.2180432,8.3476022 3.878868,10.357023 c 0.1458466,0.443487 0.4554716,1.132155 0.6542959,1.455285 0.054471,0.08853 0.087814,0.159599 0.074096,0.157937 -0.013718,-0.0017 -0.1446898,-0.02465 -0.2910477,-0.05108 z M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\",\n    style: {\n      strokeWidth: 0.234,\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    }\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgUnion, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/union.de5168c6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIntersection(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 12,\n    viewBox: \"0 0 16 10\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0,-3)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\",\n    style: {\n      strokeWidth: 0.234,\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    }\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIntersection, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/intersection.b0003109.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: \"5%\",\n  width: \"90%\",\n  height: \"100%\",\n  fill: \"white\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  x: 0,\n  y: 0,\n  width: 25.3804963846,\n  height: 16,\n  mask: \"url(#union-mask)\"\n}));\n\nfunction SvgComplement(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"svg14\",\n    viewBox: \"0 0 25.3804963846 16\",\n    height: 16,\n    width: 25.3804963846,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"union-mask\",\n    x: 0,\n    y: 0,\n    width: 25.3804963846,\n    height: 16\n  }, _ref2, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(4.69,0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m 11.467471,11.811278 c 0.198237,-0.322177 0.508,-1.011333 0.653661,-1.454255 0.659343,-2.0049141 0.44323,-4.2620847 -0.577734,-6.0340822 l -0.168844,-0.2930481 0.105744,0.017887 c 0.759902,0.1285441 1.368762,0.3699553 1.856675,0.7361658 1.988296,1.4923476 2.192477,4.3353549 0.434717,6.0529895 -0.641216,0.626581 -1.299647,0.94683 -2.294136,1.115833 l -0.108488,0.01844 z M 4.3162122,11.919169 C 1.9278944,11.487872 0.46692382,9.0323123 1.234873,6.7401372 1.5621727,5.763213 2.2610593,4.9489746 3.1840041,4.4693005 3.5978035,4.2542401 3.9427842,4.145371 4.5197023,4.0477802 L 4.6254464,4.0298927 4.4571836,4.3223069 C 3.4332707,6.1017061 3.2180432,8.3476022 3.878868,10.357023 c 0.1458466,0.443487 0.4554716,1.132155 0.6542959,1.455285 0.054471,0.08853 0.087814,0.159599 0.074096,0.157937 -0.013718,-0.0017 -0.1446898,-0.02465 -0.2910477,-0.05108 z M 5.0000001,3 C 2.2,3 0,5.2 0,8 c 0,2.8 2.2,5 5.0000001,5 0.6,0 1.1,-0.1 1.6,-0.3 C 5.3000001,11.6 4.5,9.7999998 4.5,8 4.5,6.2 5.3000001,4.5 6.6000001,3.3 c -0.5,-0.2 -1,-0.3 -1.6,-0.3 z M 4.65,4.02 C 3.92,5.17 3.51,6.54 3.51,8 c 0,1.4599998 0.42,2.83 1.14,3.98 C 2.61,11.8 1.01,10.08 1.01,8 1.01,5.92 2.61,4.2 4.65,4.02 Z M 8,4 C 6.8,4.9 6,6.4 6,8 6,9.6 6.8,11.1 8,12 9.2,11.1 10,9.7 10,8 10,6.3 9.2,4.9 8,4 Z m 3,-1 c 2.8,0 5,2.2 5,5 0,2.8 -2.2,5 -5,5 C 10.4,13 9.9,12.9 9.4,12.7 10.7,11.6 11.5,9.8 11.5,8 11.5,6.2 10.7,4.5 9.4,3.3 9.9,3.1 10.4,3 11,3 Z m 0.35,1.02 c 0.73,1.15 1.14,2.52 1.14,3.98 0,1.46 -0.42,2.83 -1.14,3.98 2.04,-0.18 3.64,-1.9 3.64,-3.98 0,-2.08 -1.6,-3.8 -3.64,-3.98 z\",\n    style: {\n      strokeWidth: 0.234,\n      strokeMiterlimit: 4,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    fill: \"black\"\n  })))), _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgComplement, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/complement.c220ca8c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from 'react';\nimport PopoverMenu from './PopoverMenu';\nimport {\n  handleImportJSON,\n  handleImportTabular,\n} from './io';\nimport {\n  MIME_TYPE_JSON,\n  MIME_TYPE_TABULAR,\n} from './constants';\n\nimport { ReactComponent as SetUnionSVG } from '../../assets/sets/union.svg';\nimport { ReactComponent as SetIntersectionSVG } from '../../assets/sets/intersection.svg';\nimport { ReactComponent as SetComplementSVG } from '../../assets/sets/complement.svg';\n\n/**\n * A plus button for creating or importing set hierarchies.\n * @param {object} props\n * @param {string} props.datatype The data type to validate imported hierarchies against.\n * @param {function} props.onError A callback to pass error message strings.\n * @param {function} props.onImportTree A callback to pass successfully-validated tree objects.\n * @param {function} props.onCreateLevelZeroNode A callback to create a new empty\n * level zero node.\n * @param {boolean} props.importable Is importing allowed?\n * If not, the import button will not be rendered.\n * @param {boolean} props.editable Is editing allowed?\n * If not, the create button will not be rendered.\n */\nexport function PlusButton(props) {\n  const {\n    datatype, onError, onImportTree, onCreateLevelZeroNode,\n    importable, editable,\n  } = props;\n\n  /**\n   * Import a file, then process the imported data via the supplied handler function.\n   * @param {Function} importHandler The function to process the imported data.\n   * @param {string} mimeType The accepted mime type for the file upload input.\n   * @returns {Function} An import function corresponding to the supplied parameters.\n   */\n  const onImport = useCallback((importHandler, mimeType) => () => {\n    const uploadInputNode = document.createElement('input');\n    uploadInputNode.setAttribute('type', 'file');\n    uploadInputNode.setAttribute('accept', mimeType);\n    document.body.appendChild(uploadInputNode); // required for firefox\n    uploadInputNode.click();\n    uploadInputNode.addEventListener('change', (event) => {\n      if (!(window.File && window.FileReader && window.FileList && window.Blob)) {\n        onError('Local file reading APIs are not fully supported in this browser.');\n        return;\n      }\n      const { files } = event.target;\n      if (!files || files.length !== 1) {\n        onError('Incorrect number of files selected.');\n        return;\n      }\n      const reader = new FileReader();\n      reader.addEventListener('load', () => {\n        const { result } = reader;\n        try {\n          const treeToImport = importHandler(result, datatype);\n          onError(false); // Clear any previous import error.\n          onImportTree(treeToImport);\n        } catch (e) {\n          onError(e.message);\n        }\n      }, false);\n      reader.readAsText(files[0]);\n    });\n    uploadInputNode.remove();\n  }, [datatype, onError, onImportTree]);\n\n  const menuConfig = [\n    ...(editable ? [\n      {\n        title: 'Create hierarchy',\n        handler: onCreateLevelZeroNode,\n        handlerKey: 'n',\n      },\n    ] : []),\n    ...(importable ? [\n      {\n        title: 'Import hierarchy',\n        subtitle: '(from CSV file)',\n        handler: onImport(handleImportTabular, MIME_TYPE_TABULAR),\n        handlerKey: 'c',\n      },\n      {\n        title: 'Import hierarchy',\n        subtitle: '(from JSON file)',\n        handler: onImport(handleImportJSON, MIME_TYPE_JSON),\n        handlerKey: 'j',\n      },\n    ] : []),\n  ];\n\n  return (menuConfig.length > 0 ? (\n    <PopoverMenu\n      menuConfig={menuConfig}\n    >\n      <button className=\"plus-button\" type=\"submit\">+</button>\n    </PopoverMenu>\n  ) : null);\n}\n\n/**\n * Set operations buttons (union, intersection, complement)\n * and a view checked sets button.\n * @param {object} props\n * @param {function} props.onUnion A callback for the union button.\n * @param {function} props.onIntersection A callback for the intersection button.\n * @param {function} props.onComplement A callback for the complement button.\n * @param {boolean} props.operatable Are set operations allowed?\n * If not, the union, intersection, and complement buttons will not be rendered.\n */\nexport function SetOperationButtons(props) {\n  const {\n    onUnion,\n    onIntersection,\n    onComplement,\n    operatable,\n    hasCheckedSetsToUnion,\n    hasCheckedSetsToIntersect,\n    hasCheckedSetsToComplement,\n  } = props;\n\n  return (\n    <>\n      {operatable && (\n        <>\n          <button\n            onClick={onUnion}\n            title=\"New set from union of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToUnion}\n          >\n            <SetUnionSVG />\n          </button>\n          <button\n            onClick={onIntersection}\n            title=\"New set from intersection of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToIntersect}\n          >\n            <SetIntersectionSVG />\n          </button>\n          <button\n            onClick={onComplement}\n            title=\"New set from complement of checked sets\"\n            type=\"submit\"\n            disabled={!hasCheckedSetsToComplement}\n          >\n            <SetComplementSVG />\n          </button>\n        </>\n      )}\n    </>\n  );\n}\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState, useMemo } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport Tree from './Tree';\nimport TreeNode from './TreeNode';\nimport { PlusButton, SetOperationButtons } from './SetsManagerButtons';\nimport { nodeToRenderProps } from './cell-set-utils';\nimport { DEFAULT_COLOR } from '../utils';\nimport { pathToKey } from './utils';\n\nfunction processNode(node, prevPath, setColor) {\n  const nodePath = [...prevPath, node.name];\n  return {\n    ...node,\n    ...(node.children ? ({\n      children: node.children\n        .map(c => processNode(c, nodePath, setColor)),\n    }) : {}),\n    color: setColor?.find(d => isEqual(d.path, nodePath))?.color || DEFAULT_COLOR,\n  };\n}\n\nfunction processSets(sets, setColor) {\n  return {\n    ...sets,\n    tree: sets ? sets.tree.map(lzn => processNode(lzn, [], setColor)) : [],\n  };\n}\n\nfunction getAllKeys(node, path = []) {\n  if (!node) {\n    return null;\n  }\n  const newPath = [...path, node.name];\n  if (node.children) {\n    return [pathToKey(newPath), ...node.children.flatMap(v => getAllKeys(v, newPath))];\n  }\n  return pathToKey(newPath);\n}\n\n/**\n * A generic hierarchical set manager component.\n * @prop {object} tree An object representing set hierarchies.\n * @prop {string} datatype The data type for sets (e.g. \"cell\")\n * @prop {function} clearPleaseWait A callback to signal that loading is complete.\n * @prop {boolean} draggable Whether tree nodes can be rearranged via drag-and-drop.\n * By default, true.\n * @prop {boolean} checkable Whether to show the \"Check\" menu button\n * and checkboxes for selecting multiple sets. By default, true.\n * @prop {boolean} editable Whether to show rename, delete, color, or create options.\n * By default, true.\n * @prop {boolean} expandable Whether to allow hierarchies to be expanded\n * to show the list or tree of sets contained. By default, true.\n * @prop {boolean} operatable Whether to enable union, intersection,\n * and complement operations on checked sets. By default, true.\n * @prop {boolean} exportable Whether to enable exporting hierarchies and sets to files.\n * By default, true.\n * @prop {boolean} importable Whether to enable importing hierarchies from files.\n * By default, true.\n * @prop {function} onError Function to call with error messages (failed import validation, etc).\n * @prop {function} onCheckNode Function to call when a single node has been checked or un-checked.\n * @prop {function} onExpandNode Function to call when a node has been expanded.\n * @prop {function} onDropNode Function to call when a node has been dragged-and-dropped.\n * @prop {function} onCheckLevel Function to call when an entire hierarchy level has been selected,\n * via the \"Color by cluster\" and \"Color by subcluster\" buttons below collapsed level zero nodes.\n * @prop {function} onNodeSetColor Function to call when a new node color has been selected.\n * @prop {function} onNodeSetName Function to call when a node has been renamed.\n * @prop {function} onNodeRemove Function to call when the user clicks the \"Delete\" menu button\n * to remove a node.\n * @prop {function} onNodeView Function to call when the user wants to view the set associated\n * with a particular node.\n * @prop {function} onImportTree Function to call when a tree has been imported\n * using the \"plus\" button.\n * @prop {function} onCreateLevelZeroNode Function to call when a user clicks the \"Create hierarchy\"\n * menu option using the \"plus\" button.\n * @prop {function} onExportLevelZeroNode Function to call when a user wants to\n * export an entire hierarchy via the \"Export hierarchy\" menu button for a\n * particular level zero node.\n * @prop {function} onExportSet Function to call when a user wants to export a set associated with\n * a particular node via the \"Export set\" menu button.\n * @prop {function} onUnion Function to call when a user wants to create a new set from the union\n * of the sets associated with the currently-checked nodes.\n * @prop {function} onIntersection Function to call when a user wants to create a new set from the\n * intersection of the sets associated with the currently-checked nodes.\n * @prop {function} onComplement Function to call when a user wants to create a new set from the\n * complement of the (union of the) sets associated with the currently-checked nodes.\n * @prop {function} onView Function to call when a user wants to view the sets\n * associated with the currently-checked nodes.\n */\nexport default function SetsManager(props) {\n  const {\n    sets,\n    additionalSets,\n    setColor, // TODO: use this\n    levelSelection: checkedLevel,\n    setSelection,\n    setExpansion,\n    hasColorEncoding,\n    datatype,\n    draggable = true,\n    checkable = true,\n    editable = true,\n    expandable = true,\n    operatable = true,\n    exportable = true,\n    importable = true,\n    onError,\n    onCheckNode,\n    onExpandNode,\n    onDropNode,\n    onCheckLevel,\n    onNodeSetColor,\n    onNodeSetName,\n    onNodeCheckNewName,\n    onNodeRemove,\n    onNodeView,\n    onImportTree,\n    onCreateLevelZeroNode,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    onUnion,\n    onIntersection,\n    onComplement,\n    hasCheckedSetsToUnion,\n    hasCheckedSetsToIntersect,\n    hasCheckedSetsToComplement,\n  } = props;\n\n  const isChecking = true;\n  const autoExpandParent = true;\n  const [isDragging, setIsDragging] = useState(false);\n  const [isEditingNodeName, setIsEditingNodeName] = useState(null);\n\n  const processedSets = useMemo(() => processSets(\n    sets, setColor,\n  ), [sets, setColor]);\n  const processedAdditionalSets = useMemo(() => processSets(\n    additionalSets, setColor,\n  ), [additionalSets, setColor]);\n\n  const additionalSetKeys = (processedAdditionalSets\n    ? processedAdditionalSets.tree.flatMap(v => getAllKeys(v, []))\n    : []\n  );\n\n  const allSetSelectionKeys = (setSelection || []).map(pathToKey);\n  const allSetExpansionKeys = (setExpansion || []).map(pathToKey);\n\n  const setSelectionKeys = allSetSelectionKeys.filter(k => !additionalSetKeys.includes(k));\n  const setExpansionKeys = allSetExpansionKeys.filter(k => !additionalSetKeys.includes(k));\n\n  const additionalSetSelectionKeys = allSetSelectionKeys.filter(k => additionalSetKeys.includes(k));\n  const additionalSetExpansionKeys = allSetExpansionKeys.filter(k => additionalSetKeys.includes(k));\n\n  /**\n   * Recursively render TreeNode components.\n   * @param {object[]} nodes An array of node objects.\n   * @returns {TreeNode[]|null} Array of TreeNode components or null.\n   */\n  function renderTreeNodes(nodes, readOnly, currPath) {\n    if (!nodes) {\n      return null;\n    }\n    return nodes.map((node) => {\n      const newPath = [...currPath, node.name];\n      return (\n        <TreeNode\n          key={pathToKey(newPath)}\n          {...nodeToRenderProps(node, newPath, setColor)}\n\n          isEditing={isEqual(isEditingNodeName, newPath)}\n\n          datatype={datatype}\n          draggable={draggable && !readOnly}\n          editable={editable && !readOnly}\n          checkable={checkable}\n          expandable={expandable}\n          exportable={exportable}\n\n          hasColorEncoding={hasColorEncoding}\n          isChecking={isChecking}\n          checkedLevelPath={checkedLevel ? checkedLevel.levelZeroPath : null}\n          checkedLevelIndex={checkedLevel ? checkedLevel.levelIndex : null}\n\n          onCheckNode={onCheckNode}\n          onCheckLevel={onCheckLevel}\n          onNodeView={onNodeView}\n          onNodeSetColor={onNodeSetColor}\n          onNodeSetName={(targetPath, name) => {\n            onNodeSetName(targetPath, name);\n            setIsEditingNodeName(null);\n          }}\n          onNodeCheckNewName={onNodeCheckNewName}\n          onNodeSetIsEditing={setIsEditingNodeName}\n          onNodeRemove={onNodeRemove}\n          onExportLevelZeroNodeJSON={onExportLevelZeroNodeJSON}\n          onExportLevelZeroNodeTabular={onExportLevelZeroNodeTabular}\n          onExportSetJSON={onExportSetJSON}\n\n          disableTooltip={isDragging}\n          onDragStart={() => setIsDragging(true)}\n          onDragEnd={() => setIsDragging(false)}\n        >\n          {renderTreeNodes(node.children, readOnly, newPath)}\n        </TreeNode>\n      );\n    });\n  }\n\n  return (\n    <div className=\"sets-manager\">\n      <div className=\"sets-manager-tree\">\n        <Tree\n          draggable={false}\n          checkable={checkable}\n\n          checkedKeys={setSelectionKeys}\n          expandedKeys={setExpansionKeys}\n          autoExpandParent={autoExpandParent}\n\n          onCheck={(checkedKeys, info) => onCheckNode(\n            info.node.props.nodeKey,\n            info.checked,\n          )}\n          onExpand={(expandedKeys, info) => onExpandNode(\n            expandedKeys,\n            info.node.props.nodeKey,\n            info.expanded,\n          )}\n        >\n          {renderTreeNodes(processedSets.tree, true, [])}\n        </Tree>\n        <Tree\n          draggable /* TODO */\n          checkable={checkable}\n\n          checkedKeys={additionalSetSelectionKeys}\n          expandedKeys={additionalSetExpansionKeys}\n          autoExpandParent={autoExpandParent}\n\n          onCheck={(checkedKeys, info) => onCheckNode(\n            info.node.props.nodeKey,\n            info.checked,\n          )}\n          onExpand={(expandedKeys, info) => onExpandNode(\n            expandedKeys,\n            info.node.props.nodeKey,\n            info.expanded,\n          )}\n          onDrop={(info) => {\n            const { eventKey: dropKey } = info.node.props;\n            const { eventKey: dragKey } = info.dragNode.props;\n            const { dropToGap, dropPosition } = info;\n            onDropNode(dropKey, dragKey, dropPosition, dropToGap);\n          }}\n        >\n          {renderTreeNodes(processedAdditionalSets.tree, false, [])}\n        </Tree>\n\n        <PlusButton\n          datatype={datatype}\n          onError={onError}\n          onImportTree={onImportTree}\n          onCreateLevelZeroNode={onCreateLevelZeroNode}\n          importable={importable}\n          editable={editable}\n        />\n      </div>\n      {isChecking ? (\n        <div className=\"set-operation-buttons\">\n          <SetOperationButtons\n            onUnion={onUnion}\n            onIntersection={onIntersection}\n            onComplement={onComplement}\n            operatable={operatable}\n\n            hasCheckedSetsToUnion={hasCheckedSetsToUnion}\n            hasCheckedSetsToIntersect={hasCheckedSetsToIntersect}\n            hasCheckedSetsToComplement={hasCheckedSetsToComplement}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React, {\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport packageJson from '../../../package.json';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetWarning,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport SetsManager from './SetsManager';\nimport TitleInfo from '../TitleInfo';\nimport {\n  treeExportLevelZeroNode,\n  treeExportSet,\n  treeToExpectedCheckedLevel,\n  nodeToLevelDescendantNamePaths,\n  treeToIntersection,\n  treeToUnion,\n  treeToComplement,\n  treeFindNodeByNamePath,\n  treesConflict,\n  nodeTransform,\n  nodeAppendChild,\n  nodePrependChild,\n  nodeInsertChild,\n  filterNode,\n  treeInitialize,\n  initializeCellSetColor,\n} from './cell-set-utils';\nimport {\n  isEqualOrPrefix,\n  tryRenamePath,\n  PATH_SEP,\n} from './utils';\nimport {\n  downloadForUser,\n  handleExportJSON,\n  handleExportTabular,\n  tryUpgradeTreeToLatestSchema,\n} from './io';\nimport {\n  FILE_EXTENSION_JSON,\n  FILE_EXTENSION_TABULAR,\n  SETS_DATATYPE_CELL,\n} from './constants';\nimport { useUrls, useReady } from '../hooks';\nimport {\n  setCellSelection,\n  mergeCellSets,\n  getNextNumberedNodeName,\n} from '../utils';\nimport { useCellsData, useCellSetsData } from '../data-hooks';\n\nconst CELL_SETS_DATA_TYPES = ['cells', 'cell-sets'];\n\n/**\n * A subscriber wrapper around the SetsManager component\n * for the 'cell' datatype.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function CellSetsManagerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Cell Sets',\n  } = props;\n\n  const loaders = useLoaders();\n  const setWarning = useSetWarning();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n    cellColorEncoding,\n  }, {\n    setCellSetSelection,\n    setCellColorEncoding,\n    setCellSetColor,\n    setAdditionalCellSets,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSets, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    CELL_SETS_DATA_TYPES,\n  );\n\n  const [cellSetExpansion, setCellSetExpansion] = useState([]);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    setCellSetExpansion([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  // Validate and upgrade the additionalCellSets.\n  useEffect(() => {\n    if (additionalCellSets) {\n      let upgradedCellSets;\n      try {\n        upgradedCellSets = tryUpgradeTreeToLatestSchema(additionalCellSets, SETS_DATATYPE_CELL);\n      } catch (e) {\n        setWarning(e.message);\n        return;\n      }\n      setAdditionalCellSets(upgradedCellSets);\n    }\n  }, [additionalCellSets, setAdditionalCellSets, setWarning]);\n\n  // Get an array of all cell IDs to use for set complement operations.\n  const allCellIds = useMemo(() => (cells ? Object.keys(cells) : []), [cells]);\n\n  // A helper function for updating the encoding for cell colors,\n  // which may have previously been set to 'geneSelection'.\n  function setCellSetColorEncoding() {\n    setCellColorEncoding('cellSetSelection');\n  }\n\n  // Merged cell sets are only to be used for convenience when reading\n  // (if writing: update either `cellSets` _or_ `additionalCellSets`).\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // Infer the state of the \"checked level\" radio button based on the selected cell sets.\n  const checkedLevel = useMemo(() => {\n    if (cellSetSelection && cellSetSelection.length > 0\n    && mergedCellSets && mergedCellSets.tree.length > 0) {\n      return treeToExpectedCheckedLevel(mergedCellSets, cellSetSelection);\n    }\n    return null;\n  }, [cellSetSelection, mergedCellSets]);\n\n  // Callback functions\n\n  // The user wants to select all nodes at a particular hierarchy level.\n  function onCheckLevel(levelZeroName, levelIndex) {\n    const lzn = mergedCellSets.tree.find(n => n.name === levelZeroName);\n    if (lzn) {\n      const newCellSetSelection = nodeToLevelDescendantNamePaths(lzn, levelIndex, [], true);\n      setCellSetSelection(newCellSetSelection);\n      setCellSetColorEncoding();\n    }\n  }\n\n  // The user wants to check or uncheck a cell set node.\n  function onCheckNode(targetKey, checked) {\n    const targetPath = (Array.isArray(targetKey) ? targetKey : targetKey.split(PATH_SEP));\n    if (!targetKey) {\n      return;\n    }\n    if (checked) {\n      setCellSetSelection([...cellSetSelection, targetPath]);\n    } else {\n      setCellSetSelection(cellSetSelection.filter(d => !isEqual(d, targetPath)));\n    }\n    setCellSetColorEncoding();\n  }\n\n  // The user wants to expand or collapse a node in the tree.\n  function onExpandNode(expandedKeys, targetKey, expanded) {\n    if (expanded) {\n      setCellSetExpansion(prev => ([...prev, targetKey.split(PATH_SEP)]));\n    } else {\n      setCellSetExpansion(prev => prev.filter(d => !isEqual(d, targetKey.split(PATH_SEP))));\n    }\n  }\n\n  // The user dragged a tree node and dropped it somewhere else in the tree\n  // to re-arrange or re-order the nodes.\n  // We need to verify that their drop target is valid, and if so, complete\n  // the tree re-arrangement.\n  function onDropNode(dropKey, dragKey, dropPosition, dropToGap) {\n    const dropPath = dropKey.split(PATH_SEP);\n    const dropNode = treeFindNodeByNamePath(additionalCellSets, dropPath);\n    if (!dropNode.children && !dropToGap) {\n      // Do not allow a node with a set (i.e. leaf) to become a child of another node with a set,\n      // as this will result in an internal node having a set, which we do not allow.\n      return;\n    }\n    const dropNodeLevel = dropPath.length - 1;\n    const dropNodeIsLevelZero = dropNodeLevel === 0;\n\n    // Get drag node.\n    const dragPath = dragKey.split(PATH_SEP);\n    const dragNode = treeFindNodeByNamePath(additionalCellSets, dragPath);\n\n    if (dropNodeIsLevelZero && dropToGap && !dragNode.children) {\n      // Do not allow a leaf node to become a level zero node.\n      return;\n    }\n\n    let dropParentNode;\n    let dropParentPath;\n    let dropNodeCurrIndex;\n    if (!dropNodeIsLevelZero) {\n      dropParentPath = dropPath.slice(0, -1);\n      dropParentNode = treeFindNodeByNamePath(additionalCellSets, dropParentPath);\n      dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.name === dropNode.name);\n    } else {\n      dropNodeCurrIndex = additionalCellSets.tree.findIndex(\n        lzn => lzn.name === dropNode.name,\n      );\n    }\n    // Further, only allow dragging if the dragged node will have a unique\n    // name among its new siblings.\n    let hasSiblingNameConflict;\n    const dragNodeName = dragNode.name;\n    if (!dropNodeIsLevelZero && dropToGap) {\n      hasSiblingNameConflict = dropParentNode.children\n        .find(c => c !== dragNode && c.name === dragNodeName);\n    } else if (!dropToGap) {\n      hasSiblingNameConflict = dropNode.children\n        .find(c => c !== dragNode && c.name === dragNodeName);\n    } else {\n      hasSiblingNameConflict = additionalCellSets.tree\n        .find(lzn => lzn !== dragNode && lzn.name === dragNodeName);\n    }\n\n    if (hasSiblingNameConflict) {\n      return;\n    }\n\n    // Remove the dragged object from its current position.\n    // Recursively check whether each node path\n    // matches the path of the node to delete.\n    // If so, return null, and then always use\n    // .filter(Boolean) to eliminate any null array elements.\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => filterNode(lzn, [], dragPath)).filter(Boolean),\n    };\n\n    // Update index values after temporarily removing the dragged node.\n    // Names are unique as children of their parents.\n    if (!dropNodeIsLevelZero) {\n      dropNodeCurrIndex = dropParentNode.children.findIndex(c => c.name === dropNode.name);\n    } else {\n      dropNodeCurrIndex = nextAdditionalCellSets.tree.findIndex(\n        lzn => lzn.name === dropNode.name,\n      );\n    }\n    let newDragPath = [];\n    if (!dropToGap || !dropNodeIsLevelZero) {\n      let addChildFunction;\n      let checkPathFunction;\n      const newPath = [];\n      if (!dropToGap) {\n        // Append the dragNode to dropNode's children if dropping _onto_ the dropNode.\n        // Set dragNode as the last child of dropNode.\n        addChildFunction = n => nodeAppendChild(n, dragNode);\n        checkPathFunction = path => isEqual(path, dropPath);\n      } else if (!dropNodeIsLevelZero) {\n        // Prepend or insert the dragNode if dropping _between_ (above or below dropNode).\n        // The dropNode is at a level greater than zero,\n        // so it has a parent.\n        checkPathFunction = path => isEqual(path, dropParentPath);\n        if (dropPosition === -1) {\n          // Set dragNode as first child of dropParentNode.\n          addChildFunction = n => nodePrependChild(n, dragNode);\n        } else {\n          // Set dragNode before or after dropNode.\n          const insertIndex = dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0);\n          addChildFunction = n => nodeInsertChild(n, dragNode, insertIndex);\n        }\n      }\n      nextAdditionalCellSets.tree = nextAdditionalCellSets.tree.map(\n        node => nodeTransform(\n          node,\n          (n, path) => checkPathFunction(path),\n          (n) => {\n            const newNode = addChildFunction(n);\n            return newNode;\n          },\n          newPath,\n        ),\n      );\n      // Done\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [...newPath[0], dragNode.name];\n      setCellSetSelection([newDragPath]);\n    } else if (dropPosition === -1) {\n      // We need to drop the dragNode to level zero,\n      // and level zero nodes do not have parents.\n      // Set dragNode as first level zero node of the tree.\n      nextAdditionalCellSets.tree.unshift(dragNode);\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [dragNode.name];\n      setCellSetSelection([newDragPath]);\n    } else {\n      // Set dragNode before or after dropNode in level zero.\n      const insertIndex = dropNodeCurrIndex + (dropPosition > dropNodeCurrIndex ? 1 : 0);\n      const newLevelZero = Array.from(nextAdditionalCellSets.tree);\n      newLevelZero.splice(insertIndex, 0, dragNode);\n      nextAdditionalCellSets.tree = newLevelZero;\n      setAdditionalCellSets(nextAdditionalCellSets);\n      newDragPath = [dragNode.name];\n      setCellSetSelection([newDragPath]);\n    }\n    const oldColors = cellSetColor.filter(\n      i => isEqualOrPrefix(dragPath, i.path),\n    );\n    const newColors = oldColors.map(\n      i => (\n        {\n          ...i,\n          path: !isEqual(i.path, dragPath)\n            ? newDragPath.concat(i.path.slice(dragPath.length))\n            : newDragPath,\n        }\n      ),\n    );\n    const newCellSetColor = cellSetColor.filter(\n      i => !isEqualOrPrefix(dragPath, i.path),\n    );\n    newCellSetColor.push(...newColors);\n    setCellSetColor(newCellSetColor);\n  }\n\n  // The user wants to change the color of a cell set node.\n  function onNodeSetColor(targetPath, color) {\n    // Replace the color if an array element for this path already exists.\n    const prevNodeColor = cellSetColor?.find(d => isEqual(d.path, targetPath));\n    if (!prevNodeColor) {\n      setCellSetColor([\n        ...(cellSetColor || []),\n        {\n          path: targetPath,\n          color,\n        },\n      ]);\n    } else {\n      setCellSetColor([\n        ...cellSetColor.filter(d => !isEqual(d.path, targetPath)),\n        {\n          path: targetPath,\n          color,\n        },\n      ]);\n    }\n  }\n\n  // The user wants to change the name of a cell set node.\n  function onNodeSetName(targetPath, name) {\n    const nextNamePath = [...targetPath];\n    nextNamePath.pop();\n    nextNamePath.push(name);\n\n    // Recursively check whether each node path\n    // matches the path or a prefix of the path of the node to rename.\n    // If so, rename the node using the new path.\n    function renameNode(node, prevPath) {\n      if (isEqual([...prevPath, node.name], targetPath)) {\n        return {\n          ...node,\n          name,\n        };\n      }\n      if (!node.children) {\n        return node;\n      }\n      return {\n        ...node,\n        children: node.children.map(c => renameNode(c, [...prevPath, node.name])),\n      };\n    }\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => renameNode(lzn, [])),\n    };\n    // Change all paths that have this node as a prefix (i.e. descendants).\n    const nextCellSetColor = cellSetColor.map(d => ({\n      path: tryRenamePath(targetPath, d.path, nextNamePath),\n      color: d.color,\n    }));\n    const nextCellSetSelection = cellSetSelection.map(d => (\n      tryRenamePath(targetPath, d, nextNamePath)\n    ));\n    const nextCellSetExpansion = cellSetExpansion.map(d => (\n      tryRenamePath(targetPath, d, nextNamePath)\n    ));\n    // Need to update the node path everywhere it may be present.\n    setAdditionalCellSets(nextAdditionalCellSets);\n    setCellSetColor(nextCellSetColor);\n    setCellSetSelection(nextCellSetSelection);\n    setCellSetExpansion(nextCellSetExpansion);\n  }\n\n  // Each time the user types while renaming a cell set node,\n  // we need to check whether the potential new name conflicts\n  // with any existing cell set node names.\n  // If there are conflicts, we want to disable the \"Save\" button.\n  function onNodeCheckNewName(targetPath, name) {\n    const nextNamePath = [...targetPath];\n    nextNamePath.pop();\n    nextNamePath.push(name);\n    const hasConflicts = (\n      !isEqual(targetPath, nextNamePath)\n      && treeFindNodeByNamePath(additionalCellSets, nextNamePath)\n    );\n    return hasConflicts;\n  }\n\n  // The user wants to delete a cell set node, and has confirmed their choice.\n  function onNodeRemove(targetPath) {\n    // Recursively check whether each node path\n    // matches the path of the node to delete.\n    // If so, return null, and then always use\n    // .filter(Boolean) to eliminate any null array elements.\n    const nextAdditionalCellSets = {\n      ...additionalCellSets,\n      tree: additionalCellSets.tree.map(lzn => filterNode(lzn, [], targetPath)).filter(Boolean),\n    };\n    // Delete state for all paths that have this node\n    // path as a prefix (i.e. delete all descendents).\n    const nextCellSetColor = cellSetColor.filter(d => !isEqualOrPrefix(targetPath, d.path));\n    const nextCellSetSelection = cellSetSelection.filter(d => !isEqualOrPrefix(targetPath, d));\n    const nextCellSetExpansion = cellSetExpansion.filter(d => !isEqualOrPrefix(targetPath, d));\n    setAdditionalCellSets(nextAdditionalCellSets);\n    setCellSetColor(nextCellSetColor);\n    setCellSetSelection(nextCellSetSelection);\n    setCellSetExpansion(nextCellSetExpansion);\n  }\n\n  // The user wants to view (i.e. select) a particular node,\n  // or its expanded descendents.\n  function onNodeView(targetPath) {\n    // If parent node is clicked, and if it is expanded,\n    // then select the expanded descendent nodes.\n    const setsToView = [];\n    // Recursively determine which descendent nodes are currently expanded.\n    function viewNode(node, nodePath) {\n      if (cellSetExpansion.find(expandedPath => isEqual(nodePath, expandedPath))) {\n        if (node.children) {\n          node.children.forEach((c) => {\n            viewNode(c, [...nodePath, c.name]);\n          });\n        } else {\n          setsToView.push(nodePath);\n        }\n      } else {\n        setsToView.push(nodePath);\n      }\n    }\n    const targetNode = treeFindNodeByNamePath(mergedCellSets, targetPath);\n    viewNode(targetNode, targetPath);\n    setCellSetSelection(setsToView);\n    setCellSetColorEncoding();\n  }\n\n  // The user wants to create a new level zero node.\n  function onCreateLevelZeroNode() {\n    const nextName = getNextNumberedNodeName(additionalCellSets?.tree, 'My hierarchy ');\n    setAdditionalCellSets({\n      ...(additionalCellSets || treeInitialize(SETS_DATATYPE_CELL)),\n      tree: [\n        ...(additionalCellSets ? additionalCellSets.tree : []),\n        {\n          name: nextName,\n          children: [],\n        },\n      ],\n    });\n  }\n\n  // The user wants to create a new node corresponding to\n  // the union of the selected sets.\n  function onUnion() {\n    const newSet = treeToUnion(mergedCellSets, cellSetSelection);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Union ',\n    );\n  }\n\n  // The user wants to create a new node corresponding to\n  // the intersection of the selected sets.\n  function onIntersection() {\n    const newSet = treeToIntersection(mergedCellSets, cellSetSelection);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Intersection ',\n    );\n  }\n\n  // The user wants to create a new node corresponding to\n  // the complement of the selected sets.\n  function onComplement() {\n    const newSet = treeToComplement(mergedCellSets, cellSetSelection, allCellIds);\n    setCellSelection(\n      newSet, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n      'Complement ',\n    );\n  }\n\n  // The user wants to import a cell set hierarchy,\n  // probably from a CSV or JSON file.\n  function onImportTree(treeToImport) {\n    // Check for any naming conflicts with the current sets\n    // (both user-defined and dataset-defined) before importing.\n    const hasConflict = treesConflict(mergedCellSets, treeToImport);\n    if (!hasConflict) {\n      setAdditionalCellSets({\n        ...(additionalCellSets || treeInitialize(SETS_DATATYPE_CELL)),\n        tree: [\n          ...(additionalCellSets ? additionalCellSets.tree : []),\n          ...treeToImport.tree,\n        ],\n      });\n      // Automatically initialize set colors for the imported sets.\n      const importAutoSetColors = initializeCellSetColor(treeToImport, cellSetColor);\n      setCellSetColor([\n        ...cellSetColor,\n        ...importAutoSetColors,\n      ]);\n    }\n  }\n\n  // The user wants to download a particular hierarchy to a JSON file.\n  function onExportLevelZeroNodeJSON(nodePath) {\n    const {\n      treeToExport, nodeName,\n    } = treeExportLevelZeroNode(mergedCellSets, nodePath, SETS_DATATYPE_CELL, cellSetColor);\n    downloadForUser(\n      handleExportJSON(treeToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-hierarchy.${FILE_EXTENSION_JSON}`,\n    );\n  }\n\n  // The user wants to download a particular hierarchy to a CSV file.\n  function onExportLevelZeroNodeTabular(nodePath) {\n    const {\n      treeToExport, nodeName,\n    } = treeExportLevelZeroNode(mergedCellSets, nodePath, SETS_DATATYPE_CELL, cellSetColor);\n    downloadForUser(\n      handleExportTabular(treeToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-hierarchy.${FILE_EXTENSION_TABULAR}`,\n    );\n  }\n\n  // The user wants to download a particular set to a JSON file.\n  function onExportSetJSON(nodePath) {\n    const { setToExport, nodeName } = treeExportSet(mergedCellSets, nodePath);\n    downloadForUser(\n      handleExportJSON(setToExport),\n      `${nodeName}_${packageJson.name}-${SETS_DATATYPE_CELL}-set.${FILE_EXTENSION_JSON}`,\n      FILE_EXTENSION_JSON,\n    );\n  }\n  return (\n    <TitleInfo\n      title={title}\n      isScroll\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <SetsManager\n        setColor={cellSetColor}\n        sets={cellSets}\n        additionalSets={additionalCellSets}\n        levelSelection={checkedLevel}\n        setSelection={cellSetSelection}\n        setExpansion={cellSetExpansion}\n        hasColorEncoding={cellColorEncoding === 'cellSetSelection'}\n        draggable\n        datatype={SETS_DATATYPE_CELL}\n        onError={setWarning}\n        onCheckNode={onCheckNode}\n        onExpandNode={onExpandNode}\n        onDropNode={onDropNode}\n        onCheckLevel={onCheckLevel}\n        onNodeSetColor={onNodeSetColor}\n        onNodeSetName={onNodeSetName}\n        onNodeCheckNewName={onNodeCheckNewName}\n        onNodeRemove={onNodeRemove}\n        onNodeView={onNodeView}\n        onImportTree={onImportTree}\n        onCreateLevelZeroNode={onCreateLevelZeroNode}\n        onExportLevelZeroNodeJSON={onExportLevelZeroNodeJSON}\n        onExportLevelZeroNodeTabular={onExportLevelZeroNodeTabular}\n        onExportSetJSON={onExportSetJSON}\n        onUnion={onUnion}\n        onIntersection={onIntersection}\n        onComplement={onComplement}\n        hasCheckedSetsToUnion={cellSetSelection?.length > 1}\n        hasCheckedSetsToIntersect={cellSetSelection?.length > 1}\n        hasCheckedSetsToComplement={cellSetSelection?.length > 0}\n      />\n    </TitleInfo>\n  );\n}\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-param-reassign */\nimport { treeToCellColorsBySetNames } from './sets/cell-set-utils';\n\n// The functions defined here have been adapted from d3-interpolate,\n// d3-color, and d3-scale-chromatic.\n// Color string \"rgb(r,g,b)\" representations are replaced by color array [r, g, b]\n// representations, to allow them to work nicely with deck.gl,\n// without the need to converting back and forth between string and array formats.\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/431d21da776f97c632f53a855bd822edfbbcd56e/src/diverging/RdBu.js\n// eslint-disable-next-line max-len\nconst schemeRdBu = [[103, 0, 31], [178, 24, 43], [214, 96, 77], [244, 165, 130], [253, 219, 199], [247, 247, 247], [209, 229, 240], [146, 197, 222], [67, 147, 195], [33, 102, 172], [5, 48, 97]];\n// eslint-disable-next-line max-len\nconst schemePlasma = [[13, 8, 135], [16, 7, 136], [19, 7, 137], [22, 7, 138], [25, 6, 140], [27, 6, 141], [29, 6, 142], [32, 6, 143], [34, 6, 144], [36, 6, 145], [38, 5, 145], [40, 5, 146], [42, 5, 147], [44, 5, 148], [46, 5, 149], [47, 5, 150], [49, 5, 151], [51, 5, 151], [53, 4, 152], [55, 4, 153], [56, 4, 154], [58, 4, 154], [60, 4, 155], [62, 4, 156], [63, 4, 156], [65, 4, 157], [67, 3, 158], [68, 3, 158], [70, 3, 159], [72, 3, 159], [73, 3, 160], [75, 3, 161], [76, 2, 161], [78, 2, 162], [80, 2, 162], [81, 2, 163], [83, 2, 163], [85, 2, 164], [86, 1, 164], [88, 1, 164], [89, 1, 165], [91, 1, 165], [92, 1, 166], [94, 1, 166], [96, 1, 166], [97, 0, 167], [99, 0, 167], [100, 0, 167], [102, 0, 167], [103, 0, 168], [105, 0, 168], [106, 0, 168], [108, 0, 168], [110, 0, 168], [111, 0, 168], [113, 0, 168], [114, 1, 168], [116, 1, 168], [117, 1, 168], [119, 1, 168], [120, 1, 168], [122, 2, 168], [123, 2, 168], [125, 3, 168], [126, 3, 168], [128, 4, 168], [129, 4, 167], [131, 5, 167], [132, 5, 167], [134, 6, 166], [135, 7, 166], [136, 8, 166], [138, 9, 165], [139, 10, 165], [141, 11, 165], [142, 12, 164], [143, 13, 164], [145, 14, 163], [146, 15, 163], [148, 16, 162], [149, 17, 161], [150, 19, 161], [152, 20, 160], [153, 21, 159], [154, 22, 159], [156, 23, 158], [157, 24, 157], [158, 25, 157], [160, 26, 156], [161, 27, 155], [162, 29, 154], [163, 30, 154], [165, 31, 153], [166, 32, 152], [167, 33, 151], [168, 34, 150], [170, 35, 149], [171, 36, 148], [172, 38, 148], [173, 39, 147], [174, 40, 146], [176, 41, 145], [177, 42, 144], [178, 43, 143], [179, 44, 142], [180, 46, 141], [181, 47, 140], [182, 48, 139], [183, 49, 138], [184, 50, 137], [186, 51, 136], [187, 52, 136], [188, 53, 135], [189, 55, 134], [190, 56, 133], [191, 57, 132], [192, 58, 131], [193, 59, 130], [194, 60, 129], [195, 61, 128], [196, 62, 127], [197, 64, 126], [198, 65, 125], [199, 66, 124], [200, 67, 123], [201, 68, 122], [202, 69, 122], [203, 70, 121], [204, 71, 120], [204, 73, 119], [205, 74, 118], [206, 75, 117], [207, 76, 116], [208, 77, 115], [209, 78, 114], [210, 79, 113], [211, 81, 113], [212, 82, 112], [213, 83, 111], [213, 84, 110], [214, 85, 109], [215, 86, 108], [216, 87, 107], [217, 88, 106], [218, 90, 106], [218, 91, 105], [219, 92, 104], [220, 93, 103], [221, 94, 102], [222, 95, 101], [222, 97, 100], [223, 98, 99], [224, 99, 99], [225, 100, 98], [226, 101, 97], [226, 102, 96], [227, 104, 95], [228, 105, 94], [229, 106, 93], [229, 107, 93], [230, 108, 92], [231, 110, 91], [231, 111, 90], [232, 112, 89], [233, 113, 88], [233, 114, 87], [234, 116, 87], [235, 117, 86], [235, 118, 85], [236, 119, 84], [237, 121, 83], [237, 122, 82], [238, 123, 81], [239, 124, 81], [239, 126, 80], [240, 127, 79], [240, 128, 78], [241, 129, 77], [241, 131, 76], [242, 132, 75], [243, 133, 75], [243, 135, 74], [244, 136, 73], [244, 137, 72], [245, 139, 71], [245, 140, 70], [246, 141, 69], [246, 143, 68], [247, 144, 68], [247, 145, 67], [247, 147, 66], [248, 148, 65], [248, 149, 64], [249, 151, 63], [249, 152, 62], [249, 154, 62], [250, 155, 61], [250, 156, 60], [250, 158, 59], [251, 159, 58], [251, 161, 57], [251, 162, 56], [252, 163, 56], [252, 165, 55], [252, 166, 54], [252, 168, 53], [252, 169, 52], [253, 171, 51], [253, 172, 51], [253, 174, 50], [253, 175, 49], [253, 177, 48], [253, 178, 47], [253, 180, 47], [253, 181, 46], [254, 183, 45], [254, 184, 44], [254, 186, 44], [254, 187, 43], [254, 189, 42], [254, 190, 42], [254, 192, 41], [253, 194, 41], [253, 195, 40], [253, 197, 39], [253, 198, 39], [253, 200, 39], [253, 202, 38], [253, 203, 38], [252, 205, 37], [252, 206, 37], [252, 208, 37], [252, 210, 37], [251, 211, 36], [251, 213, 36], [251, 215, 36], [250, 216, 36], [250, 218, 36], [249, 220, 36], [249, 221, 37], [248, 223, 37], [248, 225, 37], [247, 226, 37], [247, 228, 37], [246, 230, 38], [246, 232, 38], [245, 233, 38], [245, 235, 39], [244, 237, 39], [243, 238, 39], [243, 240, 39], [242, 242, 39], [241, 244, 38], [241, 245, 37], [240, 247, 36], [240, 249, 33]];\n\n// Reference: https://github.com/d3/d3-interpolate/blob/96d54051d1c2fec55f240edd0ec5401715b10390/src/rgb.js\nfunction rgbSpline(spline) {\n  return (colors) => {\n    const n = colors.length;\n    let r = new Array(n);\n    let g = new Array(n);\n    let b = new Array(n);\n    let i; let\n      color;\n    // eslint-disable-next-line no-plusplus\n    for (i = 0; i < n; ++i) {\n      color = [colors[i][0], colors[i][1], colors[i][2]];\n      r[i] = color[0] || 0;\n      g[i] = color[1] || 0;\n      b[i] = color[2] || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    return t => [r(t), g(t), b(t)];\n  };\n}\n\n// Reference: https://github.com/d3/d3-interpolate/blob/594a32af1fe1118812b439012c2cb742e907c0c0/src/basis.js\nfunction basis(values) {\n  function innerBasis(t1, v0, v1, v2, v3) {\n    const t2 = t1 * t1; const\n      t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n          + (4 - 6 * t2 + 3 * t3) * v1\n          + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n          + t3 * v3) / 6;\n  }\n\n  const n = values.length - 1;\n  return (t) => {\n    const i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n);\n    const v1 = values[i];\n    const v2 = values[i + 1];\n    const v0 = i > 0 ? values[i - 1] : 2 * v1 - v2;\n    const v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return innerBasis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/ade54c13e8dfdb9807801a794eaec1a37f926b8a/src/ramp.js\nconst interpolateRgbBasis = rgbSpline(basis);\n\nfunction interpolateSequentialMulti(range) {\n  const n = range.length;\n  return t => range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n}\n\nexport const interpolateRdBu = interpolateRgbBasis(schemeRdBu);\nexport const interpolatePlasma = interpolateSequentialMulti(schemePlasma);\n\n\n/**\n * Get a mapping of cell IDs to cell colors based on\n * gene / cell set selection coordination state.\n * @param {object} params\n * @param {object} params.expressionMatrix { rows, cols, matrix }\n * @param {array} params.geneSelection Array of selected gene IDs.\n * @param {object} params.cellSets The cell sets tree.\n * @param {object} params.cellSetSelection Selected cell sets.\n * @param {string} params.cellColorEncoding Which to use for\n * coloring: gene expression or cell sets?\n * @returns {Map} Mapping from cell IDs to [r, g, b] color arrays.\n */\nexport function getCellColors(params) {\n  const {\n    cellColorEncoding,\n    expressionData,\n    cellSets, cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs,\n  } = params;\n  if (cellColorEncoding === 'geneSelection' && expressionData && expressionDataAttrs) {\n    // TODO: allow other color maps.\n    const geneExpColormap = interpolatePlasma;\n    const colors = new Map();\n    for (let i = 0; i < expressionData.length; i += 1) {\n      const value = expressionData[i];\n      const cellColor = geneExpColormap(value / 255);\n      colors.set(expressionDataAttrs.rows[i], cellColor);\n    }\n    return colors;\n  } if (cellColorEncoding === 'cellSetSelection' && cellSetSelection && cellSets) {\n    // Cell sets can potentially lack set colors since the color property\n    // is not a required part of the schema.\n    // The `initializeSets` function fills in any empty colors\n    // with defaults and returns the processed tree object.\n    return treeToCellColorsBySetNames(cellSets, cellSetSelection, cellSetColor);\n  }\n  return new Map();\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable no-underscore-dangle */\n// File adopted from nebula.gl's SelectionLayer\n// https://github.com/uber/nebula.gl/blob/8e9c2ec8d7cf4ca7050909ed826eb847d5e2cd9c/modules/layers/src/layers/selection-layer.js\nimport { CompositeLayer } from 'deck.gl';\nimport { polygon as turfPolygon, point as turfPoint } from '@turf/helpers';\nimport booleanWithin from '@turf/boolean-within';\nimport booleanContains from '@turf/boolean-contains';\nimport booleanOverlap from '@turf/boolean-overlap';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { EditableGeoJsonLayer, SELECTION_TYPE } from 'nebula.gl';\nimport { DrawRectangleMode, DrawPolygonByDraggingMode, ViewMode } from '@nebula.gl/edit-modes';\n\nconst EDIT_TYPE_ADD = 'addFeature';\nconst EDIT_TYPE_CLEAR = 'clearFeatures';\n\n// Customize the click handlers for the rectangle and polygon tools,\n// so that clicking triggers the `onEdit` callback.\nclass ClickableDrawRectangleMode extends DrawRectangleMode {\n  // eslint-disable-next-line class-methods-use-this\n  handleClick(event, props) {\n    props.onEdit({ editType: EDIT_TYPE_CLEAR });\n  }\n}\n\nclass ClickableDrawPolygonByDraggingMode extends DrawPolygonByDraggingMode {\n  // eslint-disable-next-line class-methods-use-this\n  handleClick(event, props) {\n    props.onEdit({ editType: EDIT_TYPE_CLEAR });\n  }\n}\n\nconst MODE_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: ClickableDrawRectangleMode,\n  [SELECTION_TYPE.POLYGON]: ClickableDrawPolygonByDraggingMode,\n};\n\nconst defaultProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: () => {},\n};\n\nconst EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nconst LAYER_ID_GEOJSON = 'selection-geojson';\n\nconst PASS_THROUGH_PROPS = [\n  'lineWidthScale',\n  'lineWidthMinPixels',\n  'lineWidthMaxPixels',\n  'lineWidthUnits',\n  'lineJointRounded',\n  'lineMiterLimit',\n  'pointRadiusScale',\n  'pointRadiusMinPixels',\n  'pointRadiusMaxPixels',\n  'lineDashJustified',\n  'getLineColor',\n  'getFillColor',\n  'getRadius',\n  'getLineWidth',\n  'getLineDashArray',\n  'getTentativeLineDashArray',\n  'getTentativeLineColor',\n  'getTentativeFillColor',\n  'getTentativeLineWidth',\n  'editHandlePointRadiusScale',\n  'editHandlePointRadiusMinPixels',\n  'editHandlePointRadiusMaxPixels',\n  'getEditHandlePointColor',\n  'getEditHandlePointRadius',\n  'modeHandlers',\n];\n\nexport default class SelectionLayer extends CompositeLayer {\n  _selectPolygonObjects(coordinates) {\n    const {\n      onSelect,\n      getCellCoords,\n      cellsQuadTree,\n      flipY,\n    } = this.props;\n\n    const flippedCoordinates = (flipY\n      ? coordinates.map(poly => poly.map(p => ([p[0], -p[1]])))\n      : coordinates);\n\n    // Convert the selection to a turf polygon object.\n    const selectedPolygon = turfPolygon(flippedCoordinates);\n\n    // Create an array to store the results.\n    const pickingInfos = [];\n\n    // quadtree.visit() takes a callback that returns a boolean:\n    // If true returned, then the children of the node are _not_ visited.\n    // If false returned, then the children of the node are visited.\n    // Reference: https://github.com/d3/d3-quadtree#quadtree_visit\n    cellsQuadTree.visit((node, x0, y0, x1, y1) => {\n      const nodePoints = [[[x0, y0], [x1, y0], [x1, y1], [x0, y1], [x0, y0]]];\n      const nodePolygon = turfPolygon(nodePoints);\n\n      const nodePolygonContainsSelectedPolygon = booleanContains(nodePolygon, selectedPolygon);\n      const nodePolygonWithinSelectedPolygon = booleanWithin(nodePolygon, selectedPolygon);\n      const nodePolygonOverlapsSelectedPolgyon = booleanOverlap(nodePolygon, selectedPolygon);\n\n      if (!nodePolygonContainsSelectedPolygon\n        && !nodePolygonWithinSelectedPolygon\n        && !nodePolygonOverlapsSelectedPolgyon) {\n        // We are not interested in anything below this node,\n        // so return true because we are done with this node.\n        return true;\n      }\n\n      // This node made it past the above return statement, so it must either\n      // contain, be within, or overlap with the selected polygon.\n\n      // Check if this is a leaf node.\n      if (node.data\n        && booleanPointInPolygon(turfPoint(getCellCoords(node.data[1])), selectedPolygon)) {\n        // This node has data, so it is a leaf node representing one data point,\n        // and we have verified that the point is in the selected polygon.\n        pickingInfos.push(node.data);\n      }\n\n      // Return false because we are not done.\n      // We want to visit the children of this node.\n      return false;\n    });\n\n    onSelect({ pickingInfos });\n  }\n\n  renderLayers() {\n    const { onSelect } = this.props;\n    const mode = MODE_MAP[this.props.selectionType] || ViewMode;\n\n    const inheritedProps = {};\n    PASS_THROUGH_PROPS.forEach((p) => {\n      if (this.props[p] !== undefined) inheritedProps[p] = this.props[p];\n    });\n    const layers = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: LAYER_ID_GEOJSON,\n          pickable: true,\n          mode,\n          modeConfig: {\n            dragToDraw: true,\n          },\n          selectedFeatureIndexes: [],\n          data: EMPTY_DATA,\n          onEdit: ({ updatedData, editType }) => {\n            if (editType === EDIT_TYPE_ADD) {\n              const { coordinates } = updatedData.features[0].geometry;\n              this._selectPolygonObjects(coordinates);\n            } else if (editType === EDIT_TYPE_CLEAR) {\n              // We want to select an empty array to clear any previous selection.\n              onSelect({ pickingInfos: [] });\n            }\n          },\n          ...inheritedProps,\n        }),\n      ),\n    ];\n\n    return layers;\n  }\n}\n\nSelectionLayer.layerName = 'SelectionLayer';\nSelectionLayer.defaultProps = defaultProps;\n","import { COORDINATE_SYSTEM } from 'deck.gl';\nimport { DataFilterExtension } from '@deck.gl/extensions'; // eslint-disable-line import/no-extraneous-dependencies\nimport SelectionLayer from './SelectionLayer';\n\n/**\n * Convert a DeckGL layer ID to a \"base\" layer ID for selection.\n * @param {string} layerId The layer ID to convert.\n * @returns {string} The base layer ID.\n */\nfunction getBaseLayerId(layerId) {\n  return `base-${layerId}`;\n}\n\n/**\n * Convert a DeckGL layer ID to a \"selected\" layer ID for selection.\n * @param {string} layerId The layer ID to convert.\n * @returns {string} The base layer ID.\n */\nfunction getSelectedLayerId(layerId) {\n  return `selected-${layerId}`;\n}\n\n/**\n * Construct DeckGL selection layers.\n * @param {string} tool\n * @param {number} zoom\n * @param {string} cellBaseLayerId\n * @param {function} getCellCoords\n * @param {function} updateCellsSelection\n * @returns {object[]} The array of DeckGL selection layers.\n */\nexport function getSelectionLayers(\n  tool,\n  zoom,\n  layerId,\n  getCellCoords,\n  updateCellsSelection,\n  cellsQuadTree,\n  flipY = false,\n) {\n  if (!tool) {\n    return [];\n  }\n\n  const cellBaseLayerId = getBaseLayerId(layerId);\n  const editHandlePointRadius = 5 / (zoom + 16);\n\n  return [new SelectionLayer({\n    id: 'selection',\n    flipY,\n    cellsQuadTree,\n    getCellCoords,\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    selectionType: tool,\n    onSelect: ({ pickingInfos }) => {\n      const cellIds = pickingInfos.map(cellObj => cellObj[0]);\n      if (updateCellsSelection) {\n        updateCellsSelection(cellIds);\n      }\n    },\n    layerIds: [cellBaseLayerId],\n    getTentativeFillColor: () => [255, 255, 255, 95],\n    getTentativeLineColor: () => [143, 143, 143, 255],\n    getTentativeLineDashArray: () => [7, 4],\n    lineWidthMinPixels: 2,\n    lineWidthMaxPixels: 2,\n    getEditHandlePointColor: () => [0xff, 0xff, 0xff, 0xff],\n    getEditHandlePointRadius: () => editHandlePointRadius,\n    editHandlePointRadiusScale: 1,\n    editHandlePointRadiusMinPixels: editHandlePointRadius,\n    editHandlePointRadiusMaxPixels: 2 * editHandlePointRadius,\n  })];\n}\n\n/**\n * Get deck.gl layer props for selection overlays.\n * @param {object} props\n * @returns {object} Object with two properties,\n * overlay: overlayProps, base: baseProps,\n * where the values are deck.gl layer props.\n */\nexport function overlayBaseProps(props) {\n  const {\n    id, getColor, data, isSelected, ...rest\n  } = props;\n  return {\n    overlay: {\n      id: getSelectedLayerId(id),\n      getFillColor: getColor,\n      getLineColor: getColor,\n      data,\n      getFilterValue: isSelected,\n      extensions: [new DataFilterExtension({ filterSize: 1 })],\n      filterRange: [1, 1],\n      ...rest,\n    },\n    base: {\n      id: getBaseLayerId(id),\n      getLineColor: getColor,\n      getFillColor: getColor,\n      // Alternatively: contrast outlines with solids:\n      // getLineColor: getColor,\n      // getFillColor: [255, 255, 255],\n      data: data.slice(),\n      ...rest,\n    },\n  };\n}\n","import { CompositeLayer, PolygonLayer } from 'deck.gl';\n\nimport { overlayBaseProps } from './selection-utils';\n\nexport default class SelectablePolygonLayer extends CompositeLayer {\n  renderLayers() {\n    const props = overlayBaseProps(this.props);\n    const base = new PolygonLayer(props.base);\n    const overlay = new PolygonLayer(props.overlay);\n    return [base, overlay];\n  }\n}\n\nSelectablePolygonLayer.layerName = 'SelectablePolygonLayer';\n","import { CompositeLayer, ScatterplotLayer } from 'deck.gl';\n\nimport { overlayBaseProps } from './selection-utils';\n\nexport default class SelectableScatterplotLayer extends CompositeLayer {\n  renderLayers() {\n    const props = overlayBaseProps(this.props);\n    const base = new ScatterplotLayer(props.base);\n    const overlay = new ScatterplotLayer(props.overlay);\n    return [base, overlay];\n  }\n}\n\nSelectableScatterplotLayer.layerName = 'SelectableScatterplotLayer';\n","import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\n\nexport const TILE_SIZE = 2048;\nexport const MIN_ROW_AGG = 1;\nexport const MAX_ROW_AGG = 16;\n\nexport const COLOR_BAR_SIZE = 20;\nexport const AXIS_LABEL_TEXT_SIZE = 9;\nexport const AXIS_TITLE_TEXT_SIZE = 15;\nexport const AXIS_MIN_SIZE = 10;\nexport const AXIS_MAX_SIZE = 90;\nexport const AXIS_MARGIN = 3;\nexport const THEME_TO_TEXT_COLOR = {\n  dark: [224, 224, 224],\n  light: [64, 64, 64],\n};\nexport const AXIS_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\n\nexport const PIXELATED_TEXTURE_PARAMETERS = {\n  // NEAREST for integer data to prevent interpolation.\n  [GL.TEXTURE_MIN_FILTER]: GL.NEAREST,\n  [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n  // CLAMP_TO_EDGE to remove tile artifacts.\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE,\n};\n","import GL from '@luma.gl/constants'; // eslint-disable-line import/no-extraneous-dependencies\nimport { _mergeShaders, project32, picking } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { BitmapLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { Texture2D } from '@luma.gl/core';\nimport { PIXELATED_TEXTURE_PARAMETERS, TILE_SIZE } from './heatmap-constants';\nimport { vertexShader, fragmentShader } from './heatmap-bitmap-layer-shaders';\n\nconst defaultProps = {\n  image: { type: 'object', value: null, async: true },\n  colormap: { type: 'string', value: 'plasma', compare: true },\n  bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n  aggSizeX: { type: 'number', value: 8.0, compare: true },\n  aggSizeY: { type: 'number', value: 8.0, compare: true },\n  colorScaleLo: { type: 'number', value: 0.0, compare: true },\n  colorScaleHi: { type: 'number', value: 1.0, compare: true },\n};\n\n/**\n * A BitmapLayer that performs aggregation in the fragment shader,\n * and renders its texture from a Uint8Array rather than an ImageData.\n */\nexport default class HeatmapBitmapLayer extends BitmapLayer {\n  /**\n   * Copy of getShaders from Layer (grandparent, parent of BitmapLayer).\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/core/src/lib/layer.js#L302\n   * @param {object} shaders\n   * @returns {object} Merged shaders.\n   */\n  // eslint-disable-next-line no-underscore-dangle\n  _getShaders(shaders) {\n    this.props.extensions.forEach((extension) => {\n      // eslint-disable-next-line no-param-reassign\n      shaders = _mergeShaders(shaders, extension.getShaders.call(this, extension));\n    });\n    return shaders;\n  }\n\n  updateState(args) {\n    super.updateState(args);\n    this.loadTexture(this.props.image);\n  }\n\n  /**\n   * Need to override to provide custom shaders.\n   */\n  getShaders() {\n    const { colormap } = this.props;\n    // eslint-disable-next-line no-underscore-dangle\n    return this._getShaders({\n      vs: vertexShader,\n      fs: fragmentShader.replace('__colormap', colormap),\n      modules: [project32, picking],\n    });\n  }\n\n  /**\n   * Need to override to provide additional uniform values.\n   * Simplified by removing video-related code.\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/layers/src/bitmap-layer/bitmap-layer.js#L173\n   * @param {*} opts\n   */\n  draw(opts) {\n    const { uniforms } = opts;\n    const { bitmapTexture, model } = this.state;\n    const {\n      aggSizeX,\n      aggSizeY,\n      colorScaleLo,\n      colorScaleHi,\n    } = this.props;\n\n    // Render the image\n    if (bitmapTexture && model) {\n      model\n        .setUniforms(\n          Object.assign({}, uniforms, {\n            uBitmapTexture: bitmapTexture,\n            uTextureSize: [TILE_SIZE, TILE_SIZE],\n            uAggSize: [aggSizeX, aggSizeY],\n            uColorScaleRange: [colorScaleLo, colorScaleHi],\n          }),\n        )\n        .draw();\n    }\n  }\n\n  /**\n   * Need to override to provide the custom DEFAULT_TEXTURE_PARAMETERS\n   * object.\n   * Simplified by removing video-related code.\n   * Reference: https://github.com/visgl/deck.gl/blob/0afd4e99a6199aeec979989e0c361c97e6c17a16/modules/layers/src/bitmap-layer/bitmap-layer.js#L218\n   * @param {Uint8Array} image\n   */\n  loadTexture(image) {\n    const { gl } = this.context;\n\n    if (this.state.bitmapTexture) {\n      this.state.bitmapTexture.delete();\n    }\n\n    if (image instanceof Texture2D) {\n      this.setState({\n        bitmapTexture: image,\n      });\n    } else if (image) {\n      this.setState({\n        bitmapTexture: new Texture2D(gl, {\n          data: image,\n          mipmaps: false,\n          parameters: PIXELATED_TEXTURE_PARAMETERS,\n          // Each color contains a single luminance value.\n          // When sampled, rgb are all set to this luminance, alpha is 1.0.\n          // Reference: https://luma.gl/docs/api-reference/webgl/texture#texture-formats\n          format: GL.LUMINANCE,\n          dataFormat: GL.LUMINANCE,\n          type: GL.UNSIGNED_BYTE,\n          width: TILE_SIZE,\n          height: TILE_SIZE,\n        }),\n      });\n    }\n  }\n}\nHeatmapBitmapLayer.layerName = 'HeatmapBitmapLayer';\nHeatmapBitmapLayer.defaultProps = defaultProps;\n","import glsl from 'glslify';\n\n/**\n * No change to the vertex shader from the base BitmapLayer.\n * Reference: https://github.com/visgl/deck.gl/blob/8.2-release/modules/layers/src/bitmap-layer/bitmap-layer-vertex.js\n */\nexport const vertexShader = glsl`\n#define SHADER_NAME heatmap-bitmap-layer-vertex-shader\n\nattribute vec2 texCoords;\nattribute vec3 positions;\nattribute vec3 positions64Low;\n\nvarying vec2 vTexCoord;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n`;\n\n/**\n * Fragment shader adapted to perform aggregation and\n * take color scale functions + sliders into account.\n * Reference: https://github.com/visgl/deck.gl/blob/8.2-release/modules/layers/src/bitmap-layer/bitmap-layer-fragment.js\n * Reference: https://github.com/hubmapconsortium/vitessce-image-viewer/blob/06231ae02cac1ff57ba458c71e9bc59ed2fc4f8b/src/layers/XRLayer/xr-layer-fragment-colormap.webgl1.glsl\n */\nexport const fragmentShader = glsl`\n#define SHADER_NAME heatmap-bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#pragma glslify: rdbu = require(\"glsl-colormap/rdbu\")\n#pragma glslify: jet = require(\"glsl-colormap/jet\")\n#pragma glslify: viridis = require(\"glsl-colormap/viridis\")\n#pragma glslify: inferno = require(\"glsl-colormap/inferno\")\n#pragma glslify: magma = require(\"glsl-colormap/magma\")\n#pragma glslify: plasma = require(\"glsl-colormap/plasma\")\n\n// The texture (GL.LUMINANCE & Uint8Array).\nuniform sampler2D uBitmapTexture;\n\n// What are the dimensions of the texture (width, height)?\nuniform vec2 uTextureSize;\n\n// How many consecutive pixels should be aggregated together along each axis?\nuniform vec2 uAggSize;\n\n// What are the values of the color scale sliders?\nuniform vec2 uColorScaleRange;\n\n// The texture coordinate, varying (interpolated between values set by the vertex shader).\nvarying vec2 vTexCoord;\n\nvoid main(void) {\n  // Compute 1 pixel in texture coordinates\n  vec2 onePixel = vec2(1.0, 1.0) / uTextureSize;\n  \n  vec2 viewCoord = vec2(floor(vTexCoord.x * uTextureSize.x), floor(vTexCoord.y * uTextureSize.y));\n\n  // Compute (x % aggSizeX, y % aggSizeY).\n  // These values will be the number of values to the left / above the current position to consider.\n  vec2 modAggSize = vec2(-1.0 * mod(viewCoord.x, uAggSize.x), -1.0 * mod(viewCoord.y, uAggSize.y));\n\n  // Take the sum of values along each axis.\n  float intensitySum = 0.0;\n  vec2 offsetPixels = vec2(0.0, 0.0);\n\n  for(int i = 0; i < 16; i++) {\n    // Check to break outer loop early.\n    // Uniforms cannot be used as conditions in GLSL for loops.\n    if(float(i) >= uAggSize.y) {\n      // Done in the y direction.\n      break;\n    }\n\n    offsetPixels = vec2(offsetPixels.x, (modAggSize.y + float(i)) * onePixel.y);\n\n    for(int j = 0; j < 16; j++) {\n      // Check to break inner loop early.\n      // Uniforms cannot be used as conditions in GLSL for loops.\n      if(float(j) >= uAggSize.x) {\n        // Done in the x direction.\n        break;\n      }\n\n      offsetPixels = vec2((modAggSize.x + float(j)) * onePixel.x, offsetPixels.y);\n      intensitySum += texture2D(uBitmapTexture, vTexCoord + offsetPixels).r;\n    }\n  }\n  \n  // Compute the mean value.\n  float intensityMean = intensitySum / (uAggSize.x * uAggSize.y);\n  \n  // Re-scale using the color scale slider values.\n  float scaledIntensityMean = (intensityMean - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\n\n  gl_FragColor = __colormap(clamp(scaledIntensityMean, 0.0, 1.0));\n\n  geometry.uv = vTexCoord;\n  DECKGL_FILTER_COLOR(gl_FragColor, geometry);\n}\n`;\n","import { BitmapLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { CompositeLayer } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { PIXELATED_TEXTURE_PARAMETERS } from './heatmap-constants';\n\n\n// These are the same defaultProps as for BitmapLayer.\nconst defaultProps = {\n  ...BitmapLayer.defaultProps,\n  image: { type: 'object', value: null, async: true },\n  bounds: { type: 'array', value: [1, 0, 0, 1], compare: true },\n  desaturate: {\n    type: 'number', min: 0, max: 1, value: 0,\n  },\n  transparentColor: { type: 'color', value: [0, 0, 0, 0] },\n  tintColor: { type: 'color', value: [255, 255, 255] },\n};\n\nexport default class PixelatedBitmapLayer extends CompositeLayer {\n  renderLayers() {\n    const { image } = this.props;\n    return new BitmapLayer(this.props, {\n      id: `${this.props.id}-wrapped`,\n      image,\n      textureParameters: PIXELATED_TEXTURE_PARAMETERS,\n    });\n  }\n}\n\nPixelatedBitmapLayer.layerName = 'PixelatedBitmapLayer';\nPixelatedBitmapLayer.defaultProps = defaultProps;\n","/* eslint-disable no-underscore-dangle */\nimport { COORDINATE_SYSTEM, CompositeLayer } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport { TextLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport {\n  AXIS_LABEL_TEXT_SIZE,\n  AXIS_TITLE_TEXT_SIZE,\n  AXIS_MARGIN,\n  THEME_TO_TEXT_COLOR,\n  AXIS_FONT_FAMILY,\n} from './heatmap-constants';\n\nexport default class HeatmapCompositeTextLayer extends CompositeLayer {\n  _renderAxisTopLayers() {\n    const {\n      axisTopLabelData, matrixLeft, width, matrixWidth, viewWidth, theme,\n      targetX, targetY, axisTopTitle, cellWidth, axisOffsetTop, scaleFactor,\n    } = this.props;\n    const showAxisTopLabels = cellWidth >= AXIS_LABEL_TEXT_SIZE;\n    const axisLabelTop = targetY + (axisOffsetTop - AXIS_MARGIN) / 2 / scaleFactor;\n    return [\n      new TextLayer({\n        id: 'axisTopLabels',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: axisTopLabelData,\n        getText: d => d[1],\n        getPosition: d => [matrixLeft + ((d[0] + 0.5) / width) * matrixWidth, axisLabelTop],\n        getTextAnchor: 'start',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (showAxisTopLabels ? AXIS_LABEL_TEXT_SIZE : 0),\n        getAngle: 75,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getPosition: [axisLabelTop, matrixLeft, matrixWidth, viewWidth],\n          getSize: [showAxisTopLabels],\n          getColor: [theme],\n        },\n      }),\n      new TextLayer({\n        id: 'axisTopTitle',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: [{ title: axisTopTitle }],\n        getText: d => d.title,\n        getPosition: [targetX, targetY],\n        getTextAnchor: 'middle',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (!showAxisTopLabels ? AXIS_TITLE_TEXT_SIZE : 0),\n        getAngle: 0,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getSize: [showAxisTopLabels],\n          getColor: [theme],\n        },\n      }),\n    ];\n  }\n\n  _renderAxisLeftLayers() {\n    const {\n      axisLeftLabelData, matrixTop, height, matrixHeight,\n      viewHeight, theme, axisLeftTitle, targetX, targetY, cellHeight, axisOffsetLeft,\n      scaleFactor,\n    } = this.props;\n    const showAxisLeftLabels = cellHeight >= AXIS_LABEL_TEXT_SIZE;\n    const axisLabelLeft = targetX + (axisOffsetLeft - AXIS_MARGIN) / 2 / scaleFactor;\n    return [\n      new TextLayer({\n        id: 'axisLeftLabels',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: axisLeftLabelData,\n        getText: d => d[1],\n        getPosition: d => [axisLabelLeft, matrixTop + ((d[0] + 0.5) / height) * matrixHeight],\n        getTextAnchor: 'end',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (showAxisLeftLabels ? AXIS_LABEL_TEXT_SIZE : 0),\n        getAngle: 0,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getPosition: [axisLabelLeft, matrixTop, matrixHeight, viewHeight],\n          getSize: [showAxisLeftLabels],\n          getColor: [theme],\n        },\n      }),\n      new TextLayer({\n        id: 'axisLeftTitle',\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        data: [{ title: axisLeftTitle }],\n        getText: d => d.title,\n        getPosition: [targetX, targetY],\n        getTextAnchor: 'middle',\n        getColor: () => THEME_TO_TEXT_COLOR[theme],\n        getSize: (!showAxisLeftLabels ? AXIS_TITLE_TEXT_SIZE : 0),\n        getAngle: 90,\n        fontFamily: AXIS_FONT_FAMILY,\n        updateTriggers: {\n          getSize: [showAxisLeftLabels],\n          getColor: [theme],\n        },\n      }),\n    ];\n  }\n\n  renderLayers() {\n    return [\n      this._renderAxisTopLayers(),\n      this._renderAxisLeftLayers(),\n    ];\n  }\n}\n\nHeatmapCompositeTextLayer.layerName = 'HeatmapCompositeTextLayer';\n","import { quadtree } from 'd3-quadtree';\n\n/**\n * Create a d3-quadtree object for cells data points.\n * @param {array} cellsEntries Array of [cellId, cell] tuples,\n * resulting from running Object.entries on the cells object.\n * @param {function} getCellCoords Given a cell object, return the\n * spatial/scatterplot coordinates [x, y].\n * @returns {object} Quadtree instance.\n */\nexport function createCellsQuadTree(cellsEntries, getCellCoords) {\n  // Use the cellsEntries variable since it is already\n  // an array, converted by Object.entries().\n  // Only use cellsEntries in quadtree calculation if there is\n  // centroid data in the cells (i.e not just ids).\n  // eslint-disable-next-line no-unused-vars\n  if (!cellsEntries || !cellsEntries.length || !getCellCoords(cellsEntries[0][1])) {\n    // Abort if the cells data is not yet available.\n    return null;\n  }\n  const tree = quadtree()\n    .x(d => getCellCoords(d[1])[0])\n    .y(d => getCellCoords(d[1])[1])\n    .addAll(cellsEntries);\n  return tree;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0V0z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 3L3 10.53v.98l6.84 2.65L12.48 21h.98L21 3z\"\n});\n\nfunction SvgNearMe(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgNearMe, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/near_me.2a308adc.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"       M19 19h2v2h-2v-2zm0-2h2v-2h-2v2z       M3 13h2v-2H3v2zm0 4h2v-2H3v2z       m0-8h2V7H3v2zm0-4h2V3H3v2z       m4 0h2V3H7v2zm8 16h2v-2h-2v2z       m-4 0h2v-2h-2v2z       m4 0h2v-2h-2v2z       m-8 0h2v-2H7v2z       m-4 0h2v-2H3v2z       M11 5h2v-2h-2v2z       M15 5h2v-2h-2v2z       M19 5h2v-2h-2v2z       M19 9h2v-2h-2v2z       M19 13h2v-2h-2v2z     \"\n});\n\nfunction SvgSelectionRectangle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSelectionRectangle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/selection_rectangle.aa477261.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSelectionLasso(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0,3)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      strokeWidth: 0.343565\n    },\n    d: \"M 23.942314,4.6958443 C 23.446206,1.8868581 19.727461,0 14.687364,0 13.437819,0 12.150138,0.11543779 10.859708,0.34287772 4.1629423,1.5250844 -0.58168816,5.2884937 0.05768601,8.911385 c 0.25355086,1.439193 1.35605049,2.63583 3.04638949,3.461072 -0.2569865,0.387198 -0.4074679,0.826617 -0.4074679,1.29524 0,1.337498 1.1863293,2.457176 2.7639791,2.728248 l -1.3615475,2.333149 c -0.1576963,0.271073 -0.066308,0.61876 0.2047647,0.776457 0.090014,0.05291 0.1886171,0.07799 0.2858459,0.07799 0.1951448,0 0.3851362,-0.100665 0.4912977,-0.281723 l 1.6803757,-2.88148 C 8.41868,16.20561 9.6895264,15.063601 9.6998333,13.683844 c 6.872e-4,-0.0055 0.00137,-0.01065 0.00137,-0.01615 0,-0.02336 -0.00344,-0.04569 -0.00481,-0.06837 1.1292977,-0.0213 2.2847067,-0.130211 3.4435507,-0.334975 6.69711,-1.181863 11.44174,-4.9456164 10.802366,-8.5685077 z M 3.83312,13.667353 c 0,-0.30749 0.1281497,-0.59849 0.3470005,-0.848261 0.1219655,0.04295 0.2456489,0.08383 0.3717372,0.123339 l 1.2234344,2.352045 C 4.6865351,15.149835 3.83312,14.46408 3.83312,13.667353 Z M 7.0141869,15.216144 6.0223152,13.309702 5.4008064,12.114097 c 0.121622,-0.03161 0.2477103,-0.05634 0.3772342,-0.07387 0.1367388,-0.0189 0.2772568,-0.02886 0.420867,-0.02886 0.5067581,0 0.980534,0.11956 1.3701366,0.317454 0.5696305,0.289968 0.9554538,0.750345 0.9904974,1.262944 0.00137,0.02542 0.0055,0.05016 0.0055,0.07593 0,0.698124 -0.6562089,1.310356 -1.5508518,1.548447 z m 5.9185921,-3.126441 c -1.217251,0.214728 -2.429691,0.323982 -3.6060571,0.324669 -0.5765018,-0.911821 -1.7614569,-1.53917 -3.1278143,-1.53917 -0.4717146,0 -0.921441,0.07593 -1.332001,0.211292 -0.3061162,0.100665 -0.5878394,0.237403 -0.8427645,0.39991 C 2.4598914,10.828133 1.4360682,9.8579062 1.2319907,8.7035283 0.72660678,5.8381974 5.2307418,2.5475333 11.067221,1.5175259 c 1.222061,-0.2161023 2.439998,-0.3246688 3.620143,-0.3246688 4.371863,0 7.694479,1.5250844 8.080645,3.7101568 0.505041,2.8653309 -3.998751,6.1566821 -9.83523,7.1866891 z\",\n    id: \"path10\"\n  })));\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSelectionLasso, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/selection_lasso.00e80a33.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { SELECTION_TYPE } from 'nebula.gl';\nimport { ReactComponent as PointerIconSVG } from '../../assets/tools/near_me.svg';\nimport { ReactComponent as SelectRectangleIconSVG } from '../../assets/tools/selection_rectangle.svg';\nimport { ReactComponent as SelectLassoIconSVG } from '../../assets/tools/selection_lasso.svg';\n\nexport function IconButton(props) {\n  const {\n    alt, onClick, isActive, children,\n  } = props;\n  const inactive = 'btn btn-outline-secondary mr-2 icon';\n  const active = `${inactive} active`;\n  return (\n    <button\n      className={isActive ? active : inactive}\n      onClick={onClick}\n      type=\"button\"\n      title={alt}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default function ToolMenu(props) {\n  const {\n    setActiveTool,\n    activeTool,\n    visibleTools = { pan: true, selectRectangle: true, selectLasso: true },\n  } = props;\n  return (\n    <div className=\"tool\">\n      {visibleTools.pan && (\n      <IconButton\n        alt=\"pointer tool\"\n        onClick={() => setActiveTool(null)}\n        isActive={activeTool === null}\n      ><PointerIconSVG />\n      </IconButton>\n      )}\n      {visibleTools.selectRectangle ? (\n        <IconButton\n          alt=\"select rectangle\"\n          onClick={() => setActiveTool(SELECTION_TYPE.RECTANGLE)}\n          isActive={activeTool === SELECTION_TYPE.RECTANGLE}\n        ><SelectRectangleIconSVG />\n        </IconButton>\n      ) : null}\n      {visibleTools.selectLasso ? (\n        <IconButton\n          alt=\"select lasso\"\n          onClick={() => setActiveTool(SELECTION_TYPE.POLYGON)}\n          isActive={activeTool === SELECTION_TYPE.POLYGON}\n        ><SelectLassoIconSVG />\n        </IconButton>\n      ) : null}\n    </div>\n  );\n}\n","export const getCursorWithTool = () => 'crosshair';\nexport const getCursor = interactionState => (interactionState.isDragging\n  ? 'grabbing' : 'default'\n);\n","import React, { PureComponent } from 'react';\nimport DeckGL, { OrthographicView, OrbitView } from 'deck.gl';\nimport ToolMenu from './ToolMenu';\nimport { DEFAULT_GL_OPTIONS } from '../utils';\nimport { getCursor, getCursorWithTool } from './cursor';\n\n/**\n * Abstract class component intended to be inherited by\n * the Spatial and Scatterplot class components.\n * Contains a common constructor, common DeckGL callbacks,\n * and common render function.\n */\nexport default class AbstractSpatialOrScatterplot extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gl: null,\n      tool: null,\n    };\n\n    this.viewport = null;\n\n    this.onViewStateChange = this.onViewStateChange.bind(this);\n    this.onInitializeViewInfo = this.onInitializeViewInfo.bind(this);\n    this.onWebGLInitialized = this.onWebGLInitialized.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onHover = this.onHover.bind(this);\n  }\n\n  /**\n   * Called by DeckGL upon a viewState change,\n   * for example zoom or pan interaction.\n   * Emit the new viewState to the `setViewState`\n   * handler prop.\n   * @param {object} params\n   * @param {object} params.viewState The next deck.gl viewState.\n   */\n  onViewStateChange({ viewState: nextViewState }) {\n    const {\n      setViewState, viewState, layers, spatialAxisFixed,\n    } = this.props;\n    const use3d = layers?.some(l => l.use3d);\n    setViewState({\n      ...nextViewState,\n      // If the axis is fixed, just use the current target in state i.e don't change target.\n      target: spatialAxisFixed && use3d ? viewState.target : nextViewState.target,\n    });\n  }\n\n  /**\n   * Called by DeckGL upon viewport\n   * initialization.\n   * @param {object} viewState\n   * @param {object} viewState.viewport\n   */\n  onInitializeViewInfo({ viewport }) {\n    this.viewport = viewport;\n  }\n\n  /**\n   * Called by DeckGL upon initialization,\n   * helps to understand when to pass layers\n   * to the DeckGL component.\n   * @param {object} gl The WebGL context object.\n   */\n  onWebGLInitialized(gl) {\n    this.setState({ gl });\n  }\n\n  /**\n   * Called by the ToolMenu buttons.\n   * Emits the new tool value to the\n   * `onToolChange` prop.\n   * @param {string} tool Name of tool.\n   */\n  onToolChange(tool) {\n    const { onToolChange: onToolChangeProp } = this.props;\n    this.setState({ tool });\n    if (onToolChangeProp) {\n      onToolChangeProp(tool);\n    }\n  }\n\n  /**\n   * Create the DeckGL layers.\n   * @returns {object[]} Array of\n   * DeckGL layer objects.\n   * Intended to be overriden by descendants.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  getLayers() {\n    return [];\n  }\n\n  // eslint-disable-next-line consistent-return\n  onHover(info) {\n    const { coordinate, layer, sourceLayer } = info;\n    const {\n      setCellHighlight, cellHighlight, setComponentHover, layers,\n    } = this.props;\n    const hasBitmask = (layers || []).some(l => l.type === 'bitmask');\n    if (!setCellHighlight) {\n      return null;\n    }\n    if (!sourceLayer || !coordinate) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { channelData, bounds } = sourceLayer.props;\n    if (!channelData) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { data, width } = channelData;\n    if (!data) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    // Tiled layer needs a custom layerZoomScale.\n    if (sourceLayer.id.includes('bitmask')) {\n      const { tileSize } = layer.props.loader[0];\n      const { z } = sourceLayer.props.tileId;\n      // The zoomed out layer needs to use the fixed zoom at which it is rendered.\n      // See the following for why we have this calculation with 512:\n      // https://github.com/visgl/deck.gl/blob/2b15bc459c6534ea38ce1153f254ce0901f51d6f/modules/geo-layers/src/tile-layer/utils.js#L130.\n      const layerZoomScale = Math.max(\n        1,\n        2 ** Math.round(-z + Math.log2(512 / tileSize)),\n      );\n      const dataCoords = [\n        Math.floor((coordinate[0] - bounds[0]) / layerZoomScale),\n        Math.floor((coordinate[1] - bounds[3]) / layerZoomScale),\n      ];\n      const coords = dataCoords[1] * width + dataCoords[0];\n      const hoverData = data.map(d => d[coords]);\n      const cellId = hoverData.find(i => i > 0);\n      if (cellId !== Number(cellHighlight)) {\n        if (setComponentHover) {\n          setComponentHover();\n        }\n        // eslint-disable-next-line no-unused-expressions\n        setCellHighlight(cellId ? String(cellId) : null);\n      }\n    }\n  }\n\n  /**\n   * Emits a function to project from the\n   * cell ID space to the scatterplot or\n   * spatial coordinate space, via the\n   * `updateViewInfo` prop.\n   */\n  viewInfoDidUpdate(getCellCoords) {\n    const { updateViewInfo, cells, uuid } = this.props;\n    const { viewport } = this;\n    if (updateViewInfo && viewport) {\n      updateViewInfo({\n        uuid,\n        project: (cellId) => {\n          const cell = cells[cellId];\n          try {\n            const [positionX, positionY] = getCellCoords(cell);\n            return viewport.project([positionX, positionY]);\n          } catch (e) {\n            return [null, null];\n          }\n        },\n      });\n    }\n  }\n\n  /**\n   * Intended to be overriden by descendants.\n   */\n  componentDidUpdate() {\n\n  }\n\n  /**\n   * A common render function for both Spatial\n   * and Scatterplot components.\n   */\n  render() {\n    const {\n      deckRef, viewState, uuid, layers: layerProps,\n    } = this.props;\n    const { gl, tool } = this.state;\n    const layers = this.getLayers();\n    const use3d = (layerProps || []).some(l => l.use3d);\n\n    const showCellSelectionTools = this.cellsLayer !== null\n      || (this.cellsEntries.length && this.cellsEntries[0][1].xy);\n    const showPanTool = this.cellsLayer !== null || layerProps.findIndex(l => l.type === 'bitmask' || l.type === 'raster') >= 0;\n    // For large datasets or ray casting, the visual quality takes only a small\n    // hit in exchange for much better performance by setting this to false:\n    // https://deck.gl/docs/api-reference/core/deck#usedevicepixels\n    const useDevicePixels = this.cellsEntries.length < 100000 && !use3d;\n\n    return (\n      <>\n        <ToolMenu\n          activeTool={tool}\n          setActiveTool={this.onToolChange}\n          visibleTools={{\n            pan: showPanTool,\n            selectRectangle: showCellSelectionTools,\n            selectLasso: showCellSelectionTools,\n          }}\n        />\n        <DeckGL\n          id={`deckgl-overlay-${uuid}`}\n          ref={deckRef}\n          views={[\n            use3d\n              ? new OrbitView({ id: 'orbit', controller: true, orbitAxis: 'Y' })\n              : new OrthographicView({\n                id: 'ortho',\n              }),\n          ]} // id is a fix for https://github.com/uber/deck.gl/issues/3259\n          layers={\n            gl && viewState.target.slice(0, 2).every(i => typeof i === 'number')\n              ? layers\n              : []\n          }\n          glOptions={DEFAULT_GL_OPTIONS}\n          onWebGLInitialized={this.onWebGLInitialized}\n          onViewStateChange={this.onViewStateChange}\n          viewState={viewState}\n          useDevicePixels={useDevicePixels}\n          controller={tool ? { dragPan: false } : true}\n          getCursor={tool ? getCursorWithTool : getCursor}\n          onHover={this.onHover}\n        >\n          {this.onInitializeViewInfo}\n        </DeckGL>\n      </>\n    );\n  }\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable no-param-reassign */\nimport { quadtree } from 'd3-quadtree';\n\n/**\n * Returns a closure that returns a constant value.\n */\nfunction constant(v) {\n  return (() => v);\n}\n\n/**\n * Adds a tiny bit of randomness to a number.\n */\nfunction jiggle(v) {\n  return v + (Math.random() - 0.5) * 1e-6;\n}\n\n/**\n * A force function to be used with d3.forceSimulation.\n * This has been adapted for use here, with comments explaining each part.\n * Reference: https://bl.ocks.org/cmgiven/547658968d365bcc324f3e62e175709b\n */\nexport function forceCollideRects() {\n  // D3 implements things with function prototypes rather than classes.\n  // Pretend these variables are the \"instance members\" of a class.\n  // Note that this function actually returns the internal force() function,\n  // but that the force() function is a closure with access to these instance members.\n\n  let nodes;\n  let masses;\n  let strength = 1;\n  let iterations = 1;\n\n  let sizes;\n  let size = constant([0, 0]);\n\n  // Given a node, return the center point along the x-axis.\n  function xCenter(d) {\n    return d.x + d.vx + sizes[d.index][0] / 2;\n  }\n\n  // Given a node, return the center point along the y-axis.\n  function yCenter(d) {\n    return d.y + d.vy + sizes[d.index][1] / 2;\n  }\n\n  // Given a quadtree node, initialize its .size property.\n  function prepare(quad) {\n    if (quad.data) {\n      // This is a leaf node, so we set quad.size to the node's size.\n      // (No need to compute the max of internal nodes,\n      // since leaf nodes do not have any internal nodes).\n      quad.size = sizes[quad.data.index];\n    } else {\n      quad.size = [0, 0];\n      // Internal nodes of the quadtree are represented\n      // as four-element arrays in left-to-right, top-to-bottom order.\n      // Here, we are setting quad.size to [maxWidth, maxHeight]\n      // among the internal nodes of this current `quad` node.\n      for (let i = 0; i < 4; i++) {\n        if (quad[i] && quad[i].size) {\n          quad.size[0] = Math.max(quad.size[0], quad[i].size[0]);\n          quad.size[1] = Math.max(quad.size[1], quad[i].size[1]);\n        }\n      }\n    }\n  }\n\n  function force() {\n    let node;\n    let nodeSize;\n    let nodeMass;\n    let xi;\n    let yi;\n\n    // Create a quadtree based on node center points.\n    // Initialize each quadtree node's .size property by calling\n    // the prepare() function on each quadtree node.\n    const tree = quadtree(nodes, xCenter, yCenter).visitAfter(prepare);\n\n    // Update the .vx and .vy properties of both `node` and `data`\n    // (the current node pair).\n    function apply(quad, x0, y0, x1, y1) {\n      // `quad` is a quadtree node.\n      const { data } = quad;\n      const xSize = (nodeSize[0] + quad.size[0]) / 2;\n      const ySize = (nodeSize[1] + quad.size[1]) / 2;\n\n      if (data && data.index > node.index) {\n        // This is a leaf node because `data` is defined.\n        // `x` is the difference in x centers between `node` and `data`.\n        // `y` is the difference in y centers between `node` and `data`.\n        let x = jiggle(xi - xCenter(data));\n        let y = jiggle(yi - yCenter(data));\n        const xd = Math.abs(x) - xSize;\n        const yd = Math.abs(y) - ySize;\n\n        // If `xd` and `yd` is less than zero,\n        // then there is an overlap between the two nodes.\n        if (xd < 0 && yd < 0) {\n          const l = Math.sqrt(x * x + y * y);\n          const m = masses[data.index] / (nodeMass + masses[data.index]);\n\n          // We move the nodes either in the x or y direction.\n          // Nodes are moved proportionally to:\n          // their distance apart (`l`), their amount of overlap (`xd` or `yd`), their masses (`m`),\n          // and the strength parameter (`strength`).\n          if (Math.abs(xd) < Math.abs(yd)) {\n            node.vx -= (x *= xd / l * strength) * m;\n            data.vx += x * (1 - m);\n          } else {\n            node.vy -= (y *= yd / l * strength) * m;\n            data.vy += y * (1 - m);\n          }\n        }\n        // When the quadtree.visit callback returns _true_ for a node,\n        // then the node's children will _not_ be visited.\n        return x0 > xi + xSize || x1 < xi - xSize || y0 > yi + ySize || y1 < yi - ySize;\n      }\n      return false;\n    }\n\n    function iterate() {\n      // On every iteration, use the `apply` function to visit every node\n      // which has an index greater than the current node's index,\n      // (visiting every node pair).\n      for (let j = 0; j < nodes.length; j++) {\n        node = nodes[j];\n        nodeSize = sizes[j];\n        nodeMass = masses[j];\n        xi = xCenter(node);\n        yi = yCenter(node);\n\n        tree.visit(apply);\n      }\n    }\n\n    // Do the specified number of iterations.\n    for (let i = 0; i < iterations; i++) {\n      iterate();\n    }\n  }\n\n  // The \"constructor\".\n  // Takes a list of nodes as input.\n  force.initialize = (v) => {\n    nodes = v;\n    // Get the size [w, h] of each node using the size getter function.\n    sizes = nodes.map(size);\n    // Get the mass of each node,\n    // which is the sum of its horizontal and vertical edge lengths.\n    masses = sizes.map(d => d[0] + d[1]);\n  };\n\n  // Set the number of iterations.\n  // If no value is provided as a parameter, this acts as a getter function.\n  force.iterations = (...v) => {\n    if (v.length) {\n      iterations = +v[0];\n      return force;\n    }\n    return iterations;\n  };\n\n  // Set the strength value.\n  // If no value is provided as a parameter, this acts as a getter function.\n  force.strength = (...v) => {\n    if (v.length) {\n      strength = +v[0];\n      return force;\n    }\n    return strength;\n  };\n\n  // Set the size function.\n  // The size function takes a node as a parameter and returns its size.\n  // If no size function is provided as a parameter, this acts as a getter function.\n  force.size = (...v) => {\n    if (v.length) {\n      size = (typeof v[0] === 'function' ? v[0] : constant(v[0]));\n      return force;\n    }\n    return size;\n  };\n\n  // Returns the force closure.\n  return force;\n}\n","import React, { forwardRef } from 'react';\nimport { PolygonLayer, TextLayer } from '@deck.gl/layers'; // eslint-disable-line import/no-extraneous-dependencies\nimport { forceSimulation } from 'd3-force';\nimport { SelectableScatterplotLayer, getSelectionLayers } from '../../layers';\nimport { cellLayerDefaultProps, DEFAULT_COLOR } from '../utils';\nimport {\n  createCellsQuadTree,\n} from '../shared-spatial-scatterplot/quadtree';\nimport AbstractSpatialOrScatterplot from '../shared-spatial-scatterplot/AbstractSpatialOrScatterplot';\nimport { forceCollideRects } from '../shared-spatial-scatterplot/force-collide-rects';\n\nconst CELLS_LAYER_ID = 'scatterplot';\nconst LABEL_FONT_FAMILY = \"-apple-system, 'Helvetica Neue', Arial, sans-serif\";\nconst NUM_FORCE_SIMULATION_TICKS = 100;\nconst LABEL_UPDATE_ZOOM_DELTA = 0.25;\n\n// Default getter function props.\nconst makeDefaultGetCellPosition = mapping => (cellEntry) => {\n  const { mappings } = cellEntry[1];\n  if (!(mapping in mappings)) {\n    const available = Object.keys(mappings).map(s => `\"${s}\"`).join(', ');\n    throw new Error(`Expected to find \"${mapping}\", but available mappings are: ${available}`);\n  }\n  const mappedCell = mappings[mapping];\n  // The negative applied to the y-axis is because\n  // graphics rendering has the y-axis positive going south.\n  return [mappedCell[0], -mappedCell[1], 0];\n};\nconst makeDefaultGetCellCoords = mapping => cell => cell.mappings[mapping];\nconst makeDefaultGetCellColors = cellColors => cellEntry => (\n  cellColors && cellColors.get(cellEntry[0])\n) || DEFAULT_COLOR;\nconst makeDefaultGetCellIsSelected = cellSelection => cellEntry => (\n  cellSelection\n    ? cellSelection.includes(cellEntry[0])\n    : true // If nothing is selected, everything is selected.\n);\n\n/**\n * React component which renders a scatterplot from cell data, typically tSNE or PCA.\n * @param {object} props\n * @param {string} props.uuid A unique identifier for this component.\n * @param {string} props.theme The current vitessce theme.\n * @param {object} props.viewState The deck.gl view state.\n * @param {function} props.setViewState Function to call to update the deck.gl view state.\n * @param {object} props.cells\n * @param {string} props.mapping The name of the coordinate mapping field,\n * for each cell, for example \"PCA\" or \"t-SNE\".\n * @param {Map} props.cellColors Mapping of cell IDs to colors.\n * @param {array} props.cellSelection Array of selected cell IDs.\n * @param {array} props.cellFilter Array of filtered cell IDs. By default, null.\n * @param {number} props.cellRadiusScale The value for `radiusScale` to pass\n * to the deck.gl cells ScatterplotLayer.\n * @param {number} props.cellOpacity The value for `opacity` to pass\n * to the deck.gl cells ScatterplotLayer.\n * @param {function} props.getCellCoords Getter function for cell coordinates\n * (used by the selection layer).\n * @param {function} props.getCellPosition Getter function for cell [x, y, z] position.\n * @param {function} props.getCellColor Getter function for cell color as [r, g, b] array.\n * @param {function} props.getCellIsSelected Getter function for cell layer isSelected.\n * @param {function} props.setCellSelection\n * @param {function} props.setCellHighlight\n * @param {function} props.updateViewInfo\n * @param {function} props.onToolChange Callback for tool changes\n * (lasso/pan/rectangle selection tools).\n * @param {function} props.onCellClick Getter function for cell layer onClick.\n */\nclass Scatterplot extends AbstractSpatialOrScatterplot {\n  constructor(props) {\n    super(props);\n\n    // To avoid storing large arrays/objects\n    // in React state, this component\n    // uses instance variables.\n    // All instance variables used in this class:\n    this.cellsEntries = [];\n    this.cellsQuadTree = null;\n    this.cellsLayer = null;\n    this.cellSetsForceSimulation = forceCollideRects();\n    this.cellSetsLabelPrevZoom = null;\n    this.cellSetsLayers = [];\n\n    // Initialize data and layers.\n    this.onUpdateCellsData();\n    this.onUpdateCellsLayer();\n    this.onUpdateCellSetsLayers();\n  }\n\n  createCellsLayer() {\n    const { cellsEntries } = this;\n    const {\n      theme,\n      mapping,\n      getCellPosition = makeDefaultGetCellPosition(mapping),\n      cellRadiusScale = 0.2,\n      cellOpacity = 1.0,\n      cellFilter,\n      cellSelection,\n      setCellHighlight,\n      setComponentHover,\n      getCellIsSelected = makeDefaultGetCellIsSelected(\n        cellsEntries.length === cellSelection.length ? null : cellSelection,\n      ),\n      cellColors,\n      getCellColor = makeDefaultGetCellColors(cellColors),\n      onCellClick,\n    } = this.props;\n    const filteredCellsEntries = (cellFilter\n      ? cellsEntries.filter(cellEntry => cellFilter.includes(cellEntry[0]))\n      : cellsEntries);\n\n    return new SelectableScatterplotLayer({\n      id: CELLS_LAYER_ID,\n      backgroundColor: (theme === 'dark' ? [0, 0, 0] : [241, 241, 241]),\n      isSelected: getCellIsSelected,\n      opacity: cellOpacity,\n      radiusScale: cellRadiusScale,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 10,\n      getPosition: getCellPosition,\n      getColor: getCellColor,\n      getLineWidth: 0,\n      onClick: (info) => {\n        if (onCellClick) {\n          onCellClick(info);\n        }\n      },\n      ...cellLayerDefaultProps(\n        filteredCellsEntries, undefined, setCellHighlight, setComponentHover,\n      ),\n    });\n  }\n\n  createCellSetsLayers() {\n    const {\n      theme,\n      cellSetPolygons,\n      viewState,\n      cellSetPolygonsVisible,\n      cellSetLabelsVisible,\n      cellSetLabelSize,\n    } = this.props;\n\n    const result = [];\n\n    if (cellSetPolygonsVisible) {\n      result.push(new PolygonLayer({\n        id: 'cell-sets-polygon-layer',\n        data: cellSetPolygons,\n        stroked: true,\n        filled: false,\n        wireframe: true,\n        lineWidthMaxPixels: 1,\n        getPolygon: d => d.hull,\n        getLineColor: d => d.color,\n        getLineWidth: 1,\n      }));\n    }\n\n    if (cellSetLabelsVisible) {\n      const { zoom } = viewState;\n      const nodes = cellSetPolygons.map(p => ({\n        x: p.centroid[0],\n        y: p.centroid[1],\n        label: p.name,\n      }));\n\n      const collisionForce = this.cellSetsForceSimulation\n        .size(d => ([\n          cellSetLabelSize * 1 / (2 ** zoom) * 4 * d.label.length,\n          cellSetLabelSize * 1 / (2 ** zoom) * 1.5,\n        ]));\n\n      forceSimulation()\n        .nodes(nodes)\n        .force('collision', collisionForce)\n        .tick(NUM_FORCE_SIMULATION_TICKS);\n\n      result.push(new TextLayer({\n        id: 'cell-sets-text-layer',\n        data: nodes,\n        getPosition: d => ([d.x, d.y]),\n        getText: d => d.label,\n        getColor: (theme === 'dark' ? [255, 255, 255] : [0, 0, 0]),\n        getSize: cellSetLabelSize,\n        getAngle: 0,\n        getTextAnchor: 'middle',\n        getAlignmentBaseline: 'center',\n        fontFamily: LABEL_FONT_FAMILY,\n        fontWeight: 'normal',\n      }));\n    }\n\n    return result;\n  }\n\n  createSelectionLayers() {\n    const {\n      viewState,\n      mapping,\n      getCellCoords = makeDefaultGetCellCoords(mapping),\n      setCellSelection,\n    } = this.props;\n    const { tool } = this.state;\n    const { cellsQuadTree } = this;\n    const flipYTooltip = true;\n    return getSelectionLayers(\n      tool,\n      viewState.zoom,\n      CELLS_LAYER_ID,\n      getCellCoords,\n      setCellSelection,\n      cellsQuadTree,\n      flipYTooltip,\n    );\n  }\n\n  getLayers() {\n    const {\n      cellsLayer,\n      cellSetsLayers,\n    } = this;\n    return [\n      cellsLayer,\n      ...cellSetsLayers,\n      ...this.createSelectionLayers(),\n    ];\n  }\n\n  onUpdateCellsData() {\n    const {\n      cells = {},\n      mapping,\n      getCellCoords = makeDefaultGetCellCoords(mapping),\n    } = this.props;\n    const cellsEntries = Object.entries(cells);\n    this.cellsEntries = cellsEntries;\n    this.cellsQuadTree = createCellsQuadTree(cellsEntries, getCellCoords);\n  }\n\n  onUpdateCellsLayer() {\n    this.cellsLayer = this.createCellsLayer();\n  }\n\n  onUpdateCellSetsLayers(onlyViewStateChange) {\n    // Because the label sizes for the force simulation depend on the zoom level,\n    // we _could_ run the simulation every time the zoom level changes.\n    // However, this has a performance impact in firefox.\n    if (onlyViewStateChange) {\n      const { viewState, cellSetLabelsVisible } = this.props;\n      const { zoom } = viewState;\n      const { cellSetsLabelPrevZoom } = this;\n      // Instead, we can just check if the zoom level has changed\n      // by some relatively large delta, to be more conservative\n      // about re-running the force simulation.\n      if (cellSetLabelsVisible\n        && (\n          cellSetsLabelPrevZoom === null\n          || Math.abs(cellSetsLabelPrevZoom - zoom) > LABEL_UPDATE_ZOOM_DELTA\n        )\n      ) {\n        this.cellSetsLayers = this.createCellSetsLayers();\n        this.cellSetsLabelPrevZoom = zoom;\n      }\n    } else {\n      // Otherwise, something more substantial than just\n      // the viewState has changed, such as the label array\n      // itself, so we always want to update the layer\n      // in this case.\n      this.cellSetsLayers = this.createCellSetsLayers();\n    }\n  }\n\n  viewInfoDidUpdate() {\n    const {\n      mapping,\n      getCellPosition = makeDefaultGetCellPosition(mapping),\n    } = this.props;\n    super.viewInfoDidUpdate(cell => getCellPosition([null, cell]));\n  }\n\n  /**\n   * Here, asynchronously check whether props have\n   * updated which require re-computing memoized variables,\n   * followed by a re-render.\n   * This function does not follow React conventions or paradigms,\n   * it is only implemented this way to try to squeeze out\n   * performance.\n   * @param {object} prevProps The previous props to diff against.\n   */\n  componentDidUpdate(prevProps) {\n    this.viewInfoDidUpdate();\n\n    const shallowDiff = propName => (prevProps[propName] !== this.props[propName]);\n    if (['cells'].some(shallowDiff)) {\n      // Cells data changed.\n      this.onUpdateCellsData();\n      this.forceUpdate();\n    }\n\n    if ([\n      'cells', 'cellFilter', 'cellSelection', 'cellColors', 'cellRadiusScale',\n    ].some(shallowDiff)) {\n      // Cells layer props changed.\n      this.onUpdateCellsLayer();\n      this.forceUpdate();\n    }\n    if ([\n      'cellSetPolygons', 'cellSetPolygonsVisible',\n      'cellSetLabelsVisible', 'cellSetLabelSize',\n    ].some(shallowDiff)) {\n      // Cell sets layer props changed.\n      this.onUpdateCellSetsLayers(false);\n      this.forceUpdate();\n    }\n    if (shallowDiff('viewState')) {\n      // The viewState prop has changed (due to zoom or pan).\n      this.onUpdateCellSetsLayers(true);\n      this.forceUpdate();\n    }\n  }\n\n  // render() is implemented in the abstract parent class.\n}\n\n/**\n * Need this wrapper function here,\n * since we want to pass a forwardRef\n * so that outer components can\n * access the grandchild DeckGL ref,\n * but we are using a class component.\n */\nconst ScatterplotWrapper = forwardRef((props, deckRef) => (\n  <Scatterplot\n    {...props}\n    deckRef={deckRef}\n  />\n));\nexport default ScatterplotWrapper;\n","import React, { useEffect, useRef } from 'react';\n\nexport default function Tooltip(props) {\n  const {\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n\n  const ref = useRef(null);\n  const isNarrow = (parentWidth < 500);\n  // Do collision detection based on the bounds of the tooltip ancestor element.\n  useEffect(() => {\n    const el = ref.current;\n    const offsetPercentage = isNarrow ? -5 : 10;\n    const translateX = (x > parentWidth / 2) ? -(100 + offsetPercentage) : offsetPercentage;\n    const translateY = (y > parentHeight / 2) ? -(100 + offsetPercentage) : offsetPercentage;\n    const scale = isNarrow ? 0.75 : 1.0;\n    el.style.transform = `translateX(${translateX}%) translateY(${translateY}%) scale(${scale})`;\n    el.style.whiteSpace = (isNarrow ? 'normal' : 'nowrap');\n  });\n\n  return (\n    <div\n      ref={ref}\n      className=\"cell-tooltip bg-primary\"\n      style={{\n        left: `${x}px`,\n        top: `${y}px`,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport Tooltip from './Tooltip';\n\n/**\n * A tooltip component that also incorporates a crosshair element.\n * @param {object} props\n * @param {string} props.parentUuid A unique identifier corresponding to the plot\n * with which this scatterplot is associated.\n * @param {string} props.sourceUuid A unique identifier corresponding to the plot\n * from which this tooltip originated.\n * @param {number} props.x The x coordinate for the tooltip.\n * @param {number} props.y The y coordinate for the tooltip.\n * @param {number} props.parentWidth The width of the parent plot container element.\n * @param {number} props.parentHeight The height of the parent plot container element.\n * @param {React.Component} props.children The tooltip contents as a react component.\n */\nexport default function Tooltip2D(props) {\n  const {\n    parentUuid,\n    sourceUuid,\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n  // Check if out of bounds.\n  if (x < 0 || x > parentWidth || y < 0 || y > parentHeight) {\n    return null;\n  }\n  // Show tooltip or crosshair?\n  const isTooltipVisible = (parentUuid === sourceUuid);\n  const crosshairWidth = 1;\n  return (\n    <>\n      {isTooltipVisible ? (\n        <Tooltip\n          x={x}\n          y={y}\n          parentWidth={parentWidth}\n          parentHeight={parentHeight}\n        >\n          {children}\n        </Tooltip>\n      ) : (\n        <>\n          {x !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: `${x - crosshairWidth / 2}px`,\n                top: 0,\n                width: `${crosshairWidth}px`,\n                height: `${parentHeight}px`,\n              }}\n            />\n          ) : null}\n          {y !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: 0,\n                top: `${y - crosshairWidth / 2}px`,\n                width: `${parentWidth}px`,\n                height: `${crosshairWidth}px`,\n              }}\n            />\n          ) : null}\n        </>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function TooltipContent(props) {\n  const {\n    info,\n  } = props;\n\n  return (\n    <table>\n      <tbody>\n        {Object.entries(info).map(([key, value]) => (\n          <tr key={key}>\n            <th>{key}</th>\n            <td>{value}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function ScatterplotTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    cellHighlight,\n    width,\n    height,\n    getCellInfo,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, x, y] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      ...(viewInfo && viewInfo.project ? viewInfo.project(cellHighlight) : [null, null]),\n    ]\n  ) : ([null, null, null]));\n\n  return (\n    (cellInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        sourceUuid={sourceUuid}\n        parentWidth={width}\n        parentHeight={height}\n      >\n        <TooltipContent info={cellInfo} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  box: {\n    boxSizing: 'border-box',\n  },\n  checkbox: {\n    padding: '3px',\n    color: theme.palette.primaryForeground,\n    '&:checked': {\n      color: theme.palette.primaryForeground,\n    },\n    '& input': {\n      height: '100%',\n    },\n  },\n  slider: {\n    color: theme.palette.primaryForeground,\n    minWidth: '60px',\n    padding: '10px 0 6px 0',\n  },\n  sliderValueLabel: {\n    '& span': {\n      '& span': {\n        color: theme.palette.primaryBackground,\n      },\n    },\n  },\n  tableContainer: {\n    overflow: 'hidden',\n  },\n  labelCell: {\n    padding: '2px 8px 2px 16px',\n  },\n  inputCell: {\n    padding: '2px 16px 2px 8px',\n    overflow: 'visible',\n  },\n  select: {\n    '& select': {\n      fontSize: '.875rem',\n    },\n  },\n}));\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport { useStyles } from './styles';\n\nexport default function OptionsContainer(props) {\n  const {\n    children,\n  } = props;\n\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.box}>\n      <TableContainer className={classes.tableContainer}>\n        <Table className={classes.table} size=\"small\">\n          <TableBody>\n            {children}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from './styles';\n\nexport default function CellColorEncodingOption(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n  } = props;\n\n  const classes = useStyles();\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  function handleColorEncodingChange(event) {\n    setCellColorEncoding(event.target.value);\n  }\n\n  return (\n    <TableRow>\n      <TableCell className={classes.labelCell} htmlFor=\"cell-color-encoding-select\">\n        {observationsLabelNice} Color Encoding\n      </TableCell>\n      <TableCell className={classes.inputCell}>\n        <Select\n          native\n          className={classes.select}\n          value={cellColorEncoding}\n          onChange={handleColorEncodingChange}\n          inputProps={{\n            id: 'cell-color-encoding-select',\n          }}\n        >\n          <option value=\"cellSetSelection\">Cell Sets</option>\n          <option value=\"geneSelection\">Gene Expression</option>\n        </Select>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\n\nexport default function ScatterplotOptions(props) {\n  const {\n    observationsLabel,\n    cellRadius,\n    setCellRadius,\n    cellSetLabelsVisible,\n    setCellSetLabelsVisible,\n    cellSetLabelSize,\n    setCellSetLabelSize,\n    cellSetPolygonsVisible,\n    setCellSetPolygonsVisible,\n    cellColorEncoding,\n    setCellColorEncoding,\n  } = props;\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  const classes = useStyles();\n\n  function handleRadiusChange(event, value) {\n    setCellRadius(value);\n  }\n\n  function handleLabelVisibilityChange(event) {\n    setCellSetLabelsVisible(event.target.checked);\n  }\n\n  function handleLabelSizeChange(event, value) {\n    setCellSetLabelSize(value);\n  }\n\n  function handlePolygonVisibilityChange(event) {\n    setCellSetPolygonsVisible(event.target.checked);\n  }\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Labels Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetLabelsVisible}\n            onChange={handleLabelVisibilityChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Label Size\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={!cellSetLabelsVisible}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellSetLabelSize}\n            onChange={handleLabelSizeChange}\n            aria-labelledby=\"cell-set-label-size-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={8}\n            max={36}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Polygons Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetPolygonsVisible}\n            onChange={handlePolygonVisibilityChange}\n            name=\"scatterplot-option-cell-set-polygons\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Radius\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellRadius}\n            onChange={handleRadiusChange}\n            aria-labelledby=\"cell-radius-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.25}\n            min={0.25}\n            max={8}\n          />\n        </TableCell>\n      </TableRow>\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n    </OptionsContainer>\n  );\n}\n","import React, {\n  useState, useEffect, useCallback, useMemo,\n} from 'react';\nimport { extent } from 'd3-array';\nimport clamp from 'lodash/clamp';\nimport isEqual from 'lodash/isEqual';\nimport TitleInfo from '../TitleInfo';\nimport { pluralize, capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { setCellSelection, mergeCellSets } from '../utils';\nimport { getCellSetPolygons } from '../sets/cell-set-utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useGeneSelection,\n  useExpressionAttrs,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport Scatterplot from './Scatterplot';\nimport ScatterplotTooltipSubscriber from './ScatterplotTooltipSubscriber';\nimport ScatterplotOptions from './ScatterplotOptions';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetComponentHover,\n  useSetComponentViewInfo,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst SCATTERPLOT_DATA_TYPES = ['cells', 'expression-matrix', 'cell-sets'];\n\n/**\n * A subscriber component for the scatterplot.\n * @param {object} props\n * @param {number} props.uuid The unique identifier for this component.\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {boolean} props.disableTooltip Should the tooltip be disabled?\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title An override value for the component title.\n */\nexport default function ScatterplotSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    disableTooltip = false,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    title: titleOverride,\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    embeddingZoom: zoom,\n    embeddingTargetX: targetX,\n    embeddingTargetY: targetY,\n    embeddingTargetZ: targetZ,\n    embeddingType: mapping,\n    cellFilter,\n    cellHighlight,\n    geneSelection,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    embeddingCellSetPolygonsVisible: cellSetPolygonsVisible,\n    embeddingCellSetLabelsVisible: cellSetLabelsVisible,\n    embeddingCellSetLabelSize: cellSetLabelSize,\n    embeddingCellRadius: cellRadius,\n  }, {\n    setEmbeddingZoom: setZoom,\n    setEmbeddingTargetX: setTargetX,\n    setEmbeddingTargetY: setTargetY,\n    setEmbeddingTargetZ: setTargetZ,\n    setCellFilter,\n    setCellSetSelection,\n    setCellHighlight,\n    setCellSetColor,\n    setCellColorEncoding,\n    setAdditionalCellSets,\n    setEmbeddingCellSetPolygonsVisible: setCellSetPolygonsVisible,\n    setEmbeddingCellSetLabelsVisible: setCellSetLabelsVisible,\n    setEmbeddingCellSetLabelSize: setCellSetLabelSize,\n    setEmbeddingCellRadius: setCellRadius,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.scatterplot, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [width, height, deckRef] = useDeckCanvasSize();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    SCATTERPLOT_DATA_TYPES,\n  );\n\n  const title = titleOverride || `Scatterplot (${mapping})`;\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells, cellsCount] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [cellSets] = useCellSetsData(\n    loaders,\n    dataset,\n    setItemIsReady,\n    addUrl,\n    false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  const [cellRadiusScale, setCellRadiusScale] = useState(0.2);\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const setCellSelectionProp = useCallback((v) => {\n    setCellSelection(\n      v, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n    );\n  }, [additionalCellSets, cellSetColor, setCellColorEncoding,\n    setAdditionalCellSets, setCellSetColor, setCellSetSelection]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: attrs,\n  }), [cellColorEncoding, geneSelection, mergedCellSets,\n    cellSetSelection, cellSetColor, expressionData, attrs]);\n\n  // cellSetPolygonCache is an array of tuples like [(key0, val0), (key1, val1), ...],\n  // where the keys are cellSetSelection arrays.\n  const [cellSetPolygonCache, setCellSetPolygonCache] = useState([]);\n  const cacheHas = (cache, key) => cache.findIndex(el => isEqual(el[0], key)) !== -1;\n  const cacheGet = (cache, key) => cache.find(el => isEqual(el[0], key))?.[1];\n  const cellSetPolygons = useMemo(() => {\n    if ((cellSetLabelsVisible || cellSetPolygonsVisible)\n      && !cacheHas(cellSetPolygonCache, cellSetSelection)\n      && mergedCellSets?.tree?.length\n      && Object.values(cells).length\n      && cellSetColor?.length) {\n      const newCellSetPolygons = getCellSetPolygons({\n        cells,\n        mapping,\n        cellSets: mergedCellSets,\n        cellSetSelection,\n        cellSetColor,\n      });\n      setCellSetPolygonCache(cache => [...cache, [cellSetSelection, newCellSetPolygons]]);\n      return newCellSetPolygons;\n    }\n    return cacheGet(cellSetPolygonCache, cellSetSelection) || [];\n  }, [cellSetPolygonsVisible, cellSetPolygonCache, cellSetLabelsVisible,\n    cells, mapping, mergedCellSets, cellSetSelection, cellSetColor]);\n\n\n  const cellSelection = useMemo(() => Array.from(cellColors.keys()), [cellColors]);\n\n  // After cells have loaded or changed,\n  // compute the cell radius scale based on the\n  // extents of the cell coordinates on the x/y axes.\n  useEffect(() => {\n    const cellValues = cells && Object.values(cells);\n    if (cellValues?.length) {\n      const cellCoordinates = Object.values(cells)\n        .map(c => c.mappings[mapping]);\n      const xExtent = extent(cellCoordinates, c => c[0]);\n      const yExtent = extent(cellCoordinates, c => c[1]);\n      const xRange = xExtent[1] - xExtent[0];\n      const yRange = yExtent[1] - yExtent[0];\n      const diagonalLength = Math.sqrt((xRange ** 2) + (yRange ** 2));\n      // The 300 value here is a heuristic.\n      const newScale = clamp(diagonalLength / 300, 0, 0.2);\n      if (newScale) {\n        setCellRadiusScale(newScale);\n      } if (typeof targetX !== 'number' || typeof targetY !== 'number') {\n        const newTargetX = xExtent[0] + xRange / 2;\n        const newTargetY = yExtent[0] + yRange / 2;\n        const newZoom = Math.log2(Math.min(width / xRange, height / yRange));\n        setTargetX(newTargetX);\n        // Graphics rendering has the y-axis going south so we need to multiply by negative one.\n        setTargetY(-newTargetY);\n        setZoom(newZoom);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cells, mapping]);\n\n  const getCellInfo = useCallback((cellId) => {\n    const cellInfo = cells[cellId];\n    return {\n      [`${capitalize(observationsLabel)} ID`]: cellId,\n      ...(cellInfo ? cellInfo.factors : {}),\n    };\n  }, [cells, observationsLabel]);\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${cellsCount} ${pluralize(observationsLabel, observationsPluralLabel, cellsCount)}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n      options={(\n        <ScatterplotOptions\n          observationsLabel={observationsLabel}\n          cellRadius={cellRadius}\n          setCellRadius={setCellRadius}\n          cellSetLabelsVisible={cellSetLabelsVisible}\n          setCellSetLabelsVisible={setCellSetLabelsVisible}\n          cellSetLabelSize={cellSetLabelSize}\n          setCellSetLabelSize={setCellSetLabelSize}\n          cellSetPolygonsVisible={cellSetPolygonsVisible}\n          setCellSetPolygonsVisible={setCellSetPolygonsVisible}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n        />\n      )}\n    >\n      <Scatterplot\n        ref={deckRef}\n        uuid={uuid}\n        theme={theme}\n        viewState={{ zoom, target: [targetX, targetY, targetZ] }}\n        setViewState={({ zoom: newZoom, target }) => {\n          setZoom(newZoom);\n          setTargetX(target[0]);\n          setTargetY(target[1]);\n          setTargetZ(target[2]);\n        }}\n        cells={cells}\n        mapping={mapping}\n        cellFilter={cellFilter}\n        cellSelection={cellSelection}\n        cellHighlight={cellHighlight}\n        cellColors={cellColors}\n        cellSetPolygons={cellSetPolygons}\n\n        cellSetLabelSize={cellSetLabelSize}\n        cellSetLabelsVisible={cellSetLabelsVisible}\n        cellSetPolygonsVisible={cellSetPolygonsVisible}\n\n        setCellFilter={setCellFilter}\n        setCellSelection={setCellSelectionProp}\n        setCellHighlight={setCellHighlight}\n        cellRadiusScale={cellRadiusScale * cellRadius}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n      />\n      {!disableTooltip && (\n      <ScatterplotTooltipSubscriber\n        parentUuid={uuid}\n        cellHighlight={cellHighlight}\n        width={width}\n        height={height}\n        getCellInfo={getCellInfo}\n      />\n      )}\n    </TitleInfo>\n  );\n}\n","import React, { forwardRef } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { ScatterplotLayer, PolygonLayer, COORDINATE_SYSTEM } from 'deck.gl';\nimport { Matrix4 } from 'math.gl';\nimport { ScaleBarLayer, MultiscaleImageLayer } from '@hms-dbmi/viv';\nimport { SelectablePolygonLayer, getSelectionLayers } from '../../layers';\nimport { cellLayerDefaultProps, PALETTE, DEFAULT_COLOR } from '../utils';\nimport { getSourceFromLoader } from '../../utils';\nimport { square, getLayerLoaderTuple, renderSubBitmaskLayers } from './utils';\nimport AbstractSpatialOrScatterplot from '../shared-spatial-scatterplot/AbstractSpatialOrScatterplot';\nimport {\n  createCellsQuadTree,\n} from '../shared-spatial-scatterplot/quadtree';\n\nconst CELLS_LAYER_ID = 'cells-layer';\nconst MOLECULES_LAYER_ID = 'molecules-layer';\nconst NEIGHBORHOODS_LAYER_ID = 'neighborhoods-layer';\n\n// Default getter function props.\nconst defaultGetCellCoords = cell => cell.xy;\nconst makeDefaultGetCellPolygon = radius => (cellEntry) => {\n  const cell = cellEntry[1];\n  return cell.poly?.length ? cell.poly : square(cell.xy[0], cell.xy[1], radius);\n};\nconst makeDefaultGetCellColors = cellColors => cellEntry => (\n  cellColors && cellColors.get(cellEntry[0])\n) || DEFAULT_COLOR;\nconst makeDefaultGetCellIsSelected = cellSelection => cellEntry => (\n  cellSelection\n    ? cellSelection.includes(cellEntry[0])\n    : true // If nothing is selected, everything is selected.\n);\n\n/**\n * React component which expresses the spatial relationships between cells and molecules.\n * @param {object} props\n * @param {string} props.uuid A unique identifier for this component,\n * used to determine when to show tooltips vs. crosshairs.\n * @param {number} props.height Height of the DeckGL canvas, used when\n * rendering the scale bar layer.\n * @param {number} props.width Width of the DeckGL canvas, used when\n * rendering the scale bar layer.\n * @param {object} props.viewState The DeckGL viewState object.\n * @param {function} props.setViewState A handler for updating the DeckGL\n * viewState object.\n * @param {object} props.molecules Molecules data.\n * @param {object} props.cells Cells data.\n * @param {object} props.neighborhoods Neighborhoods data.\n * @param {number} props.lineWidthScale Width of cell border in view space (deck.gl).\n * @param {number} props.lineWidthMaxPixels Max width of the cell border in pixels (deck.gl).\n * @param {object} props.imageLayerLoaders An object mapping raster layer index to Viv loader\n * instances.\n * @param {object} props.cellColors Map from cell IDs to colors [r, g, b].\n * @param {function} props.getCellCoords Getter function for cell coordinates\n * (used by the selection layer).\n * @param {function} props.getCellColor Getter function for cell color as [r, g, b] array.\n * @param {function} props.getCellPolygon Getter function for cell polygons.\n * @param {function} props.getCellIsSelected Getter function for cell layer isSelected.\n * @param {function} props.getMoleculeColor\n * @param {function} props.getMoleculePosition\n * @param {function} props.getNeighborhoodPolygon\n * @param {function} props.updateViewInfo Handler for DeckGL viewport updates,\n * used when rendering tooltips and crosshairs.\n * @param {function} props.onCellClick Getter function for cell layer onClick.\n */\nclass Spatial extends AbstractSpatialOrScatterplot {\n  constructor(props) {\n    super(props);\n\n    // To avoid storing large arrays/objects\n    // in React state, this component\n    // uses instance variables.\n    // All instance variables used in this class:\n    this.cellsEntries = [];\n    this.moleculesEntries = [];\n    this.cellsQuadTree = null;\n    this.cellsLayer = null;\n    this.moleculesLayer = null;\n    this.neighborhoodsLayer = null;\n    this.imageLayers = [];\n    this.layerLoaderSelections = {};\n    // Better for the bitmask layer when there is no color data to use this.\n    // 2048 is best for performance and for stability (4096 texture size is not always supported).\n    this.randomColorData = {\n      data: new Uint8Array(2048 * 2048 * 3).map(\n        (_, j) => (j < 4 ? 0 : Math.round(255 * Math.random())),\n      ),\n      // This buffer should be able to hold colors for 2048 x 2048 ~ 4 million cells.\n      height: 2048,\n      width: 2048,\n    };\n    this.color = { ...this.randomColorData };\n\n    // Initialize data and layers.\n    this.onUpdateCellsData();\n    this.onUpdateCellsLayer();\n    this.onUpdateMoleculesData();\n    this.onUpdateMoleculesLayer();\n    this.onUpdateNeighborhoodsData();\n    this.onUpdateNeighborhoodsLayer();\n    this.onUpdateImages();\n  }\n\n  createCellsLayer(layerDef) {\n    const {\n      radius, stroked, visible, opacity,\n    } = layerDef;\n    const { cellsEntries } = this;\n    const {\n      cellFilter,\n      cellSelection,\n      setCellHighlight,\n      setComponentHover,\n      getCellIsSelected = makeDefaultGetCellIsSelected(\n        cellsEntries.length === cellSelection.length ? null : cellSelection,\n      ),\n      cellColors,\n      getCellColor = makeDefaultGetCellColors(cellColors),\n      getCellPolygon = makeDefaultGetCellPolygon(radius),\n      onCellClick,\n      lineWidthScale = 10,\n      lineWidthMaxPixels = 2,\n    } = this.props;\n    const filteredCellsEntries = (cellFilter\n      ? cellsEntries.filter(cellEntry => cellFilter.includes(cellEntry[0]))\n      : cellsEntries);\n\n    // Graphics rendering has the y-axis positive going south,\n    // so we need to flip it for rendering tooltips.\n    const flipYTooltip = true;\n\n    return new SelectablePolygonLayer({\n      id: CELLS_LAYER_ID,\n      backgroundColor: [0, 0, 0],\n      isSelected: getCellIsSelected,\n      getPolygon: getCellPolygon,\n      updateTriggers: {\n        getFillColor: [opacity],\n        getLineWidth: [stroked],\n      },\n      getFillColor: (cellEntry) => {\n        const color = getCellColor(cellEntry);\n        color[3] = opacity * 255;\n        return color;\n      },\n      getLineColor: (cellEntry) => {\n        const color = getCellColor(cellEntry);\n        color[3] = 255;\n        return color;\n      },\n      onClick: (info) => {\n        if (onCellClick) {\n          onCellClick(info);\n        }\n      },\n      visible,\n      getLineWidth: stroked ? 1 : 0,\n      lineWidthScale,\n      lineWidthMaxPixels,\n      ...cellLayerDefaultProps(\n        filteredCellsEntries, undefined, setCellHighlight,\n        setComponentHover, flipYTooltip,\n      ),\n    });\n  }\n\n  createMoleculesLayer(layerDef) {\n    const {\n      setMoleculeHighlight,\n      getMoleculeColor = d => PALETTE[d[2] % PALETTE.length],\n      getMoleculePosition = d => [d[0], d[1], 0],\n    } = this.props;\n    const { moleculesEntries } = this;\n\n    return new ScatterplotLayer({\n      id: MOLECULES_LAYER_ID,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: moleculesEntries,\n      pickable: true,\n      autoHighlight: true,\n      radiusMaxPixels: 3,\n      opacity: layerDef.opacity,\n      visible: layerDef.visible,\n      getRadius: layerDef.radius,\n      getPosition: getMoleculePosition,\n      getLineColor: getMoleculeColor,\n      getFillColor: getMoleculeColor,\n      onHover: (info) => {\n        if (setMoleculeHighlight) {\n          if (info.object) {\n            setMoleculeHighlight(info.object[3]);\n          } else {\n            setMoleculeHighlight(null);\n          }\n        }\n      },\n    });\n  }\n\n  createNeighborhoodsLayer(layerDef) {\n    const {\n      getNeighborhoodPolygon = (neighborhoodsEntry) => {\n        const neighborhood = neighborhoodsEntry[1];\n        return neighborhood.poly;\n      },\n    } = this.props;\n    const { neighborhoodsEntries } = this;\n\n    return new PolygonLayer({\n      id: NEIGHBORHOODS_LAYER_ID,\n      getPolygon: getNeighborhoodPolygon,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      data: neighborhoodsEntries,\n      pickable: true,\n      autoHighlight: true,\n      stroked: true,\n      filled: false,\n      getElevation: 0,\n      getLineWidth: 10,\n      visible: layerDef.visible,\n    });\n  }\n\n  createSelectionLayers() {\n    const { viewState, getCellCoords = defaultGetCellCoords, setCellSelection } = this.props;\n    const { tool } = this.state;\n    const { cellsQuadTree } = this;\n    return getSelectionLayers(\n      tool,\n      viewState.zoom,\n      CELLS_LAYER_ID,\n      getCellCoords,\n      setCellSelection,\n      cellsQuadTree,\n    );\n  }\n\n  createScaleBarLayer() {\n    const {\n      viewState, width, height, imageLayerLoaders = {}, layers,\n    } = this.props;\n    const use3d = (layers || []).some(i => i.use3d);\n    // Just get the first layer/loader since they should all be spatially\n    // resolved and therefore have the same unit size scale.\n    const loaders = Object.values(imageLayerLoaders);\n    if (!viewState || !width || !height || loaders.length < 1) return null;\n    const loader = loaders[0];\n    if (!loader) return null;\n    const source = getSourceFromLoader(loader);\n    if (!source.meta) return null;\n    const { physicalSizes } = source.meta;\n    if (physicalSizes && !use3d) {\n      const { x } = physicalSizes;\n      const { unit, size } = x;\n      if (unit && size) {\n        return new ScaleBarLayer({\n          id: 'scalebar-layer',\n          loader,\n          unit,\n          size,\n          viewState: { ...viewState, width, height },\n        });\n      }\n      return null;\n    }\n    return null;\n  }\n\n  createImageLayer(rawLayerDef, loader, i) {\n    const layerDef = {\n      ...rawLayerDef,\n      channels: rawLayerDef.channels\n        .filter(channel => channel.selection && channel.color && channel.slider),\n    };\n\n    // We need to keep the same loaderSelection array reference,\n    // otherwise the Viv layer will not be re-used as we want it to,\n    // since loaderSelection is one of its `updateTriggers`.\n    // Reference: https://github.com/hms-dbmi/viv/blob/ad86d0f/src/layers/MultiscaleImageLayer/MultiscaleImageLayer.js#L127\n    let loaderSelection;\n    const nextLoaderSelection = layerDef.channels.map(c => c.selection);\n    const prevLoaderSelection = this.layerLoaderSelections[layerDef.index];\n    if (isEqual(prevLoaderSelection, nextLoaderSelection)) {\n      loaderSelection = prevLoaderSelection;\n    } else {\n      loaderSelection = nextLoaderSelection;\n      this.layerLoaderSelections[layerDef.index] = nextLoaderSelection;\n    }\n    const layerProps = {\n      colormap: layerDef.colormap,\n      opacity: layerDef.opacity,\n      transparentColor: layerDef.transparentColor,\n      colors: layerDef.channels.map(c => c.color),\n      sliders: layerDef.channels.map(c => c.slider),\n      resolution: layerDef.resolution,\n      renderingMode: layerDef.renderingMode,\n      xSlice: layerDef.xSlice,\n      ySlice: layerDef.ySlice,\n      zSlice: layerDef.zSlice,\n      callback: layerDef.callback,\n      visibilities: layerDef.channels.map(\n        c => (!layerDef.visible && typeof layerDef.visible === 'boolean' ? false : c.visible),\n      ),\n    };\n\n    if (!loader || !layerProps) return null;\n    const { metadata: { transform }, data } = loader;\n    let modelMatrix;\n    if (transform) {\n      const { scale, translate } = transform;\n      modelMatrix = new Matrix4().translate([translate.x, translate.y, 0]).scale(scale);\n    } else if (layerDef.modelMatrix) {\n      // eslint-disable-next-line prefer-destructuring\n      modelMatrix = new Matrix4(layerDef.modelMatrix);\n    }\n    if (rawLayerDef.type === 'bitmask') {\n      return new MultiscaleImageLayer({\n        // `bitmask` is used by the AbstractSpatialOrScatterplot\n        // https://github.com/vitessce/vitessce/pull/927/files#diff-9cab35a2ca0c5b6d9754b177810d25079a30ca91efa062d5795181360bc3ff2cR111\n        id: `bitmask-layer-${layerDef.index}-${i}`,\n        channelIsOn: layerProps.visibilities,\n        opacity: layerProps.opacity,\n        modelMatrix,\n        hoveredCell: Number(this.props.cellHighlight),\n        renderSubLayers: renderSubBitmaskLayers,\n        loader: data,\n        loaderSelection,\n        // For some reason, deck.gl doesn't recognize the prop diffing\n        // unless these are separated out.  I don't think it's a bug, just\n        // has to do with the fact that we don't have it in the `defaultProps`,\n        // could be wrong though.\n        cellColorData: this.color.data,\n        cellColorHeight: this.color.height,\n        cellColorWidth: this.color.width,\n        excludeBackground: true,\n        onViewportLoad: layerProps.callback,\n      });\n    }\n    const [Layer, layerLoader] = getLayerLoaderTuple(\n      data,\n      layerDef.use3d,\n    );\n\n    return new Layer({\n      loader: layerLoader,\n      id: `${layerDef.use3d ? 'volume' : 'image'}-layer-${\n        layerDef.index\n      }-${i}`,\n      colorValues: layerProps.colors,\n      sliderValues: layerProps.sliders,\n      loaderSelection,\n      channelIsOn: layerProps.visibilities,\n      opacity: layerProps.opacity,\n      colormap: layerProps.colormap,\n      modelMatrix,\n      transparentColor: layerProps.transparentColor,\n      resolution: layerProps.resolution,\n      renderingMode: layerProps.renderingMode,\n      pickable: false,\n      xSlice: layerProps.xSlice,\n      ySlice: layerProps.ySlice,\n      zSlice: layerProps.zSlice,\n      onViewportLoad: layerProps.callback,\n    });\n  }\n\n  createImageLayers() {\n    const { layers, imageLayerLoaders = {}, rasterLayersCallbacks = [] } = this.props;\n    const use3d = (layers || []).some(i => i.use3d);\n    const use3dIndex = (layers || []).findIndex(i => i.use3d);\n    return (layers || [])\n      .filter(layer => (layer.type === 'raster' || layer.type === 'bitmask'))\n      .filter(layer => (use3d ? layer.use3d === use3d : true))\n      .map((layer, i) => this.createImageLayer(\n        { ...layer, callback: rasterLayersCallbacks[use3d ? use3dIndex : i] },\n        imageLayerLoaders[layer.index], i,\n      ));\n  }\n\n  getLayers() {\n    const {\n      imageLayers,\n      cellsLayer,\n      neighborhoodsLayer,\n      moleculesLayer,\n    } = this;\n    return [\n      ...imageLayers,\n      cellsLayer,\n      neighborhoodsLayer,\n      moleculesLayer,\n      this.createScaleBarLayer(),\n      ...this.createSelectionLayers(),\n    ];\n  }\n\n  onUpdateCellsData() {\n    const {\n      cells = {},\n      getCellCoords = defaultGetCellCoords,\n    } = this.props;\n    const cellsEntries = Object.entries(cells);\n    this.cellsEntries = cellsEntries;\n    this.cellsQuadTree = createCellsQuadTree(cellsEntries, getCellCoords);\n  }\n\n  onUpdateCellsLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'cells');\n    if (layerDef) {\n      this.cellsLayer = this.createCellsLayer(layerDef);\n    } else {\n      this.cellsLayer = null;\n    }\n  }\n\n  onUpdateCellColors() {\n    const color = this.randomColorData;\n    const { size } = this.props.cellColors;\n    if (typeof size === 'number') {\n      const cellIds = this.props.cellColors.keys();\n      color.data = new Uint8Array(color.height * color.width * 3).fill(128);\n      // 0th cell id is the empty space of the image i.e black color.\n      color.data[0] = 0;\n      color.data[1] = 0;\n      color.data[2] = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      for (const id of cellIds) {\n        if (id > 0) {\n          const cellColor = this.props.cellColors.get(id);\n          if (cellColor) {\n            color.data.set(cellColor.slice(0, 3), Number(id) * 3);\n          }\n        }\n      }\n    }\n    this.color = color;\n  }\n\n  onUpdateMoleculesData() {\n    const { molecules = {} } = this.props;\n    const moleculesEntries = Object\n      .entries(molecules)\n      .flatMap(([molecule, coords], index) => coords.map(([x, y]) => [\n        x, y, index, molecule,\n      ]));\n    this.moleculesEntries = moleculesEntries;\n  }\n\n  onUpdateMoleculesLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'molecules');\n    if (layerDef) {\n      this.moleculesLayer = this.createMoleculesLayer(layerDef);\n    } else {\n      this.moleculesLayer = null;\n    }\n  }\n\n  onUpdateNeighborhoodsData() {\n    const { neighborhoods = {} } = this.props;\n    const neighborhoodsEntries = Object\n      .entries(neighborhoods);\n    this.neighborhoodsEntries = neighborhoodsEntries;\n  }\n\n  onUpdateNeighborhoodsLayer() {\n    const { layers } = this.props;\n    const layerDef = (layers || []).find(layer => layer.type === 'neighborhoods');\n    if (layerDef) {\n      this.neighborhoodsLayer = this.createNeighborhoodsLayer(layerDef);\n    } else {\n      this.neighborhoodsLayer = null;\n    }\n  }\n\n  onUpdateImages() {\n    this.imageLayers = this.createImageLayers();\n  }\n\n  viewInfoDidUpdate() {\n    const { getCellCoords = defaultGetCellCoords } = this.props;\n    super.viewInfoDidUpdate(getCellCoords);\n  }\n\n  /**\n   * Here, asynchronously check whether props have\n   * updated which require re-computing memoized variables,\n   * followed by a re-render.\n   * This function does not follow React conventions or paradigms,\n   * it is only implemented this way to try to squeeze out\n   * performance.\n   * @param {object} prevProps The previous props to diff against.\n   */\n  componentDidUpdate(prevProps) {\n    this.viewInfoDidUpdate();\n\n    const shallowDiff = propName => (prevProps[propName] !== this.props[propName]);\n    if (['cells'].some(shallowDiff)) {\n      // Cells data changed.\n      this.onUpdateCellsData();\n      this.forceUpdate();\n    }\n\n    if ([\n      'layers', 'cells', 'cellFilter', 'cellSelection', 'cellColors',\n    ].some(shallowDiff)) {\n      // Cells layer props changed.\n      this.onUpdateCellsLayer();\n      this.forceUpdate();\n    }\n\n    if (['cellColors'].some(shallowDiff)) {\n      // Cells Color layer props changed.\n      this.onUpdateCellColors();\n      this.forceUpdate();\n    }\n\n    if (['molecules'].some(shallowDiff)) {\n      // Molecules data changed.\n      this.onUpdateMoleculesData();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'molecules'].some(shallowDiff)) {\n      // Molecules layer props changed.\n      this.onUpdateMoleculesLayer();\n      this.forceUpdate();\n    }\n\n    if (['neighborhoods'].some(shallowDiff)) {\n      // Neighborhoods data changed.\n      this.onUpdateNeighborhoodsData();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'neighborhoods'].some(shallowDiff)) {\n      // Neighborhoods layer props changed.\n      this.onUpdateNeighborhoodsLayer();\n      this.forceUpdate();\n    }\n\n    if (['layers', 'imageLayerLoaders', 'cellColors', 'cellHighlight', 'rasterLayersCallbacks'].some(shallowDiff)) {\n      // Image layers changed.\n      this.onUpdateImages();\n      this.forceUpdate();\n    }\n  }\n\n  // render() is implemented in the abstract parent class.\n}\n\n/**\n * Need this wrapper function here,\n * since we want to pass a forwardRef\n * so that outer components can\n * access the grandchild DeckGL ref,\n * but we are using a class component.\n */\nconst SpatialWrapper = forwardRef((props, deckRef) => <Spatial {...props} deckRef={deckRef} />);\nexport default SpatialWrapper;\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\n\nconst useStyles = makeStyles(() => createStyles({\n  cameraLabel: {\n    padding: '0px 0px 0px 16px',\n  },\n  box: {\n    padding: '0px',\n  },\n  button: {\n    padding: '0px 0px 0px 8px',\n  },\n}));\n\nconst ToggleFixedAxisButton = ({\n  setSpatialAxisFixed,\n  spatialAxisFixed,\n  use3d,\n}) => {\n  const classes = useStyles();\n  return (\n    <TableRow>\n      <TableCell className={classes.cameraLabel}>\n      Fix Camera Axis\n      </TableCell>\n      <TableCell className={classes.box}>\n        <Checkbox\n          onClick={() => setSpatialAxisFixed(!spatialAxisFixed)}\n          disabled={!use3d}\n          checked={Boolean(spatialAxisFixed)}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default function SpatialOptions(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n    setSpatialAxisFixed,\n    spatialAxisFixed,\n    use3d,\n  } = props;\n\n  return (\n    <OptionsContainer>\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n      <ToggleFixedAxisButton\n        setSpatialAxisFixed={setSpatialAxisFixed}\n        spatialAxisFixed={spatialAxisFixed}\n        use3d={use3d}\n      />\n    </OptionsContainer>\n  );\n}\n","import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function SpatialTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    cellHighlight,\n    width,\n    height,\n    getCellInfo,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, x, y] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      ...(viewInfo && viewInfo.project ? viewInfo.project(cellHighlight) : [null, null]),\n    ]\n  ) : ([null, null, null]));\n\n  return (\n    (cellInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        sourceUuid={sourceUuid}\n        parentWidth={width}\n        parentHeight={height}\n      >\n        <TooltipContent info={cellInfo} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n","import React, { useEffect, useMemo, useCallback } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { setCellSelection, mergeCellSets } from '../utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useGeneSelection,\n  useMoleculesData,\n  useNeighborhoodsData,\n  useRasterData,\n  useExpressionAttrs,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport Spatial from './Spatial';\nimport SpatialOptions from './SpatialOptions';\nimport SpatialTooltipSubscriber from './SpatialTooltipSubscriber';\nimport { makeSpatialSubtitle, getInitialSpatialTargets } from './utils';\nimport {\n  useCoordination,\n  useLoaders,\n  useSetComponentHover,\n  useSetComponentViewInfo,\n  useAuxiliaryCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst SPATIAL_DATA_TYPES = [\n  'cells', 'molecules', 'raster', 'cell-sets', 'expression-matrix',\n];\n\n/**\n * A subscriber component for the spatial plot.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function SpatialSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    subobservationsLabelOverride: subobservationsLabel = 'molecule',\n    subobservationsPluralLabelOverride: subobservationsPluralLabel = `${subobservationsLabel}s`,\n    theme,\n    disableTooltip = false,\n    title = 'Spatial',\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    spatialZoom: zoom,\n    spatialTargetX: targetX,\n    spatialTargetY: targetY,\n    spatialTargetZ: targetZ,\n    spatialRotationX: rotationX,\n    spatialRotationY: rotationY,\n    spatialRotationZ: rotationZ,\n    spatialRotationOrbit: rotationOrbit,\n    spatialOrbitAxis: orbitAxis,\n    spatialRasterLayers: rasterLayers,\n    spatialCellsLayer: cellsLayer,\n    spatialMoleculesLayer: moleculesLayer,\n    spatialNeighborhoodsLayer: neighborhoodsLayer,\n    cellFilter,\n    cellHighlight,\n    geneSelection,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    spatialAxisFixed,\n  }, {\n    setSpatialZoom: setZoom,\n    setSpatialTargetX: setTargetX,\n    setSpatialTargetY: setTargetY,\n    setSpatialTargetZ: setTargetZ,\n    setSpatialRotationX: setRotationX,\n    setSpatialRotationOrbit: setRotationOrbit,\n    setSpatialOrbitAxis: setOrbitAxis,\n    setSpatialRasterLayers: setRasterLayers,\n    setSpatialCellsLayer: setCellsLayer,\n    setSpatialMoleculesLayer: setMoleculesLayer,\n    setSpatialNeighborhoodsLayer: setNeighborhoodsLayer,\n    setCellFilter,\n    setCellSetSelection,\n    setCellHighlight,\n    setCellSetColor,\n    setCellColorEncoding,\n    setAdditionalCellSets,\n    setMoleculeHighlight,\n    setSpatialAxisFixed,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.spatial, coordinationScopes);\n\n  const [\n    {\n      rasterLayersCallbacks,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const use3d = rasterLayers?.some(l => l.use3d);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    SPATIAL_DATA_TYPES,\n  );\n  const [width, height, deckRef] = useDeckCanvasSize();\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  // Also clear the array of automatically-initialized layers.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells, cellsCount] = useCellsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialCellsLayer: setCellsLayer },\n    { spatialCellsLayer: cellsLayer },\n  );\n  const [molecules, moleculesCount, locationsCount] = useMoleculesData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialMoleculesLayer: setMoleculesLayer },\n    { spatialMoleculesLayer: moleculesLayer },\n  );\n  const [neighborhoods] = useNeighborhoodsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialNeighborhoodsLayer: setNeighborhoodsLayer },\n    { spatialNeighborhoodsLayer: neighborhoodsLayer },\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setSpatialRasterLayers: setRasterLayers },\n    { spatialRasterLayers: rasterLayers },\n  );\n\n  const layers = useMemo(() => {\n    // Only want to pass in cells layer once if there is not `bitmask`.\n    // We pass in the cells data regardless because it is needed for selection,\n    // but the rendering layer itself is not needed.\n    const canPassInCellsLayer = !imageLayerMeta.some(l => l?.metadata?.isBitmask);\n    return [\n      ...(moleculesLayer ? [{ ...moleculesLayer, type: 'molecules' }] : []),\n      ...((cellsLayer && canPassInCellsLayer) ? [{ ...cellsLayer, type: 'cells' }] : []),\n      ...(neighborhoodsLayer ? [{ ...neighborhoodsLayer, type: 'neighborhoods' }] : []),\n      ...(rasterLayers ? rasterLayers.map(l => ({ ...l, type: l.type || 'raster' })) : []),\n    ];\n  }, [cellsLayer, moleculesLayer, neighborhoodsLayer, rasterLayers, imageLayerMeta]);\n\n  useEffect(() => {\n    if ((typeof targetX !== 'number' || typeof targetY !== 'number')) {\n      const {\n        initialTargetX, initialTargetY, initialTargetZ, initialZoom,\n      } = getInitialSpatialTargets({\n        width,\n        height,\n        cells,\n        imageLayerLoaders,\n        useRaster: Boolean(loaders[dataset].loaders.raster),\n        use3d,\n      });\n      setTargetX(initialTargetX);\n      setTargetY(initialTargetY);\n      setTargetZ(initialTargetZ);\n      setZoom(initialZoom);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageLayerLoaders, cells, targetX, targetY, setTargetX, setTargetY, setZoom, use3d]);\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const setCellSelectionProp = useCallback((v) => {\n    setCellSelection(\n      v, additionalCellSets, cellSetColor,\n      setCellSetSelection, setAdditionalCellSets, setCellSetColor,\n      setCellColorEncoding,\n    );\n  }, [additionalCellSets, cellSetColor, setCellColorEncoding,\n    setAdditionalCellSets, setCellSetColor, setCellSetSelection]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: attrs,\n  }), [cellColorEncoding, geneSelection, mergedCellSets,\n    cellSetColor, cellSetSelection, expressionData, attrs]);\n\n  const cellSelection = useMemo(() => Array.from(cellColors.keys()), [cellColors]);\n\n  const getCellInfo = (cellId) => {\n    const cell = cells[cellId];\n    if (cell) {\n      return {\n        [`${capitalize(observationsLabel)} ID`]: cellId,\n        ...cell.factors,\n      };\n    }\n    return null;\n  };\n\n  const setViewState = ({\n    zoom: newZoom,\n    target,\n    rotationX: newRotationX,\n    rotationOrbit: newRotationOrbit,\n    orbitAxis: newOrbitAxis,\n  }) => {\n    setZoom(newZoom);\n    setTargetX(target[0]);\n    setTargetY(target[1]);\n    setTargetZ(target[2]);\n    setRotationX(newRotationX);\n    setRotationOrbit(newRotationOrbit);\n    setOrbitAxis(newOrbitAxis);\n  };\n\n  const subtitle = makeSpatialSubtitle({\n    observationsCount: cellsCount,\n    observationsLabel,\n    observationsPluralLabel,\n    subobservationsCount: moleculesCount,\n    subobservationsLabel,\n    subobservationsPluralLabel,\n    locationsCount,\n  });\n  return (\n    <TitleInfo\n      title={title}\n      info={subtitle}\n      isSpatial\n      urls={urls}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      options={(\n        <SpatialOptions\n          observationsLabel={observationsLabel}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n          setSpatialAxisFixed={setSpatialAxisFixed}\n          spatialAxisFixed={spatialAxisFixed}\n          use3d={use3d}\n        />\n      )}\n    >\n      <Spatial\n        ref={deckRef}\n        uuid={uuid}\n        width={width}\n        height={height}\n        viewState={{\n          zoom,\n          target: [targetX, targetY, targetZ],\n          rotationX,\n          rotationY,\n          rotationZ,\n          rotationOrbit,\n          orbitAxis,\n        }}\n        setViewState={setViewState}\n        layers={layers}\n        cells={cells}\n        cellFilter={cellFilter}\n        cellSelection={cellSelection}\n        cellHighlight={cellHighlight}\n        cellColors={cellColors}\n        molecules={molecules}\n        neighborhoods={neighborhoods}\n        imageLayerLoaders={imageLayerLoaders}\n        setCellFilter={setCellFilter}\n        setCellSelection={setCellSelectionProp}\n        setCellHighlight={setCellHighlight}\n        setMoleculeHighlight={setMoleculeHighlight}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        rasterLayersCallbacks={rasterLayersCallbacks}\n        spatialAxisFixed={spatialAxisFixed}\n      />\n      {!disableTooltip && (\n        <SpatialTooltipSubscriber\n          parentUuid={uuid}\n          cellHighlight={cellHighlight}\n          width={width}\n          height={height}\n          getCellInfo={getCellInfo}\n        />\n      )}\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  box: {\n    opacity: 0.5,\n    height: '80px',\n    bottom: 0,\n    right: 0,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    padding: '10px 0',\n    transition: 'opacity 0.1s',\n    '&:hover': {\n      opacity: 1.0,\n    },\n  },\n}));\n\nexport default function HeatmapControls(props) {\n  const {\n    colorScaleLo,\n    colorScaleHi,\n    onColorScaleChange,\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Box component=\"div\" m={1} className={classes.box}>\n      <Slider\n        orientation=\"vertical\"\n        value={[colorScaleLo, colorScaleHi]}\n        onChange={onColorScaleChange}\n        aria-labelledby=\"colorscale-slider\"\n        min={0.0}\n        max={1.0}\n        step={0.005}\n      />\n    </Box>\n  );\n}\n","import clamp from 'lodash/clamp';\nimport range from 'lodash/range';\n\nimport {\n  AXIS_LABEL_TEXT_SIZE,\n  AXIS_MIN_SIZE,\n  AXIS_MAX_SIZE,\n} from '../../layers/heatmap-constants';\n\nexport function getGeneByCellTile(view, {\n  tileSize, tileI, tileJ, numCells, numGenes, cellOrdering, cells,\n}) {\n  const tileData = new Uint8Array(tileSize * tileSize);\n  let offset;\n  let value;\n  let cellI;\n  let geneI;\n  let sortedCellI;\n\n  const tileSizeRange = range(tileSize);\n\n  tileSizeRange.forEach((j) => {\n    // Need to iterate over cells in the outer loop.\n    cellI = (tileJ * tileSize) + j;\n    if (cellI < numCells) {\n      sortedCellI = cells.indexOf(cellOrdering[cellI]);\n      if (sortedCellI >= -1) {\n        tileSizeRange.forEach((i) => {\n          geneI = (tileI * tileSize) + i;\n          value = view[sortedCellI * numGenes + geneI];\n          offset = ((tileSize - i - 1) * tileSize + j);\n          tileData[offset] = value;\n        });\n      }\n    }\n  });\n  return tileData;\n}\n\nexport function getCellByGeneTile(view, {\n  tileSize, tileI, tileJ, numCells, numGenes, cellOrdering, cells,\n}) {\n  const tileData = new Uint8Array(tileSize * tileSize);\n  let offset;\n  let value;\n  let cellI;\n  let geneI;\n  let sortedCellI;\n\n  const tileSizeRange = range(tileSize);\n\n  tileSizeRange.forEach((i) => {\n    // Need to iterate over cells in the outer loop.\n    cellI = (tileI * tileSize) + i;\n    if (cellI < numCells) {\n      sortedCellI = cells.indexOf(cellOrdering[cellI]);\n      if (sortedCellI >= -1) {\n        tileSizeRange.forEach((j) => {\n          geneI = (tileJ * tileSize) + j;\n          if (geneI < numGenes) {\n            value = view[sortedCellI * numGenes + geneI];\n          } else {\n            value = 0;\n          }\n          offset = ((tileSize - i - 1) * tileSize + j);\n          tileData[offset] = value;\n        });\n      }\n    }\n  });\n\n  return tileData;\n}\n\n/**\n * Called before a layer is drawn to determine whether it should be rendered.\n * Reference: https://deck.gl/docs/api-reference/core/deck#layerfilter\n * @param {object} params A viewport, layer pair.\n * @param {object} params.layer The layer to check.\n * @param {object} params.viewport The viewport to check.\n * @returns {boolean} Should this layer be rendered in this viewport?\n */\nexport function layerFilter({ layer, viewport }) {\n  if (viewport.id === 'axisLeft') {\n    return layer.id.startsWith('axisLeft');\n  } if (viewport.id === 'axisTop') {\n    return layer.id.startsWith('axisTop');\n  } if (viewport.id === 'heatmap') {\n    return layer.id.startsWith('heatmap');\n  } if (viewport.id === 'colorsLeft') {\n    return layer.id.startsWith('colorsLeft');\n  } if (viewport.id === 'colorsTop') {\n    return layer.id.startsWith('colorsTop');\n  }\n  return false;\n}\n\n/**\n * Get the size of the left and top heatmap axes,\n * taking into account the maximum label string lengths.\n * @param {boolean} transpose Is the heatmap transposed?\n * @param {number} geneLabelMaxLength What is the maximum length gene label?\n * @param {number} cellLabelMaxLength What is the maximum length cell label?\n * @returns {number[]} [axisOffsetLeft, axisOffsetTop]\n */\nexport function getAxisSizes(transpose, geneLabelMaxLength, cellLabelMaxLength) {\n  const axisOffsetLeft = clamp(\n    (transpose ? geneLabelMaxLength : cellLabelMaxLength) * AXIS_LABEL_TEXT_SIZE,\n    AXIS_MIN_SIZE,\n    AXIS_MAX_SIZE,\n  );\n  const axisOffsetTop = clamp(\n    (transpose ? cellLabelMaxLength : geneLabelMaxLength) * AXIS_LABEL_TEXT_SIZE,\n    AXIS_MIN_SIZE,\n    AXIS_MAX_SIZE,\n  );\n  return [axisOffsetLeft, axisOffsetTop];\n}\n\n/**\n * Convert a mouse coordinate (x, y) to a heatmap coordinate (col index, row index).\n * @param {number} mouseX The mouse X of interest.\n * @param {number} mouseY The mouse Y of interest.\n * @param {object} param2 An object containing current sizes and scale factors.\n * @returns {number[]} [colI, rowI]\n */\nexport function mouseToHeatmapPosition(mouseX, mouseY, {\n  offsetLeft, offsetTop, targetX, targetY, scaleFactor, matrixWidth, matrixHeight, numRows, numCols,\n}) {\n  // TODO: use linear algebra\n  const viewMouseX = mouseX - offsetLeft;\n  const viewMouseY = mouseY - offsetTop;\n\n  if (viewMouseX < 0 || viewMouseY < 0) {\n    // The mouse is outside the heatmap.\n    return [null, null];\n  }\n\n  // Determine the rowI and colI values based on the current viewState.\n  const bboxTargetX = targetX * scaleFactor + matrixWidth * scaleFactor / 2;\n  const bboxTargetY = targetY * scaleFactor + matrixHeight * scaleFactor / 2;\n\n  const bboxLeft = bboxTargetX - matrixWidth / 2;\n  const bboxTop = bboxTargetY - matrixHeight / 2;\n\n  const zoomedOffsetLeft = bboxLeft / (matrixWidth * scaleFactor);\n  const zoomedOffsetTop = bboxTop / (matrixHeight * scaleFactor);\n\n  const zoomedViewMouseX = viewMouseX / (matrixWidth * scaleFactor);\n  const zoomedViewMouseY = viewMouseY / (matrixHeight * scaleFactor);\n\n  const zoomedMouseX = zoomedOffsetLeft + zoomedViewMouseX;\n  const zoomedMouseY = zoomedOffsetTop + zoomedViewMouseY;\n\n  const rowI = Math.floor(zoomedMouseY * numRows);\n  const colI = Math.floor(zoomedMouseX * numCols);\n  return [colI, rowI];\n}\n\n/**\n * Convert a heatmap coordinate (col index, row index) to a mouse coordinate (x, y).\n * @param {number} colI The column index of interest.\n * @param {number} rowI The row index of interest.\n * @param {object} param2 An object containing current sizes and scale factors.\n * @returns {number[]} [x, y]\n */\nexport function heatmapToMousePosition(colI, rowI, {\n  offsetLeft, offsetTop, targetX, targetY, scaleFactor, matrixWidth, matrixHeight, numRows, numCols,\n}) {\n  // TODO: use linear algebra\n  let zoomedMouseY = null;\n  let zoomedMouseX = null;\n\n  if (rowI !== null) {\n    const minY = -matrixHeight * scaleFactor / 2;\n    const maxY = matrixHeight * scaleFactor / 2;\n    const totalHeight = maxY - minY;\n\n    const minInViewY = (targetY * scaleFactor) - (matrixHeight / 2);\n    const maxInViewY = (targetY * scaleFactor) + (matrixHeight / 2);\n    const inViewHeight = maxInViewY - minInViewY;\n\n    const normalizedRowY = (rowI + 0.5) / numRows;\n    const globalRowY = minY + (normalizedRowY * totalHeight);\n\n    if (minInViewY <= globalRowY && globalRowY <= maxInViewY) {\n      zoomedMouseY = offsetTop + ((globalRowY - minInViewY) / inViewHeight) * matrixHeight;\n    }\n  }\n  if (colI !== null) {\n    const minX = -matrixWidth * scaleFactor / 2;\n    const maxX = matrixWidth * scaleFactor / 2;\n    const totalWidth = maxX - minX;\n\n    const minInViewX = (targetX * scaleFactor) - (matrixWidth / 2);\n    const maxInViewX = (targetX * scaleFactor) + (matrixWidth / 2);\n    const inViewWidth = maxInViewX - minInViewX;\n\n    const normalizedRowX = (colI + 0.5) / numCols;\n    const globalRowX = minX + (normalizedRowX * totalWidth);\n\n    if (minInViewX <= globalRowX && globalRowX <= maxInViewX) {\n      zoomedMouseX = offsetLeft + ((globalRowX - minInViewX) / inViewWidth) * matrixWidth;\n    }\n  }\n  return [zoomedMouseX, zoomedMouseY];\n}\n","// https://developer.mozilla.org/en-US/docs/Web/API/NavigatorConcurrentHardware/hardwareConcurrency\n// We need to give a different way of getting this for safari, so 4 is probably a safe bet\n// for parallel processing in the meantime.  More can't really hurt since they'll just block\n// each other and not the UI thread, which is the real benefit.\nconst defaultPoolSize = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency || 4 : null;\n\n/**\n * Pool for workers to decode chunks of the images.\n * This is a line-for-line copy of GeoTIFFs old implementation: https://github.com/geotiffjs/geotiff.js/blob/v1.0.0-beta.6/src/pool.js\n */\nexport default class Pool {\n  /**\n   * @constructor\n   * @param {object} Worker The worker class to be used for processing.\n   */\n  constructor(Worker) {\n    this.workers = [];\n    this.idleWorkers = [];\n    this.waitQueue = [];\n    this.decoder = null;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < defaultPoolSize; ++i) {\n      const w = new Worker();\n      this.workers.push(w);\n      this.idleWorkers.push(w);\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async process() {\n    throw new Error('Pool needs to implement \"process\" method');\n  }\n\n  async waitForWorker() {\n    const idleWorker = this.idleWorkers.pop();\n    if (idleWorker) {\n      return idleWorker;\n    }\n    const waiter = {};\n    const promise = new Promise((resolve) => {\n      waiter.resolve = resolve;\n    });\n\n    this.waitQueue.push(waiter);\n    return promise;\n  }\n\n  async finishTask(currentWorker) {\n    const waiter = this.waitQueue.pop();\n    if (waiter) {\n      waiter.resolve(currentWorker);\n    } else {\n      this.idleWorkers.push(currentWorker);\n    }\n  }\n\n  destroy() {\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < this.workers.length; ++i) {\n      this.workers[i].terminate();\n    }\n  }\n}\n","import Worker from './heatmap.worker'; // eslint-disable-line import/no-unresolved\nimport Pool from '../../Pool';\n\n/**\n * Pool for workers to decode chunks of the images.\n * This is a line-for-line copy of GeoTIFFs old implementation: https://github.com/geotiffjs/geotiff.js/blob/v1.0.0-beta.6/src/pool.js\n */\nexport default class HeatmapPool extends Pool {\n  constructor() {\n    super(Worker);\n  }\n\n  /**\n   * Process each heatmap tile\n   * @param {object} params The arguments passed to the heatmap worker.\n   * @param {string} params.curr The current task uuid.\n   * @param {number} params.xTiles How many tiles required in the x direction?\n   * @param {number} params.yTiles How many tiles required in the y direction?\n   * @param {number} params.tileSize How many entries along each tile axis?\n   * @param {string[]} params.cellOrdering The current ordering of cells.\n   * @param {string[]} params.rows The name of each row (cell ID).\n   * Does not take transpose into account (always cells).\n   * @param {string[]} params.cols The name of each column (gene ID).\n   * Does not take transpose into account (always genes).\n   * @param {ArrayBuffer} params.data The array buffer.\n   * Need to transfer back to main thread when done.\n   * @param {boolean} params.transpose Is the heatmap transposed?\n   * @returns {array} [message, transfers]\n   * @returns {Promise.<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async process(args) {\n    const currentWorker = await this.waitForWorker();\n    return new Promise((resolve, reject) => {\n      currentWorker.onmessage = (event) => {\n        // this.workers.push(currentWorker);\n        this.finishTask(currentWorker);\n        resolve(event.data);\n      };\n      currentWorker.onerror = (error) => {\n        // this.workers.push(currentWorker);\n        this.finishTask(currentWorker);\n        reject(error);\n      };\n      currentWorker.postMessage(['getTile', args], [args.data]);\n    });\n  }\n}\n","import React, {\n  useRef, useState, useCallback, useMemo, useEffect, useReducer, forwardRef,\n} from 'react';\nimport uuidv4 from 'uuid/v4';\nimport DeckGL from 'deck.gl';\nimport { OrthographicView } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport range from 'lodash/range';\nimport clamp from 'lodash/clamp';\nimport isEqual from 'lodash/isEqual';\nimport { max } from 'd3-array';\nimport HeatmapControls from './HeatmapControls';\nimport HeatmapCompositeTextLayer from '../../layers/HeatmapCompositeTextLayer';\nimport PixelatedBitmapLayer from '../../layers/PixelatedBitmapLayer';\nimport HeatmapBitmapLayer from '../../layers/HeatmapBitmapLayer';\nimport {\n  DEFAULT_GL_OPTIONS,\n  createDefaultUpdateCellsHover,\n  createDefaultUpdateGenesHover,\n  createDefaultUpdateViewInfo,\n  copyUint8Array,\n} from '../utils';\nimport {\n  layerFilter,\n  getAxisSizes,\n  mouseToHeatmapPosition,\n  heatmapToMousePosition,\n} from './utils';\nimport {\n  TILE_SIZE, MAX_ROW_AGG, MIN_ROW_AGG,\n  COLOR_BAR_SIZE,\n  AXIS_MARGIN,\n} from '../../layers/heatmap-constants';\nimport HeatmapWorkerPool from './HeatmapWorkerPool';\n/**\n * A heatmap component for cell x gene matrices.\n * @param {object} props\n * @param {string} props.uuid The uuid of this component,\n * used by tooltips to determine whether to render a tooltip or\n * a crosshair.\n * @param {string} props.theme The current theme name.\n * @param {object} props.initialViewState The initial viewState for\n * DeckGL.\n * @param {number} props.width The width of the canvas.\n * @param {number} props.height The height of the canvas.\n * @param {object} props.expressionMatrix An object { rows, cols, matrix },\n * where matrix is a flat Uint8Array, rows is a list of cell ID strings,\n * and cols is a list of gene ID strings.\n * @param {Map} props.cellColors Map of cell ID to color. Optional.\n * If defined, the key ordering is used to order the cell axis of the heatmap.\n * @param {function} props.clearPleaseWait The clear please wait callback,\n * called when the expression matrix has loaded (is not null).\n * @param {function} props.setCellHighlight Callback function called on\n * hover with the cell ID. Optional.\n * @param {function} props.setGeneHighlight Callback function called on\n * hover with the gene ID. Optional.\n * @param {function} props.updateViewInfo Callback function that gets called with an\n * object { uuid, project() } where project is a function that maps (cellId, geneId)\n * to canvas (x,y) coordinates. Used to show tooltips. Optional.\n * @param {boolean} props.transpose By default, false.\n * @param {string} props.variablesTitle By default, 'Genes'.\n * @param {string} props.observationsTitle By default, 'Cells'.\n */\nconst Heatmap = forwardRef((props, deckRef) => {\n  const {\n    uuid,\n    theme,\n    viewState: rawViewState,\n    setViewState,\n    setHeatmapControls,\n    heatmapControls = [0, 1],\n    width: viewWidth,\n    height: viewHeight,\n    expressionMatrix: expression,\n    cellColors,\n    clearPleaseWait,\n    setComponentHover,\n    setCellHighlight = createDefaultUpdateCellsHover('Heatmap'),\n    setGeneHighlight = createDefaultUpdateGenesHover('Heatmap'),\n    updateViewInfo = createDefaultUpdateViewInfo('Heatmap'),\n    setIsRendering = () => {},\n    transpose = false,\n    variablesTitle = 'Genes',\n    observationsTitle = 'Cells',\n  } = props;\n\n  const viewState = {\n    ...rawViewState,\n    target: (transpose ? [rawViewState.target[1], rawViewState.target[0]] : rawViewState.target),\n    minZoom: 0,\n  };\n\n  const axisLeftTitle = (transpose ? variablesTitle : observationsTitle);\n  const axisTopTitle = (transpose ? observationsTitle : variablesTitle);\n\n  const workerPool = useMemo(() => new HeatmapWorkerPool(), []);\n\n  useEffect(() => {\n    if (clearPleaseWait && expression) {\n      clearPleaseWait('expression-matrix');\n    }\n  }, [clearPleaseWait, expression]);\n\n  const tilesRef = useRef();\n  const dataRef = useRef();\n  const [axisLeftLabels, setAxisLeftLabels] = useState([]);\n  const [axisTopLabels, setAxisTopLabels] = useState([]);\n  const [colorScaleLo, setColorScaleLo] = useState(heatmapControls[0]);\n  const [colorScaleHi, setColorScaleHi] = useState(heatmapControls[1]);\n\n  // Callback function for the color scale slider change event.\n  const onColorScaleChange = useCallback((event, newValue) => {\n    setColorScaleLo(newValue[0]);\n    setColorScaleHi(newValue[1]);\n    setHeatmapControls(newValue);\n  }, [setHeatmapControls]);\n\n  // Since we are storing the tile data in a ref,\n  // and updating it asynchronously when the worker finishes,\n  // we need to tie it to a piece of state through this iteration value.\n  const [tileIteration, incTileIteration] = useReducer(i => i + 1, 0);\n\n  // We need to keep a backlog of the tasks for the worker thread,\n  // since the array buffer can only be held by one thread at a time.\n  const [backlog, setBacklog] = useState([]);\n\n  // Store a reference to the matrix Uint8Array in the dataRef,\n  // since we need to access its array buffer to transfer\n  // it back and forth from the worker thread.\n  useEffect(() => {\n    // Store the expression matrix Uint8Array in the dataRef.\n    if (expression && expression.matrix) {\n      dataRef.current = copyUint8Array(expression.matrix);\n    }\n  }, [dataRef, expression]);\n\n  // Check if the ordering of axis labels needs to be changed,\n  // for example if the cells \"selected\" (technically just colored)\n  // have changed.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    const newCellOrdering = (!cellColors || cellColors.size === 0\n      ? expression.rows\n      : Array.from(cellColors.keys())\n    );\n    const oldCellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n\n    if (!isEqual(oldCellOrdering, newCellOrdering)) {\n      if (transpose) {\n        setAxisTopLabels(newCellOrdering);\n      } else {\n        setAxisLeftLabels(newCellOrdering);\n      }\n    }\n  }, [expression, cellColors, axisTopLabels, axisLeftLabels, transpose]);\n\n  // Set the genes ordering.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    if (transpose) {\n      setAxisLeftLabels(expression.cols);\n    } else {\n      setAxisTopLabels(expression.cols);\n    }\n  }, [expression, transpose]);\n\n  const [cellLabelMaxLength, geneLabelMaxLength] = useMemo(() => {\n    if (!expression) {\n      return [0, 0];\n    }\n    return [\n      max(expression.rows.map(cellId => cellId.length)),\n      max(expression.cols.map(geneId => geneId.length)),\n    ];\n  }, [expression]);\n\n  const width = axisTopLabels.length;\n  const height = axisLeftLabels.length;\n\n  const [axisOffsetLeft, axisOffsetTop] = getAxisSizes(\n    transpose, geneLabelMaxLength, cellLabelMaxLength,\n  );\n\n  const offsetTop = axisOffsetTop + COLOR_BAR_SIZE;\n  const offsetLeft = axisOffsetLeft + COLOR_BAR_SIZE;\n\n  const matrixWidth = viewWidth - offsetLeft;\n  const matrixHeight = viewHeight - offsetTop;\n\n  const matrixLeft = -matrixWidth / 2;\n  const matrixRight = matrixWidth / 2;\n  const matrixTop = -matrixHeight / 2;\n  const matrixBottom = matrixHeight / 2;\n\n  const xTiles = Math.ceil(width / TILE_SIZE);\n  const yTiles = Math.ceil(height / TILE_SIZE);\n\n  const widthRatio = 1 - (TILE_SIZE - (width % TILE_SIZE)) / (xTiles * TILE_SIZE);\n  const heightRatio = 1 - (TILE_SIZE - (height % TILE_SIZE)) / (yTiles * TILE_SIZE);\n\n  const tileWidth = (matrixWidth / widthRatio) / (xTiles);\n  const tileHeight = (matrixHeight / heightRatio) / (yTiles);\n\n  const scaleFactor = 2 ** viewState.zoom;\n  const cellHeight = (matrixHeight * scaleFactor) / height;\n  const cellWidth = (matrixWidth * scaleFactor) / width;\n\n  // Get power of 2 between 1 and 16,\n  // for number of cells to aggregate together in each direction.\n  const aggSizeX = clamp(2 ** Math.ceil(Math.log2(1 / cellWidth)), MIN_ROW_AGG, MAX_ROW_AGG);\n  const aggSizeY = clamp(2 ** Math.ceil(Math.log2(1 / cellHeight)), MIN_ROW_AGG, MAX_ROW_AGG);\n\n  const [targetX, targetY] = viewState.target;\n\n  // Emit the viewInfo object on viewState updates\n  // (used by tooltips / crosshair elements).\n  useEffect(() => {\n    updateViewInfo({\n      uuid,\n      project: (cellId, geneId) => {\n        const colI = transpose ? axisTopLabels.indexOf(cellId) : axisTopLabels.indexOf(geneId);\n        const rowI = transpose ? axisLeftLabels.indexOf(geneId) : axisLeftLabels.indexOf(cellId);\n        return heatmapToMousePosition(\n          colI, rowI, {\n            offsetLeft,\n            offsetTop,\n            targetX: viewState.target[0],\n            targetY: viewState.target[1],\n            scaleFactor,\n            matrixWidth,\n            matrixHeight,\n            numRows: height,\n            numCols: width,\n          },\n        );\n      },\n    });\n  }, [uuid, updateViewInfo, transpose, axisTopLabels, axisLeftLabels, offsetLeft,\n    offsetTop, viewState, scaleFactor, matrixWidth, matrixHeight, height, width]);\n\n\n  // Listen for viewState changes.\n  // Do not allow the user to zoom and pan outside of the initial window.\n  const onViewStateChange = useCallback(({ viewState: nextViewState }) => {\n    const { zoom: nextZoom } = nextViewState;\n    const nextScaleFactor = 2 ** nextZoom;\n\n    const minTargetX = nextZoom === 0 ? 0 : -(matrixRight - (matrixRight / nextScaleFactor));\n    const maxTargetX = -1 * minTargetX;\n\n    const minTargetY = nextZoom === 0 ? 0 : -(matrixBottom - (matrixBottom / nextScaleFactor));\n    const maxTargetY = -1 * minTargetY;\n\n    // Manipulate view state if necessary to keep the user in the window.\n    const nextTarget = [\n      clamp(nextViewState.target[0], minTargetX, maxTargetX),\n      clamp(nextViewState.target[1], minTargetY, maxTargetY),\n    ];\n\n    setViewState({\n      zoom: nextZoom,\n      target: (transpose ? [nextTarget[1], nextTarget[0]] : nextTarget),\n    });\n  }, [matrixRight, matrixBottom, transpose, setViewState]);\n\n  // If `expression` or `cellOrdering` have changed,\n  // then new tiles need to be generated,\n  // so add a new task to the backlog.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    // Use a uuid to give the task a unique ID,\n    // to help identify where in the list it is located\n    // after the worker thread asynchronously sends the data back\n    // to this thread.\n    if (\n      axisTopLabels && axisLeftLabels && xTiles && yTiles\n    ) {\n      setBacklog(prev => [...prev, uuidv4()]);\n    }\n  }, [dataRef, expression, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  // When the backlog has updated, a new worker job can be submitted if:\n  // - the backlog has length >= 1 (at least one job is waiting), and\n  // - buffer.byteLength is not zero, so the worker does not currently \"own\" the buffer.\n  useEffect(() => {\n    if (backlog.length < 1) {\n      return;\n    }\n    const curr = backlog[backlog.length - 1];\n    if (dataRef.current && dataRef.current.buffer.byteLength) {\n      const { rows, cols, matrix } = expression;\n      const promises = range(yTiles).map(i => range(xTiles).map(async j => workerPool.process({\n        curr,\n        tileI: i,\n        tileJ: j,\n        tileSize: TILE_SIZE,\n        cellOrdering: transpose ? axisTopLabels : axisLeftLabels,\n        rows,\n        cols,\n        transpose,\n        data: matrix.buffer.slice(),\n      })));\n      const process = async () => {\n        const tiles = await Promise.all(promises.flat());\n        tilesRef.current = tiles.map(i => i.tile);\n        incTileIteration();\n        dataRef.current = new Uint8Array(tiles[0].buffer);\n        const { curr: currWork } = tiles[0];\n        setBacklog((prev) => {\n          const currIndex = prev.indexOf(currWork);\n          return prev.slice(currIndex + 1, prev.length);\n        });\n      };\n      process();\n    }\n  }, [axisLeftLabels, axisTopLabels, backlog, expression, transpose, xTiles, yTiles, workerPool]);\n\n  useEffect(() => {\n    setIsRendering(backlog.length > 0);\n  }, [backlog, setIsRendering]);\n\n  // Update the heatmap tiles if:\n  // - new tiles are available (`tileIteration` has changed), or\n  // - the matrix bounds have changed, or\n  // - the `aggSizeX` or `aggSizeY` have changed, or\n  // - the cell ordering has changed.\n  const heatmapLayers = useMemo(() => {\n    if (!tilesRef.current || backlog.length) {\n      return [];\n    }\n    function getLayer(i, j, tile) {\n      return new HeatmapBitmapLayer({\n        id: `heatmapLayer-${tileIteration}-${i}-${j}`,\n        image: tile,\n        bounds: [\n          matrixLeft + j * tileWidth,\n          matrixTop + i * tileHeight,\n          matrixLeft + (j + 1) * tileWidth,\n          matrixTop + (i + 1) * tileHeight,\n        ],\n        aggSizeX,\n        aggSizeY,\n        colorScaleLo,\n        colorScaleHi,\n        updateTriggers: {\n          image: [axisLeftLabels, axisTopLabels],\n          bounds: [tileHeight, tileWidth],\n        },\n      });\n    }\n    const layers = tilesRef\n      .current.map((tile, index) => getLayer(Math.floor(index / xTiles), index % xTiles, tile));\n    return layers;\n  }, [backlog, tileIteration, matrixLeft, tileWidth, matrixTop, tileHeight,\n    aggSizeX, aggSizeY, colorScaleLo, colorScaleHi, axisLeftLabels, axisTopLabels, xTiles]);\n\n\n  // Map cell and gene names to arrays with indices,\n  // to prepare to render the names in TextLayers.\n  const axisTopLabelData = useMemo(() => axisTopLabels.map((d, i) => [i, d]), [axisTopLabels]);\n  const axisLeftLabelData = useMemo(() => axisLeftLabels.map((d, i) => [i, d]), [axisLeftLabels]);\n\n  // Generate the axis label, axis title, and loading indicator text layers.\n  const textLayers = [\n    new HeatmapCompositeTextLayer({\n      targetX,\n      targetY,\n      scaleFactor,\n      axisLeftLabelData,\n      matrixTop,\n      height,\n      matrixHeight,\n      cellHeight,\n      cellWidth,\n      axisTopLabelData,\n      matrixLeft,\n      width,\n      matrixWidth,\n      viewHeight,\n      viewWidth,\n      theme,\n      axisLeftTitle,\n      axisTopTitle,\n      axisOffsetLeft,\n      axisOffsetTop,\n    }),\n  ];\n\n  // Create the left color bar with a BitmapLayer.\n  // TODO: find a way to do aggregation for this as well.\n  const cellColorsTiles = useMemo(() => {\n    if (!cellColors) {\n      return null;\n    }\n\n    let cellId;\n    let offset;\n    let color;\n    let rowI;\n\n    const cellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n    const colorBarTileWidthPx = (transpose ? TILE_SIZE : 1);\n    const colorBarTileHeightPx = (transpose ? 1 : TILE_SIZE);\n\n    const result = range((transpose ? xTiles : yTiles)).map((i) => {\n      const tileData = new Uint8ClampedArray(TILE_SIZE * 1 * 4);\n\n      range(TILE_SIZE).forEach((tileY) => {\n        rowI = (i * TILE_SIZE) + tileY; // the row / cell index\n        if (rowI < cellOrdering.length) {\n          cellId = cellOrdering[rowI];\n          color = cellColors.get(cellId);\n          offset = (transpose ? tileY : (TILE_SIZE - tileY - 1)) * 4;\n          if (color) {\n            const [rValue, gValue, bValue] = color;\n            tileData[offset + 0] = rValue;\n            tileData[offset + 1] = gValue;\n            tileData[offset + 2] = bValue;\n            tileData[offset + 3] = 255;\n          }\n        }\n      });\n\n      return new ImageData(tileData, colorBarTileWidthPx, colorBarTileHeightPx);\n    });\n\n    return result;\n  }, [cellColors, transpose, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  const cellColorsLayers = useMemo(() => (cellColorsTiles\n    ? cellColorsTiles\n      .map((tile, i) => new PixelatedBitmapLayer({\n        id: `${(transpose ? 'colorsTopLayer' : 'colorsLeftLayer')}-${i}-${uuidv4()}`,\n        image: tile,\n        bounds: (transpose ? [\n          matrixLeft + i * tileWidth,\n          -matrixHeight / 2,\n          matrixLeft + (i + 1) * tileWidth,\n          matrixHeight / 2,\n        ] : [\n          -matrixWidth / 2,\n          matrixTop + i * tileHeight,\n          matrixWidth / 2,\n          matrixTop + (i + 1) * tileHeight,\n        ]),\n      }))\n    : []), [cellColorsTiles, matrixTop, matrixLeft, matrixHeight,\n    matrixWidth, tileWidth, tileHeight, transpose]);\n\n  const layers = heatmapLayers\n    .concat(textLayers)\n    .concat(cellColorsLayers);\n\n  // Set up the onHover function.\n  function onHover(info, event) {\n    if (!expression) {\n      return;\n    }\n    const { x: mouseX, y: mouseY } = event.offsetCenter;\n    const [colI, rowI] = mouseToHeatmapPosition(mouseX, mouseY, {\n      offsetLeft,\n      offsetTop,\n      targetX,\n      targetY,\n      scaleFactor,\n      matrixWidth,\n      matrixHeight,\n      numRows: height,\n      numCols: width,\n    });\n\n    if (colI === null) {\n      if (transpose) {\n        setCellHighlight(null);\n      } else {\n        setGeneHighlight(null);\n      }\n    }\n\n    if (rowI === null) {\n      if (transpose) {\n        setGeneHighlight(null);\n      } else {\n        setCellHighlight(null);\n      }\n    }\n\n    const obsI = expression.rows.indexOf(transpose\n      ? axisTopLabels[colI]\n      : axisLeftLabels[rowI]);\n    const varI = expression.cols.indexOf(transpose\n      ? axisLeftLabels[rowI]\n      : axisTopLabels[colI]);\n\n    const obsId = expression.rows[obsI];\n    const varId = expression.cols[varI];\n    if (setComponentHover) {\n      setComponentHover();\n    }\n    setCellHighlight(obsId || null);\n    setGeneHighlight(varId || null);\n  }\n\n  return (\n    <>\n      <DeckGL\n        id={`deckgl-overlay-${uuid}`}\n        ref={deckRef}\n        views={[\n          // Note that there are multiple views here,\n          // but only one viewState.\n          new OrthographicView({\n            id: 'heatmap',\n            controller: true,\n            x: offsetLeft,\n            y: offsetTop,\n            width: matrixWidth,\n            height: matrixHeight,\n          }),\n          new OrthographicView({\n            id: 'axisLeft',\n            controller: false,\n            x: (transpose ? COLOR_BAR_SIZE : 0),\n            y: offsetTop,\n            width: axisOffsetLeft,\n            height: matrixHeight,\n          }),\n          new OrthographicView({\n            id: 'axisTop',\n            controller: false,\n            x: offsetLeft,\n            y: (transpose ? 0 : COLOR_BAR_SIZE),\n            width: matrixWidth,\n            height: axisOffsetTop,\n          }),\n          new OrthographicView({\n            id: 'colorsLeft',\n            controller: false,\n            x: axisOffsetLeft,\n            y: offsetTop,\n            width: COLOR_BAR_SIZE - AXIS_MARGIN,\n            height: matrixHeight,\n          }),\n          new OrthographicView({\n            id: 'colorsTop',\n            controller: false,\n            x: offsetLeft,\n            y: axisOffsetTop,\n            width: matrixWidth,\n            height: COLOR_BAR_SIZE - AXIS_MARGIN,\n          }),\n        ]}\n        layers={layers}\n        layerFilter={layerFilter}\n        getCursor={interactionState => (interactionState.isDragging ? 'grabbing' : 'default')}\n        glOptions={DEFAULT_GL_OPTIONS}\n        onViewStateChange={onViewStateChange}\n        viewState={viewState}\n        onHover={onHover}\n      />\n      <HeatmapControls\n        colorScaleLo={colorScaleLo}\n        colorScaleHi={colorScaleHi}\n        onColorScaleChange={onColorScaleChange}\n      />\n    </>\n  );\n});\n\nexport default Heatmap;\n","import React from 'react';\nimport Tooltip2D from '../tooltip/Tooltip2D';\nimport TooltipContent from '../tooltip/TooltipContent';\nimport { useComponentHover, useComponentViewInfo } from '../../app/state/hooks';\n\nexport default function HeatmapTooltipSubscriber(props) {\n  const {\n    parentUuid,\n    width, height, transpose,\n    getCellInfo, getGeneInfo,\n    cellHighlight, geneHighlight,\n  } = props;\n\n  const sourceUuid = useComponentHover();\n  const viewInfo = useComponentViewInfo(parentUuid);\n\n  const [cellInfo, cellCoord] = (cellHighlight && getCellInfo ? (\n    [\n      getCellInfo(cellHighlight),\n      (viewInfo && viewInfo.project\n        ? viewInfo.project(cellHighlight, null)[(transpose ? 0 : 1)]\n        : null),\n    ]\n  ) : ([null, null]));\n\n  const [geneInfo, geneCoord] = (geneHighlight && getGeneInfo ? (\n    [\n      getGeneInfo(geneHighlight),\n      (viewInfo && viewInfo.project\n        ? viewInfo.project(null, geneHighlight)[(transpose ? 1 : 0)]\n        : null),\n    ]\n  ) : ([null, null]));\n\n  const x = (transpose ? cellCoord : geneCoord);\n  const y = (transpose ? geneCoord : cellCoord);\n\n  return (\n    (cellInfo || geneInfo ? (\n      <Tooltip2D\n        x={x}\n        y={y}\n        parentUuid={parentUuid}\n        parentWidth={width}\n        parentHeight={height}\n        sourceUuid={sourceUuid}\n      >\n        <TooltipContent info={{ ...geneInfo, ...cellInfo }} />\n      </Tooltip2D>\n    ) : null)\n  );\n}\n","import React, {\n  useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { pluralize, capitalize } from '../../utils';\nimport { useDeckCanvasSize, useReady, useUrls } from '../hooks';\nimport { mergeCellSets } from '../utils';\nimport {\n  useCellsData,\n  useCellSetsData,\n  useExpressionMatrixData,\n  useGeneSelection,\n} from '../data-hooks';\nimport { getCellColors } from '../interpolate-colors';\nimport {\n  useCoordination, useLoaders,\n  useSetComponentHover, useSetComponentViewInfo,\n} from '../../app/state/hooks';\nimport {\n  COMPONENT_COORDINATION_TYPES,\n} from '../../app/state/coordination';\nimport Heatmap from './Heatmap';\nimport HeatmapTooltipSubscriber from './HeatmapTooltipSubscriber';\n\nconst HEATMAP_DATA_TYPES = ['cells', 'cell-sets', 'expression-matrix'];\n\n/**\n * @param {object} props\n * @param {number} props.uuid The unique identifier for this component.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {boolean} props.transpose Whether to\n * render as cell-by-gene or gene-by-cell.\n * @param {string} props.observationsLabelOverride The singular\n * form of the name of the observation.\n * @param {string} props.observationsPluralLabelOverride The\n * plural form of the name of the observation.\n * @param {string} props.variablesLabelOverride The singular\n * form of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.disableTooltip Whether to disable the\n * tooltip on mouse hover.\n */\nexport default function HeatmapSubscriber(props) {\n  const {\n    uuid,\n    coordinationScopes,\n    removeGridComponent, theme, transpose,\n    observationsLabelOverride: observationsLabel = 'cell',\n    observationsPluralLabelOverride: observationsPluralLabel = `${observationsLabel}s`,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    disableTooltip = false,\n    title = 'Heatmap',\n  } = props;\n\n  const loaders = useLoaders();\n  const setComponentHover = useSetComponentHover();\n  const setComponentViewInfo = useSetComponentViewInfo(uuid);\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    heatmapZoomX: zoomX,\n    heatmapTargetX: targetX,\n    heatmapTargetY: targetY,\n    geneSelection,\n    cellHighlight,\n    geneHighlight,\n    cellSetSelection,\n    cellSetColor,\n    cellColorEncoding,\n    additionalCellSets,\n    geneExpressionColormapRange: heatmapControls,\n  }, {\n    setHeatmapZoomX: setZoomX,\n    setHeatmapZoomY: setZoomY,\n    setHeatmapTargetX: setTargetX,\n    setHeatmapTargetY: setTargetY,\n    setCellHighlight,\n    setGeneHighlight,\n    setCellSetSelection,\n    setCellSetColor,\n    setGeneExpressionColormapRange: setHeatmapControls,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.heatmap, coordinationScopes);\n\n  const observationsTitle = capitalize(observationsPluralLabel);\n  const variablesTitle = capitalize(variablesPluralLabel);\n\n  const [isRendering, setIsRendering] = useState(false);\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    HEATMAP_DATA_TYPES,\n  );\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [width, height, deckRef] = useDeckCanvasSize();\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cells] = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n  const [expressionMatrix] = useExpressionMatrixData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, false,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  const mergedCellSets = useMemo(() => mergeCellSets(\n    cellSets, additionalCellSets,\n  ), [cellSets, additionalCellSets]);\n\n  const cellColors = useMemo(() => getCellColors({\n    cellColorEncoding,\n    expressionData: expressionData && expressionData[0],\n    geneSelection,\n    cellSets: mergedCellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs: expressionMatrix,\n  }), [cellColorEncoding, mergedCellSets, geneSelection,\n    cellSetColor, cellSetSelection, expressionData, expressionMatrix]);\n\n  const getCellInfo = useCallback((cellId) => {\n    if (cellId) {\n      const cellInfo = cells[cellId];\n      return {\n        [`${capitalize(observationsLabel)} ID`]: cellId,\n        ...(cellInfo ? cellInfo.factors : {}),\n      };\n    }\n    return null;\n  }, [cells, observationsLabel]);\n\n  const getGeneInfo = useCallback((geneId) => {\n    if (geneId) {\n      return { [`${capitalize(variablesLabel)} ID`]: geneId };\n    }\n    return null;\n  }, [variablesLabel]);\n\n  const cellsCount = expressionMatrix && expressionMatrix.rows\n    ? expressionMatrix.rows.length : 0;\n  const genesCount = expressionMatrix && expressionMatrix.cols\n    ? expressionMatrix.cols.length : 0;\n  const selectedCount = cellColors.size;\n  return (\n    <TitleInfo\n      title={title}\n      info={`${cellsCount} ${pluralize(observationsLabel, observationsPluralLabel, cellsCount)} × ${genesCount} ${pluralize(variablesLabel, variablesPluralLabel, genesCount)},\n             with ${selectedCount} ${pluralize(observationsLabel, observationsPluralLabel, selectedCount)} selected`}\n      urls={urls}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady={isReady && !isRendering}\n    >\n      <Heatmap\n        ref={deckRef}\n        transpose={transpose}\n        viewState={{ zoom: zoomX, target: [targetX, targetY] }}\n        setViewState={({ zoom, target }) => {\n          setZoomX(zoom);\n          setZoomY(zoom);\n          setTargetX(target[0]);\n          setTargetY(target[1]);\n        }}\n        heatmapControls={heatmapControls}\n        setHeatmapControls={setHeatmapControls}\n        height={height}\n        width={width}\n        theme={theme}\n        uuid={uuid}\n        expressionMatrix={expressionMatrix}\n        cellColors={cellColors}\n        setIsRendering={setIsRendering}\n        setCellHighlight={setCellHighlight}\n        setGeneHighlight={setGeneHighlight}\n        setComponentHover={() => {\n          setComponentHover(uuid);\n        }}\n        updateViewInfo={setComponentViewInfo}\n        observationsTitle={observationsTitle}\n        variablesTitle={variablesTitle}\n      />\n      {!disableTooltip && (\n      <HeatmapTooltipSubscriber\n        parentUuid={uuid}\n        width={width}\n        height={height}\n        transpose={transpose}\n        getCellInfo={getCellInfo}\n        getGeneInfo={getGeneInfo}\n        cellHighlight={cellHighlight}\n        geneHighlight={geneHighlight}\n      />\n      )}\n    </TitleInfo>\n  );\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LensIcon from '@material-ui/icons/Lens';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { VIEWER_PALETTE } from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '70px',\n    height: '40px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  button: {\n    padding: '3px',\n    width: '16px',\n  },\n  icon: {\n    width: '17px',\n    height: '17px',\n    stroke: theme.palette.action.selected,\n    'stroke-width': '1px',\n  },\n}));\n\nconst ColorPalette = ({ handleChange }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container} aria-label=\"color-swatch\">\n      {VIEWER_PALETTE.map(color => (\n        <IconButton\n          className={classes.button}\n          key={color}\n          onClick={() => handleChange(color)}\n        >\n          <LensIcon\n            fontSize=\"small\"\n            style={{ color: `rgb(${color})` }}\n            className={classes.icon}\n          />\n        </IconButton>\n      ))}\n    </div>\n  );\n};\n\nexport default ColorPalette;\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PopperMenu, MuiSpan } from '../shared-mui/components';\n\nimport ColorPalette from './ColorPalette';\n\nconst useStyles = makeStyles(() => ({\n  menuButton: {\n    backgroundColor: 'transparent',\n  },\n  colors: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n}));\n\n/**\n * Dropdown for options for a channel on the three dots button.\n * @prop {function} handlePropertyChange Callback for changing property (color, IQR of sliders).\n * @prop {function} handleChannelRemove Callback for channel removal.\n * @prop {function} handleIQRUpdate Callback for IQR slider update.\n */\nfunction ChannelOptions({ handlePropertyChange, handleChannelRemove, handleIQRUpdate }) {\n  const [open, toggle] = useReducer(v => !v, false);\n\n  const classes = useStyles();\n\n  const handleColorSelect = (color) => {\n    handlePropertyChange('color', color);\n  };\n\n  const handleRemove = () => {\n    toggle();\n    handleChannelRemove();\n  };\n\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<MoreVertIcon fontSize=\"small\" />}\n      buttonClassName={classes.menuButton}\n    >\n      <MenuItem dense disableGutters onClick={handleRemove}>\n        <MuiSpan>Remove</MuiSpan>\n      </MenuItem>\n      <MenuItem dense disableGutters onClick={handleIQRUpdate}>\n        <MuiSpan>Use IQR</MuiSpan>\n      </MenuItem>\n      <MenuItem dense disableGutters className={classes.colors}>\n        <ColorPalette handleChange={handleColorSelect} />\n      </MenuItem>\n    </PopperMenu>\n  );\n}\n\nexport default ChannelOptions;\n","import { DTYPE_VALUES } from '@hms-dbmi/viv';\n\nfunction getDomains() {\n  const domains = {};\n  const needMin = ['Int8', 'Int16', 'Int32'];\n  Object.keys(DTYPE_VALUES).forEach((dtype) => {\n    const { max } = DTYPE_VALUES[dtype];\n    const min = needMin.includes(dtype) ? -(max + 1) : 0;\n    domains[dtype] = [min, max];\n  });\n  return domains;\n}\n\nexport const DOMAINS = getDomains();\n","import React from 'react';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\n\n/**\n * Dropdown for selecting a channel.\n * @prop {function} handleChange Callback for each new selection.\n * @prop {array} channelOptions List of available selections, like ['DAPI', 'FITC', ...].\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {number} selectionIndex Current numeric index of a selection.\n */\nexport function ChannelSelectionDropdown({\n  handleChange,\n  disabled,\n  channelOptions,\n  selectionIndex,\n}) {\n  return (\n    <Select\n      native\n      value={selectionIndex}\n      onChange={e => handleChange(Number(e.target.value))}\n    >\n      {channelOptions.map((opt, i) => (\n        <option disabled={disabled} key={opt} value={i}>\n          {opt}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Checkbox for toggling on/off of a channel.\n * @prop {string} color Current color for this channel.\n * @prop {boolean} checked Whether or not this channel is \"on\".\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {function} toggle Callback for toggling on/off.\n */\nexport function ChannelVisibilityCheckbox({\n  color, checked, toggle, disabled,\n}) {\n  return (\n    <Checkbox\n      onChange={toggle}\n      checked={checked}\n      disabled={disabled}\n      style={{ color, '&$checked': { color } }}\n    />\n  );\n}\n","import React, { useCallback, useState, useEffect } from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\n\nimport ChannelOptions from './ChannelOptions';\nimport { DOMAINS } from './constants';\nimport { getSourceFromLoader } from '../../utils';\nimport { getMultiSelectionStats } from './utils';\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n// Returns an rgb string for display, and changes the color (arr)\n// to use a grey for light theme + white color or if the colormap is on.\nexport const toRgbUIString = (on, arr, theme) => {\n  const color = (on || (theme === 'light' && arr.every(i => i === 255))) ? [220, 220, 220] : arr;\n  return `rgb(${color})`;\n};\n\nfunction abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) { --maxNaiveDigits; } // Wasted on \".\"\n  if (value < 1) { --maxNaiveDigits; } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n\n  const naive = Intl.NumberFormat(\n    'en-US',\n    {\n      maximumSignificantDigits: maxNaiveDigits,\n      useGrouping: false,\n    },\n  ).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n\n/**\n * Slider for controlling current colormap.\n * @prop {string} color Current color for this channel.\n * @prop {arry} slider Current value of the slider.\n * @prop {function} handleChange Callback for each slider change.\n * @prop {array} domain Current max/min allowable slider values.\n */\nfunction ChannelSlider({\n  color, slider = [0, 0], handleChange, domain = [0, 0], dtype, disabled,\n}) {\n  const [min, max] = domain;\n  const handleChangeDebounced = useCallback(\n    debounce(handleChange, 3, { trailing: true }), [handleChange],\n  );\n  const step = max - min < 500 && dtype === 'Float32' ? (max - min) / 500 : 1;\n  return (\n    <Slider\n      value={slider}\n      valueLabelFormat={abbreviateNumber}\n      onChange={(e, v) => handleChangeDebounced(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${color}-${slider}`}\n      min={min}\n      max={max}\n      step={step}\n      orientation=\"horizontal\"\n      style={{ color, marginTop: '7px' }}\n      disabled={disabled}\n    />\n  );\n}\n\n/**\n * Controller for the handling the colormapping sliders.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {array} slider Current slider range.\n * @prop {array} color Current color for this channel.\n * @prop {array} domain Current max/min for this channel.\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {boolean} colormapOn Whether or not the colormap (viridis, magma etc.) is on.\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {function} handleIQRUpdate When the IQR button is clicked, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n */\nfunction RasterChannelController({\n  visibility = false,\n  slider,\n  color,\n  channels,\n  channelId,\n  domainType: newDomainType,\n  dimName,\n  theme,\n  loader,\n  colormapOn,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  handleIQRUpdate,\n  selectionIndex,\n  isLoading,\n  use3d: newUse3d,\n}) {\n  const { dtype } = getSourceFromLoader(loader);\n  const [domain, setDomain] = useState(null);\n  const [domainType, setDomainType] = useState(null);\n  const [use3d, setUse3d] = useState(null);\n  const [selection, setSelection] = useState([{ ...channels[channelId].selection }]);\n  const rgbColor = toRgbUIString(colormapOn, color, theme);\n\n  useEffect(() => {\n    // Use mounted to prevent state updates/re-renders after the component has been unmounted.\n    // All state updates should happen within the mounted check.\n    let mounted = true;\n    if (dtype && loader && channels) {\n      const loaderSelection = [{ ...channels[channelId].selection }];\n      let domains;\n      const hasDomainChanged = newDomainType !== domainType;\n      const has3dChanged = use3d !== newUse3d;\n      const hasSelectionChanged = !isEqual(loaderSelection, selection);\n      if (hasDomainChanged || hasSelectionChanged || has3dChanged) {\n        if (newDomainType === 'Full') {\n          domains = [DOMAINS[dtype]];\n          const [newDomain] = domains;\n          if (mounted) {\n            setDomain(newDomain);\n            setDomainType(newDomainType);\n            if (hasSelectionChanged) {\n              setSelection(loaderSelection);\n            } if (has3dChanged) {\n              setUse3d(newUse3d);\n            }\n          }\n        } else {\n          getMultiSelectionStats({\n            loader: loader.data,\n            selections: loaderSelection,\n            use3d: newUse3d,\n          }).then((stats) => {\n            // eslint-disable-next-line prefer-destructuring\n            domains = stats.domains;\n            const [newDomain] = domains;\n            if (mounted) {\n              setDomain(newDomain);\n              setDomainType(newDomainType);\n              if (hasSelectionChanged) {\n                setSelection(loaderSelection);\n              } if (has3dChanged) {\n                setUse3d(newUse3d);\n              }\n            }\n          });\n        }\n      }\n    }\n    return () => { mounted = false; };\n  }, [domainType, channels, channelId, loader, dtype, newDomainType, selection, newUse3d, use3d]);\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"column\" m={1} justify=\"center\">\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={10}>\n          <ChannelSelectionDropdown\n            handleChange={v => handlePropertyChange('selection', createSelection(v))}\n            selectionIndex={selectionIndex}\n            channelOptions={channelOptions}\n            disabled={isLoading}\n          />\n        </Grid>\n        <Grid item xs={1} style={{ marginTop: '4px' }}>\n          <ChannelOptions\n            handlePropertyChange={handlePropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            disabled={isLoading}\n          />\n        </Grid>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item xs={2}>\n          <ChannelVisibilityCheckbox\n            color={rgbColor}\n            checked={visibility}\n            toggle={() => handlePropertyChange('visible', !visibility)}\n            disabled={isLoading}\n          />\n        </Grid>\n        <Grid item xs={9}>\n          <ChannelSlider\n            color={rgbColor}\n            slider={slider}\n            domain={domain || DOMAINS[dtype]}\n            dtype={dtype}\n            handleChange={v => handlePropertyChange('slider', v)}\n            disabled={isLoading}\n          />\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default RasterChannelController;\n","import React from 'react';\n\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */\nfunction BitmaskChannelController({\n  visibility = false,\n  dimName,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  selectionIndex,\n  disableOptions = false,\n}) {\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\">\n      <Grid item xs={2}>\n        <ChannelVisibilityCheckbox\n          color={[220, 220, 220]}\n          checked={visibility}\n          toggle={() => handlePropertyChange('visible', !visibility)}\n        />\n      </Grid>\n      <Grid item xs={9}>\n        <ChannelSelectionDropdown\n          handleChange={v => handlePropertyChange('selection', createSelection(v))}\n          selectionIndex={selectionIndex}\n          disableOptions={disableOptions}\n          channelOptions={channelOptions}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <IconButton onClick={handleChannelRemove} style={{ padding: '6px 6px 6px 0px' }}>\n          <RemoveCircleIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default BitmaskChannelController;\n","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport Grid from '@material-ui/core/Grid';\n\n\nexport const useOptionStyles = withStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  span: {\n    width: '70px',\n    textAlign: 'center',\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  colors: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n    paddingLeft: '2px',\n    paddingRight: '2px',\n  },\n  popper: {\n    zIndex: 4,\n  },\n}));\n\nconst sharedControllerStyles = {\n  width: '100%',\n  flexDirection: 'column',\n};\n\nexport const useControllerSectionStyles = makeStyles(() => ({\n  root: {\n    ...sharedControllerStyles,\n    padding: '0px 8px',\n  },\n}));\n\nexport const StyledExpansionPanelDetails = withStyles(() => ({\n  root: {\n    ...sharedControllerStyles,\n    padding: '8px 8px 24px 8px',\n  },\n}))(ExpansionPanelDetails);\n\nexport const StyledExpansionPanelSummary = withStyles(theme => ({\n  root: {\n    padding: '0px 8px',\n  },\n  content: {\n    margin: '4px 0px',\n    minWidth: '0px',\n  },\n  expanded: {\n    marginBottom: theme.spacing(-3),\n    top: theme.spacing(-1),\n  },\n  expandIcon: {\n    '&$expanded': {\n      top: theme.spacing(-1.3),\n    },\n  },\n}))(ExpansionPanelSummary);\n\nexport const StyledInputLabel = withStyles(() => ({\n  root: {\n    fontSize: '14px',\n  },\n}))(InputLabel);\n\nexport const OverflowEllipsisGrid = withStyles(() => ({\n  item: {\n    width: '100%',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n  },\n}))(Grid);\n\nexport const StyledSelectionSlider = withStyles(() => ({\n  root: {\n    marginTop: '7px',\n  },\n  markActive: {\n    backgroundColor: 'rgba(128, 128, 128, 0.7)',\n  },\n}))(Slider);\n","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { useControllerSectionStyles } from './styles';\n\nexport default function VectorLayerController(props) {\n  const {\n    label,\n    layer,\n    layerType,\n    handleLayerChange,\n  } = props;\n\n  const slider = layer.opacity;\n  const isOn = layer.visible;\n\n  function handleSliderChange(v) {\n    if (layerType === 'cells') {\n      const stroked = v < 0.7;\n      handleLayerChange({ ...layer, opacity: v, stroked });\n    } else {\n      handleLayerChange({ ...layer, opacity: v });\n    }\n  }\n\n  function handleCheckBoxChange(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  const classes = useControllerSectionStyles();\n  return (\n    <Grid item style={{ marginTop: '10px' }}>\n      <Paper className={classes.root}>\n        <Typography\n          style={{\n            padding: '15px 8px 0px 8px',\n            marginBottom: '-5px',\n          }}\n        >\n          {label}\n        </Typography>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item xs={2}>\n            <Checkbox color=\"primary\" checked={isOn} onChange={(e, v) => handleCheckBoxChange(v)} />\n          </Grid>\n          <Grid item xs={9} style={{ paddingRight: '8px' }}>\n            <Slider\n              value={slider}\n              min={0}\n              max={1}\n              step={0.001}\n              onChange={(e, v) => handleSliderChange(v)}\n              style={{ marginTop: '7px' }}\n              orientation=\"horizontal\"\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport range from 'lodash/range';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { getDefaultInitialViewState } from '@hms-dbmi/viv';\n\nimport { getBoundingCube, getMultiSelectionStats } from './utils';\nimport { COLORMAP_OPTIONS } from '../utils';\nimport { DEFAULT_RASTER_DOMAIN_TYPE } from '../spatial/constants';\nimport { StyledSelectionSlider } from './styles';\n\nconst DOMAIN_OPTIONS = ['Full', 'Min/Max'];\n\nfunction formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  // eslint-disable-next-line no-restricted-properties\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nconst getStatsForResolution = (loader, resolution) => {\n  const { shape, labels } = loader[resolution];\n  const height = shape[labels.indexOf('y')];\n  const width = shape[labels.indexOf('x')];\n  const depth = shape[labels.indexOf('z')];\n  const depthDownsampled = Math.floor(depth / (2 ** resolution));\n  // Check memory allocation limits for Float32Array (used in XR3DLayer for rendering)\n  const totalBytes = 4 * height * width * depthDownsampled;\n  return {\n    height, width, depthDownsampled, totalBytes,\n  };\n};\n\nconst canLoadResolution = (loader, resolution) => {\n  const { totalBytes } = getStatsForResolution(loader, resolution);\n  const maxHeapSize = window.performance?.memory\n    && window.performance?.memory?.jsHeapSizeLimit / 2;\n  const maxSize = maxHeapSize || (2 ** 31) - 1;\n  return totalBytes < maxSize;\n};\n\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {Object} loader Loader object with metadata.\n * @prop {function} handleMultiPropertyChange Function to propgate multiple layer changes at once.\n * This prevents updates from overridding each other.\n * @prop {number} resolution Current 3D resolution.\n * @prop {boolean} disable3d Whether or not to enable 3D selection\n * @prop {function} setRasterLayerCallback Setter for callbacks that fire after raster/volume loads.\n * @prop {function} setAreAllChannelsLoading Setter for whether or not a given channel is loading.\n * @prop {Object} setViewState Setter for the current view state.\n * @prop {number} spatialHeight Height of the spatial component.\n * @prop {number} spatialWidth Width of the spatial component.\n * @prop {object} channels Channels object.\n * @prop {boolean} use3d Whether or not 3D is enabled for this layer.\n */\nfunction VolumeDropdown({\n  loader: loaderWithMeta,\n  handleMultiPropertyChange,\n  resolution: currResolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  channels,\n  use3d,\n  modelMatrix,\n}) {\n  const selections = channels.map(i => i.selection);\n  const { data: loader } = loaderWithMeta;\n  const handleChange = async (val) => {\n    // val is the resolution - null indicates 2D\n    const shouldUse3D = typeof val === 'number';\n    setAreAllChannelsLoading(true);\n    setRasterLayerCallback(() => {\n      setAreAllChannelsLoading(false);\n      setRasterLayerCallback(null);\n    });\n    if (shouldUse3D) {\n      const [xSlice, ySlice, zSlice] = getBoundingCube(loader);\n      const propertiesChanged = {\n        resolution: val,\n        xSlice,\n        ySlice,\n        zSlice,\n        use3d: shouldUse3D,\n      };\n      // Only make the fetch if needed i.e if the 3d was just being turned on.\n      if (!use3d) {\n        const { sliders } = await getMultiSelectionStats({\n          loader,\n          selections,\n          use3d: shouldUse3D,\n        });\n        propertiesChanged.channels = [...channels];\n        propertiesChanged.channels.forEach((ch, i) => {\n          // eslint-disable-next-line no-param-reassign\n          ch.slider = sliders[i];\n        });\n      }\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange(propertiesChanged);\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 1.5, true, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: 0,\n        rotationOrbit: 0,\n      });\n    } else {\n      const { sliders } = await getMultiSelectionStats({\n        loader, selections, use3d: shouldUse3D,\n      });\n      const newChannels = [...channels];\n      newChannels.forEach((ch, i) => {\n        // eslint-disable-next-line no-param-reassign\n        ch.slider = sliders[i];\n      });\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange({\n        resolution: val,\n        use3d: shouldUse3D,\n        spatialAxisFixed: false,\n        channels: newChannels,\n      });\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 0.5, false, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: null,\n        rotationOrbit: null,\n        orbitAxis: null,\n      });\n    }\n  };\n  const { labels, shape } = Array.isArray(loader) ? loader[0] : loader;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  return (\n    <>\n      <Select\n        native\n        value={currResolution}\n        onChange={e => handleChange(\n          e.target.value === '2D' ? e.target.value : Number(e.target.value),\n        )\n        }\n      >\n        {\n          <option key=\"2D\" value=\"2D\">\n            2D Visualization\n          </option>\n        }\n        {Array.from({ length: loader.length })\n          .fill(0)\n          // eslint-disable-next-line no-unused-vars\n          .map((_, resolution) => {\n            if (loader) {\n              if (canLoadResolution(loader, resolution)) {\n                const {\n                  height,\n                  width,\n                  depthDownsampled,\n                  totalBytes,\n                } = getStatsForResolution(loader, resolution);\n                return (\n                  <option\n                    key={`(${height}, ${width}, ${depthDownsampled})`}\n                    value={resolution}\n                    disabled={\n                      disable3d\n                      || !hasZStack\n                    }\n                  >\n                    {`3D: ${resolution}x Downsampled, ~${formatBytes(\n                      totalBytes,\n                    )} per channel, (${height}, ${width}, ${depthDownsampled})`}\n                  </option>\n                );\n              }\n            }\n            return null;\n          })}\n      </Select>\n    </>\n  );\n}\n\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {string} value Currently selected value for the colormap.\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in colormap.\n */\nfunction ColormapSelect({ value, inputId, handleChange }) {\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value === '' ? null : e.target.value)}\n      value={value}\n      inputProps={{ name: 'colormap', id: inputId }}\n      style={{ width: '100%' }}\n    >\n      <option aria-label=\"None\" value=\"\">None</option>\n      {COLORMAP_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction TransparentColorCheckbox({ value, handleChange }) {\n  return (\n    <Checkbox\n      style={{ float: 'left', padding: 0 }}\n      color=\"default\"\n      onChange={() => {\n        if (value) {\n          handleChange(null);\n        } else {\n          handleChange([0, 0, 0]);\n        }\n      }}\n      checked={Boolean(value)}\n    />\n  );\n}\n\n/**\n * Wrapper for the slider that updates opacity.\n * @prop {string} value Currently selected value between 0 and 1.\n * @prop {function} handleChange Callback for every change in opacity.\n */\nfunction OpacitySlider({ value, handleChange }) {\n  return (\n    <Slider\n      value={value}\n      onChange={(e, v) => handleChange(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => 'opacity slider'}\n      min={0}\n      max={1}\n      step={0.01}\n      orientation=\"horizontal\"\n      style={{ marginTop: '7px' }}\n    />\n  );\n}\n\n/**\n * Wrapper for the dropdown that chooses the domain type.\n * @prop {string} value Currently selected value (i.e 'Max/Min').\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in domain.\n */\nfunction SliderDomainSelector({ value, inputId, handleChange }) {\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value)}\n      value={value}\n      inputProps={{ name: 'domain-selector', id: inputId }}\n      style={{ width: '100%' }}\n    >\n      {DOMAIN_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Wrapper for the slider that chooses global selections (z, t etc.).\n * @prop {string} field The dimension this selects for (z, t etc.).\n * @prop {number} value Currently selected index (1, 4, etc.).\n * @prop {function} handleChange Callback for every change in selection.\n * @prop {function} possibleValues All available values for the field.\n */\nfunction GlobalSelectionSlider({\n  field,\n  value,\n  handleChange,\n  possibleValues,\n}) {\n  return (\n    <StyledSelectionSlider\n      value={value}\n      // See https://github.com/hubmapconsortium/vitessce-image-viewer/issues/176 for why\n      // we have the two handlers.\n      onChange={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      onChangeCommitted={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${field} slider`}\n      marks={possibleValues.map(val => ({ value: val }))}\n      min={Number(possibleValues[0])}\n      max={Number(possibleValues.slice(-1))}\n      orientation=\"horizontal\"\n      step={null}\n    />\n  );\n}\n\n/**\n * Wrapper for each of the options to show its name and then its UI component.\n * @prop {string} name Display name for option.\n * @prop {number} opacity Current opacity value.\n * @prop {string} inputId An id for css.\n * @prop {object} children Components to be rendered next to the name (slider, dropdown etc.).\n */\nfunction LayerOption({ name, inputId, children }) {\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n      <Grid item xs={6}>\n        <InputLabel htmlFor={inputId}>{name}:</InputLabel>\n      </Grid>\n      <Grid item xs={6}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\n/**\n * Gloabl options for all channels (opacity, colormap, etc.).\n * @prop {string} colormap What colormap is currently selected (None, viridis etc.).\n * @prop {number} opacity Current opacity value.\n * @prop {function} handleColormapChange Callback for when colormap changes.\n * @prop {function} handleOpacityChange Callback for when opacity changes.\n * @prop {object} globalControlLabels All available options for global control (z and t).\n * @prop {function} handleGlobalChannelsSelectionChange Callback for global selection changes.\n * @prop {function} handleDomainChange Callback for domain type changes (full or min/max).\n * @prop {array} channels Current channel object for inferring the current global selection.\n * @prop {array} dimensions Currently available dimensions (channel, z, t etc.).\n * @prop {string} domainType One of Max/Min or Full (soon presets as well).\n * @prop {boolean} isRgb Whether or not the image is rgb (so we don't need colormap controllers).\n */\nfunction LayerOptions({\n  colormap,\n  opacity,\n  handleColormapChange,\n  handleOpacityChange,\n  handleTransparentColorChange,\n  globalControlLabels,\n  globalLabelValues,\n  handleGlobalChannelsSelectionChange,\n  handleSliderChange,\n  handleDomainChange,\n  transparentColor,\n  channels,\n  domainType,\n  isRgb,\n  shouldShowTransparentColor,\n  shouldShowDomain,\n  shouldShowColormap,\n  use3d,\n  loader,\n  handleMultiPropertyChange,\n  resolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) {\n  const { labels, shape } = Array.isArray(loader.data) ? loader.data[0] : loader.data;\n  const hasDimensionsAndChannels = labels.length > 0 && channels.length > 0;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  return (\n    <Grid container direction=\"column\" style={{ width: '100%' }}>\n      {hasZStack\n        && !disable3d\n        && (\n        <VolumeDropdown\n          loader={loader}\n          handleSliderChange={handleSliderChange}\n          handleDomainChange={handleDomainChange}\n          channels={channels}\n          handleMultiPropertyChange={handleMultiPropertyChange}\n          resolution={resolution}\n          disable3d={disable3d}\n          setRasterLayerCallback={setRasterLayerCallback}\n          setAreAllChannelsLoading={setAreAllChannelsLoading}\n          setViewState={setViewState}\n          spatialHeight={spatialHeight}\n          spatialWidth={spatialWidth}\n          use3d={use3d}\n          modelMatrix={modelMatrix}\n        />\n        )\n      }\n      {hasDimensionsAndChannels\n        && !use3d\n        && globalControlLabels.map(\n          field => shape[labels.indexOf(field)] > 1 && (\n          <LayerOption name={field} inputId={`${field}-slider`} key={field}>\n            <GlobalSelectionSlider\n              field={field}\n              value={globalLabelValues[field]}\n              handleChange={handleGlobalChannelsSelectionChange}\n              possibleValues={range(shape[labels.indexOf(field)])}\n            />\n          </LayerOption>\n          ),\n        )}\n      {!isRgb ? (\n        <>\n          {shouldShowColormap && (\n            <Grid item>\n              <LayerOption name=\"Colormap\" inputId=\"colormap-select\">\n                <ColormapSelect\n                  value={colormap || ''}\n                  inputId=\"colormap-select\"\n                  handleChange={handleColormapChange}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n          {shouldShowDomain && (\n            <Grid item>\n              <LayerOption name=\"Domain\" inputId=\"domain-selector\">\n                <SliderDomainSelector\n                  value={domainType || DEFAULT_RASTER_DOMAIN_TYPE}\n                  handleChange={(value) => {\n                    handleDomainChange(value);\n                  }}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n        </>\n      ) : null}\n      {!use3d && (\n        <Grid item>\n          <LayerOption name=\"Opacity\" inputId=\"opacity-slider\">\n            <OpacitySlider value={opacity} handleChange={handleOpacityChange} />\n          </LayerOption>\n        </Grid>\n      )}\n      {shouldShowTransparentColor && !use3d && (\n        <Grid item>\n          <LayerOption\n            name=\"Zero Transparent\"\n            inputId=\"transparent-color-selector\"\n          >\n            <TransparentColorCheckbox\n              value={transparentColor}\n              handleChange={handleTransparentColorChange}\n            />\n          </LayerOption>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default LayerOptions;\n","import React from 'react';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Slider from '@material-ui/core/Slider';\nimport { RENDERING_MODES, getDefaultInitialViewState } from '@hms-dbmi/viv';\nimport { abbreviateNumber, getBoundingCube } from './utils';\n\nconst useSlicerStyles = makeStyles(theme => createStyles({\n  enabled: {},\n  disabled: {\n    color: theme.palette.text.disabled,\n    // Because of the .5 opacity of the disabled color in the theme, and the fact\n    // that there are multiple overlaid parts to the slider,\n    // this needs to be set manually for the desired effect.\n    '& .MuiSlider-thumb': {\n      color: 'rgb(100, 100, 100, 1.0)',\n    },\n    '&  .MuiSlider-track': {\n      color: 'rgb(100, 100, 100, 1.0)',\n    },\n  },\n}));\n\nconst Slicer = ({\n  xSlice,\n  ySlice,\n  zSlice,\n  handleSlicerSetting,\n  loader,\n  use3d,\n}) => {\n  const [xSliceInit, ySliceInit, zSliceInit] = getBoundingCube(loader.data);\n  const sliceValuesAndSetSliceFunctions = [\n    [\n      xSlice,\n      xSliceNew => handleSlicerSetting('x', xSliceNew),\n      'x',\n      xSliceInit,\n    ],\n    [\n      ySlice,\n      ySliceNew => handleSlicerSetting('y', ySliceNew),\n      'y',\n      ySliceInit,\n    ],\n    [\n      zSlice,\n      zSliceNew => handleSlicerSetting('z', zSliceNew),\n      'z',\n      zSliceInit,\n    ],\n  ];\n  const classes = useSlicerStyles();\n  const Slicers = sliceValuesAndSetSliceFunctions.map(\n    ([val, setVal, label, [min, max]]) => (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"center\"\n        key={label}\n      >\n        <Grid item xs={1}>\n          <Typography\n            className={!use3d ? classes.disabled : classes.enabled}\n            style={{ marginBottom: 0 }}\n          >\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={11}>\n          <Slider\n            disabled={!use3d}\n            className={!use3d ? classes.disabled : classes.enabled}\n            value={val}\n            onChange={(e, v) => setVal(v)}\n            valueLabelDisplay=\"auto\"\n            valueLabelFormat={v => abbreviateNumber(v)}\n            getAriaLabel={() => `${label} slider`}\n            min={min}\n            max={max}\n            step={0.005}\n            orientation=\"horizontal\"\n          />\n        </Grid>\n      </Grid>\n    ),\n  );\n  return (\n    <>\n      <Typography\n        className={!use3d ? classes.disabled : classes.enabled}\n        style={{ marginTop: 16, marginBottom: 0 }}\n      >\n        Clipping Planes:{' '}\n      </Typography>{' '}\n      {Slicers}\n    </>\n  );\n};\n\nconst renderingOptions = Object.values(RENDERING_MODES);\n\nfunction RenderingModeSelect({\n  handleRenderingModeChange,\n  renderingMode,\n  use3d,\n}) {\n  // Empty option allows for displaying the title of the dropdown fully in the UI.\n  const options = !use3d ? [...renderingOptions, ''] : renderingOptions;\n  return (\n    <FormControl fullWidth>\n      <InputLabel htmlFor=\"rendering-mode-select\">Rendering Mode</InputLabel>\n      <Select\n        native\n        onChange={e => handleRenderingModeChange(e.target.value)}\n        value={use3d ? renderingMode : ''}\n        inputProps={{\n          name: 'rendering-mode',\n          id: 'rendering-mode-select',\n        }}\n        disabled={!use3d}\n      >\n        {options.map(name => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nconst ReCenterButton = ({\n  setViewState,\n  use3d,\n  spatialHeight,\n  spatialWidth,\n  loader,\n  modelMatrix,\n}) => (\n  <Grid item xs=\"auto\" key=\"recenter\">\n    <Button\n      onClick={() => {\n        const defaultViewState = getDefaultInitialViewState(\n          loader.data,\n          { height: spatialHeight, width: spatialWidth },\n          1.5,\n          use3d,\n          new Matrix4(modelMatrix),\n        );\n        setViewState({\n          ...defaultViewState,\n          rotationX: 0,\n          rotationOrbit: 0,\n        });\n      }\n        }\n      disabled={!use3d}\n      style={{\n        padding: 0,\n        marginBottom: 6,\n      }}\n    >\n        Re-Center\n    </Button>\n  </Grid>\n);\n\nconst VolumeOptions = ({\n  handleSlicerSetting,\n  handleRenderingModeChange,\n  renderingMode,\n  xSlice,\n  ySlice,\n  zSlice,\n  use3d,\n  loader,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) => (\n  <>\n    <RenderingModeSelect\n      handleRenderingModeChange={handleRenderingModeChange}\n      renderingMode={renderingMode}\n      use3d={use3d}\n    />\n    <Slicer\n      xSlice={xSlice}\n      ySlice={ySlice}\n      zSlice={zSlice}\n      handleSlicerSetting={handleSlicerSetting}\n      use3d={use3d}\n      loader={loader}\n    />\n    <ReCenterButton\n      setViewState={setViewState}\n      use3d={use3d}\n      spatialHeight={spatialHeight}\n      spatialWidth={spatialWidth}\n      loader={loader}\n      modelMatrix={modelMatrix}\n    />\n  </>\n);\n\nexport default VolumeOptions;\n","import React, { useState } from 'react';\nimport { MAX_SLIDERS_AND_CHANNELS, getChannelStats } from '@hms-dbmi/viv';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Slider from '@material-ui/core/Slider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport LayerOptions from './LayerOptions';\nimport VolumeOptions from './VolumeOptions';\nimport {\n  useControllerSectionStyles,\n  StyledExpansionPanelDetails,\n  StyledExpansionPanelSummary,\n  StyledInputLabel,\n  OverflowEllipsisGrid,\n} from './styles';\nimport { getMultiSelectionStats } from './utils';\n\nimport { GLOBAL_LABELS } from '../spatial/constants';\nimport { getSourceFromLoader, isRgb } from '../../utils';\nimport { DOMAINS } from './constants';\n\n\nfunction TabPanel(props) {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\n\n// Set the domain of the sliders based on either a full range or min/max.\nasync function getDomainsAndSliders(loader, loaderSelection, domainType, use3d) {\n  let domains;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data, selections: loaderSelection, use3d,\n  });\n  const { sliders } = stats;\n  if (domainType === 'Min/Max') {\n    // eslint-disable-next-line prefer-destructuring\n    domains = stats.domains;\n  } if (domainType === 'Full') {\n    const source = getSourceFromLoader(loader);\n    domains = loaderSelection.map(() => DOMAINS[source.dtype]);\n  }\n  return { domains, sliders };\n}\n\nconst buttonStyles = { borderStyle: 'dashed', marginTop: '10px', fontWeight: 400 };\n\n/**\n * Controller for the various imaging options (color, opactiy, sliders etc.)\n * @prop {object} imageData Image config object, one of the `images` in the raster schema.\n * @prop {object} layerId Randomly generated id for the image layer that this controller handles.\n * @prop {function} handleLayerRemove Callback for handling the removal of a layer.\n * @prop {object} loader Loader object for the current imaging layer.\n * @prop {function} handleLayerChange Callback for handling the changing of layer properties.\n */\nexport default function LayerController(props) {\n  const {\n    layer, name, loader, theme,\n    handleLayerRemove, handleLayerChange,\n    shouldShowTransparentColor,\n    shouldShowDomain, shouldShowColormap, ChannelController,\n    setViewState, disable3d, setRasterLayerCallback,\n    setAreLayerChannelsLoading, areLayerChannelsLoading, disabled,\n    spatialHeight, spatialWidth,\n  } = props;\n\n  const {\n    colormap,\n    opacity,\n    channels,\n    transparentColor,\n    renderingMode,\n    xSlice,\n    ySlice,\n    zSlice,\n    resolution,\n    use3d,\n    modelMatrix,\n  } = layer;\n  const firstSelection = channels[0]?.selection || {};\n\n  const { data, channels: channelOptions } = loader;\n  const [tab, setTab] = useState(0);\n\n  const handleTabChange = (event, newTab) => {\n    setTab(newTab);\n  };\n  const { labels, shape } = Array.isArray(data) ? data[data.length - 1] : data;\n  const [domainType, setDomainType] = useState(layer.domainType);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [globalLabelValues, setGlobalLabelValues] = useState(\n    GLOBAL_LABELS\n      .filter(field => typeof firstSelection[field] === 'number')\n      .reduce((o, key) => ({ ...o, [key]: firstSelection[key] }), {}),\n  );\n\n  function setVisible(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  function setColormap(v) {\n    handleLayerChange({ ...layer, colormap: v });\n  }\n\n  function setOpacity(v) {\n    handleLayerChange({ ...layer, opacity: v });\n  }\n\n  function setChannels(v) {\n    handleLayerChange({ ...layer, channels: v });\n  }\n  function setTransparentColor(v) {\n    handleLayerChange({ ...layer, transparentColor: v });\n  }\n  function setRenderingMode(v) {\n    handleLayerChange({ ...layer, renderingMode: v });\n  }\n\n  function handleMultiPropertyChange(obj) {\n    handleLayerChange({ ...layer, ...obj });\n  }\n\n  function handleSlicerSetting(slice, val) {\n    handleLayerChange({ ...layer, [`${slice}Slice`]: val });\n  }\n\n  function setChannelsAndDomainType(newChannels, newDomainType) {\n    handleLayerChange({\n      ...layer,\n      channels: newChannels,\n      domainType: newDomainType,\n    });\n  }\n\n  function setChannel(v, i) {\n    const newChannels = [...channels];\n    newChannels[i] = v;\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function addChannel(v) {\n    const newChannels = [...channels, v];\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function removeChannel(i) {\n    const newChannels = [...channels];\n    newChannels.splice(i, 1);\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  const setAreAllChannelsLoading = (val) => {\n    const newAreLayerChannelsLoading = channels.map(() => val);\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n  };\n\n  // Handles adding a channel, creating a default selection\n  // for the current global settings and domain type.\n  const handleChannelAdd = async () => {\n    const selection = {};\n    labels.forEach((label) => {\n      // Set new image to default selection for non-global selections (0)\n      // and use current global selection otherwise.\n      selection[label] = GLOBAL_LABELS.includes(label)\n        ? (globalLabelValues[label] || 0)\n        : 0;\n    });\n    const { domains, sliders } = await getDomainsAndSliders(loader, [selection], domainType, use3d);\n    const domain = domains[0];\n    const slider = domain;\n    const color = [255, 255, 255];\n    const visible = true;\n    const newChannelId = channels.length;\n    const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n    newAreLayerChannelsLoading[newChannelId] = true;\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n    const channel = {\n      selection, slider, visible, color,\n    };\n    setRasterLayerCallback(() => {\n      setChannel({ ...channel, slider: sliders[0] }, newChannelId);\n      const areLayerChannelsLoadingCallback = [...newAreLayerChannelsLoading];\n      areLayerChannelsLoadingCallback[newChannelId] = false;\n      setAreLayerChannelsLoading(areLayerChannelsLoadingCallback);\n      setRasterLayerCallback(null);\n    });\n    addChannel(channel);\n  };\n\n  const handleDomainChange = async (value) => {\n    setDomainType(value);\n    const loaderSelection = channels.map(\n      channel => channel.selection,\n    );\n    let sliders = channels.map(\n      channel => channel.slider,\n    );\n    const { domains } = await getDomainsAndSliders(\n      loader,\n      loaderSelection,\n      value,\n      use3d,\n    );\n\n    // If it's the right-most slider, we take the minimum of that and the new value.\n    // Otherwise, we use the maximum of the left-hand side and the new value.\n    sliders = sliders.map(\n      (slider, i) => {\n        const [left, right] = slider;\n        return [\n          Math.max(left, domains[i][0]),\n          Math.min(right, domains[i][1]),\n        ];\n      },\n    );\n\n    const newChannels = channels.map((c, i) => ({ ...c, slider: sliders[i] }));\n    setChannelsAndDomainType(newChannels, value);\n  };\n\n  // This call updates all channel selections with new global selection from the UI.\n  const handleGlobalChannelsSelectionChange = async ({ selection, event }) => {\n    const loaderSelection = channels.map(channel => ({\n      ...channel.selection,\n      ...selection,\n    }));\n    const canUpdateChannels = event.type === 'mouseup' || event.type === 'keydown';\n    // Only update domains on a mouseup event for the same reason as above.\n    if (canUpdateChannels) {\n      setAreAllChannelsLoading(true);\n      getDomainsAndSliders(loader, loaderSelection, domainType, use3d).then(({ sliders }) => {\n        const newChannelsWithSelection = channels.map(c => ({\n          ...c,\n          selection: { ...c.selection, ...selection },\n        }));\n        // Set the callback before changing the selection\n        // so the callback is used when the layer (re)loads its data.\n        setRasterLayerCallback(() => {\n          setRasterLayerCallback(null);\n          setAreAllChannelsLoading(false);\n          const newChannelsWithSliders = [...newChannelsWithSelection].map(\n            (c, i) => ({\n              ...c,\n              slider: sliders[i],\n            }),\n          );\n          setChannels(newChannelsWithSliders);\n        });\n        setChannels(newChannelsWithSelection);\n      });\n    }\n    setGlobalLabelValues(prev => ({ ...prev, ...selection }));\n  };\n\n  let channelControllers = [];\n  if (labels.length > 0) {\n    const channelLabel = labels.find(c => c === 'channel' || c === 'c') || labels[0];\n    // Create the channel controllers for each channel.\n    channelControllers = channels.map(\n      // c is an object like { color, selection, slider, visible }.\n      (c, channelId) => {\n        // Update the auxiliary store with the current loading state of a channel.\n        const setIsLoading = (val) => {\n          const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n          newAreLayerChannelsLoading[channelId] = val;\n          setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n        };\n        // Change one property of a channel (for now - soon\n        // nested structures allowing for multiple z/t selecitons at once, for example).\n        const handleChannelPropertyChange = (property, value) => {\n          // property is something like \"selection\" or \"slider.\"\n          // value is the actual change, like { channel: \"DAPI\" }.\n          const update = { [property]: value };\n          if (property === 'selection') {\n            // Channel is loading until the layer callback is called\n            // by the layer, which fetches the raster data.\n            setIsLoading(true);\n            update.selection = {\n              ...globalLabelValues,\n              ...update.selection,\n            };\n            setChannel({ ...c, ...update }, channelId);\n            // Call back for raster layer handles update of UI\n            // like sliders and the loading state of the channel.\n            setRasterLayerCallback(async () => {\n              const loaderSelection = [\n                { ...channels[channelId][property], ...value },\n              ];\n              const { sliders } = await getDomainsAndSliders(\n                loader, loaderSelection, domainType, use3d,\n              );\n              [update.slider] = sliders;\n              setChannel({ ...c, ...update }, channelId);\n              setRasterLayerCallback(null);\n              setIsLoading(false);\n            });\n          } else {\n            setChannel({ ...c, ...update }, channelId);\n          }\n        };\n        const handleChannelRemove = () => {\n          removeChannel(channelId);\n        };\n        const handleIQRUpdate = async () => {\n          const { data: loaderData } = loader;\n          const source = Array.isArray(loaderData) ? loaderData[loaderData.length - 1] : loaderData;\n          const raster = await source.getRaster({\n            selection: channels[channelId].selection,\n          });\n          const stats = getChannelStats(raster.data);\n          const { q1, q3 } = stats;\n          setChannel({ ...c, slider: [q1, q3] }, channelId);\n        };\n        return (\n          <ChannelController\n            // eslint-disable-next-line react/no-array-index-key\n            key={`channel-controller-${channelId}`}\n            dimName={channelLabel}\n            visibility={c.visible}\n            selectionIndex={c.selection[channelLabel]}\n            slider={c.slider}\n            color={c.color}\n            channels={channels}\n            channelId={channelId}\n            domainType={domainType}\n            loader={loader}\n            globalLabelValues={globalLabelValues}\n            theme={theme}\n            channelOptions={channelOptions}\n            colormapOn={Boolean(colormap)}\n            handlePropertyChange={handleChannelPropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            setRasterLayerCallback={setRasterLayerCallback}\n            isLoading={areLayerChannelsLoading[channelId]}\n            use3d={use3d}\n          />\n        );\n      },\n    );\n  }\n\n  const controllerSectionClasses = useControllerSectionStyles();\n\n  const { visible } = layer;\n  const Visibility = visible ? VisibilityIcon : VisibilityOffIcon;\n  // Only show Volume tabs if 3D is available.\n  const useVolumeTabs = !disable3d && shape[labels.indexOf('z')] > 1;\n  const FullController = (\n    <>\n      <LayerOptions\n        channels={channels}\n        opacity={opacity}\n        colormap={colormap}\n        transparentColor={transparentColor}\n        domainType={domainType}\n      // Only allow for global dimension controllers that\n      // exist in the `dimensions` part of the loader.\n        globalControlLabels={labels.filter(label => GLOBAL_LABELS.includes(label))}\n        globalLabelValues={globalLabelValues}\n        handleOpacityChange={setOpacity}\n        handleColormapChange={setColormap}\n        handleGlobalChannelsSelectionChange={handleGlobalChannelsSelectionChange}\n        handleTransparentColorChange={setTransparentColor}\n        isRgb={isRgb(loader)}\n        handleDomainChange={handleDomainChange}\n        shouldShowTransparentColor={shouldShowTransparentColor}\n        shouldShowDomain={shouldShowDomain}\n        shouldShowColormap={shouldShowColormap}\n        use3d={use3d}\n        loader={loader}\n        handleMultiPropertyChange={handleMultiPropertyChange}\n        resolution={resolution}\n        disable3d={disable3d}\n        setRasterLayerCallback={setRasterLayerCallback}\n        setAreAllChannelsLoading={setAreAllChannelsLoading}\n        setViewState={setViewState}\n        spatialHeight={spatialHeight}\n        spatialWidth={spatialWidth}\n        modelMatrix={modelMatrix}\n      />\n      {!isRgb(loader) ? channelControllers : null}\n      {!isRgb(loader) && (\n      <Button\n        disabled={channels.length === MAX_SLIDERS_AND_CHANNELS}\n        onClick={handleChannelAdd}\n        fullWidth\n        variant=\"outlined\"\n        style={buttonStyles}\n        startIcon={<AddIcon />}\n        size=\"small\"\n      >\n                Add Channel\n      </Button>\n      )}\n    </>\n  );\n  return (\n    <ExpansionPanel\n      className={controllerSectionClasses.root}\n      onChange={(e, expanded) => !disabled && setIsExpanded(expanded && e?.target?.attributes?.role?.value === 'presentation')}\n      TransitionProps={{ enter: false }}\n      expanded={!disabled && isExpanded}\n    >\n      <StyledExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`layer-${name}-controls`}\n      >\n        <Grid container direction=\"column\" m={1} justify=\"center\">\n          <OverflowEllipsisGrid item>\n            <Button\n              onClick={(e) => {\n                if (!disabled) {\n                  // Needed to prevent affecting the expansion panel from changing\n                  e.stopPropagation();\n                  setVisible(!visible);\n                }\n              }}\n              style={{\n                marginRight: 8, marginBottom: 2, padding: 0, minWidth: 0,\n              }}\n            >\n              <Visibility />\n            </Button>\n            {name}\n          </OverflowEllipsisGrid>\n          {!disabled && !isExpanded && !use3d && (\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n              <Grid item xs={6}>\n                <StyledInputLabel htmlFor={`layer-${name}-opacity-closed`}>Opacity:</StyledInputLabel>\n              </Grid>\n              <Grid item xs={6}>\n                <Slider\n                  id={`layer-${name}-opacity-closed`}\n                  value={opacity}\n                  onChange={(e, v) => setOpacity(v)}\n                  valueLabelDisplay=\"auto\"\n                  getAriaLabel={() => 'opacity slider'}\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  orientation=\"horizontal\"\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </StyledExpansionPanelSummary>\n      <StyledExpansionPanelDetails>\n        {useVolumeTabs ? (\n          <>\n            <Tabs\n              value={tab}\n              onChange={handleTabChange}\n              aria-label=\"simple tabs example\"\n              style={{ height: '24px', minHeight: '24px' }}\n            >\n              <Tab\n                label=\"Channels\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n                disableRipple\n              />\n              <Tab\n                label=\"Volume\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n              />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n              {FullController}\n            </TabPanel>\n            <TabPanel value={tab} index={1} style={{ marginTop: 4 }}>\n              <VolumeOptions\n                loader={loader}\n                handleSlicerSetting={handleSlicerSetting}\n                handleRenderingModeChange={setRenderingMode}\n                renderingMode={renderingMode}\n                xSlice={xSlice}\n                ySlice={ySlice}\n                zSlice={zSlice}\n                use3d={use3d}\n                setViewState={setViewState}\n                spatialHeight={spatialHeight}\n                spatialWidth={spatialWidth}\n                modelMatrix={modelMatrix}\n              />\n            </TabPanel>\n          </>\n        ) : FullController}\n        <Button\n          onClick={handleLayerRemove}\n          fullWidth\n          variant=\"outlined\"\n          style={buttonStyles}\n          size=\"small\"\n        >\n          Remove Image Layer\n        </Button>\n      </StyledExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n","import React, { useReducer } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { PopperMenu } from '../shared-mui/components';\n\nconst useStyles = makeStyles(() => ({\n  addButton: {\n    marginTop: '10px',\n    marginBottom: '10px',\n    fontWeight: 400,\n  },\n}));\n\nfunction ImageAddIcon() {\n  return (\n    <>\n      <AddIcon />\n      Add Image Layer\n    </>\n  );\n}\n\nfunction ImageAddButton({ imageOptions, handleImageAdd }) {\n  const [open, toggle] = useReducer(v => !v, false);\n  const classes = useStyles();\n\n  const handleAdd = (imgData) => {\n    toggle();\n    handleImageAdd(imgData);\n  };\n\n  if (!imageOptions) return null;\n  return (\n    <PopperMenu\n      open={open}\n      toggle={toggle}\n      buttonIcon={<ImageAddIcon />}\n      buttonClassName={classes.addButton}\n    >\n      {imageOptions.map((imgData, i) => (\n        <MenuItem dense key={imgData.name} onClick={() => handleAdd(i)}>\n          <span>{imgData.name}</span>\n        </MenuItem>\n      ))}\n    </PopperMenu>\n  );\n}\n\nexport default ImageAddButton;\n","/* eslint-disable dot-notation */\nimport React, {\n  useEffect, useCallback, useRef, forwardRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TitleInfo from '../TitleInfo';\nimport RasterChannelController from './RasterChannelController';\nimport BitmaskChannelController from './BitmaskChannelController';\nimport VectorLayerController from './VectorLayerController';\nimport LayerController from './LayerController';\nimport ImageAddButton from './ImageAddButton';\nimport { useReady, useClosestVitessceContainerSize, useWindowDimensions } from '../hooks';\nimport { useCellsData, useMoleculesData, useRasterData } from '../data-hooks';\nimport {\n  useCoordination,\n  useLoaders,\n  useAuxiliaryCoordination,\n  useComponentLayout,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { initializeLayerChannels } from '../spatial/utils';\nimport { DEFAULT_RASTER_LAYER_PROPS } from '../spatial/constants';\n\nconst LAYER_CONTROLLER_DATA_TYPES = ['raster'];\n\n// LayerController is memoized to prevent updates from prop changes that\n// are caused by view state updates i.e zooming and panning within\n// the actual Spatial component.  Re-rendering this component is very\n// expensive so we have to be careful with props in this file in general.\nconst LayerControllerMemoized = React.memo(\n  forwardRef((props, ref) => {\n    const {\n      title,\n      removeGridComponent,\n      theme,\n      isReady,\n      moleculesLayer,\n      dataset,\n      setMoleculesLayer,\n      cellsLayer,\n      canShowCellVecmask,\n      setCellsLayer,\n      rasterLayers,\n      imageLayerLoaders,\n      imageLayerMeta,\n      rasterLayersCallbacks,\n      setRasterLayersCallbacks,\n      areLoadingRasterChannnels,\n      setAreLoadingRasterChannnels,\n      handleRasterLayerChange,\n      handleRasterLayerRemove,\n      disable3d,\n      layerIs3DIndex,\n      setZoom,\n      setTargetX,\n      setTargetY,\n      setTargetZ,\n      setRotationX,\n      setRotationOrbit,\n      componentHeight,\n      componentWidth,\n      spatialLayout,\n      handleImageAdd,\n    } = props;\n    return (\n      <TitleInfo\n        title={title}\n        isScroll\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n      >\n        <div className=\"layer-controller-container\" ref={ref}>\n          {moleculesLayer && (\n            <VectorLayerController\n              key={`${dataset}-molecules`}\n              label=\"Molecules\"\n              layerType=\"molecules\"\n              layer={moleculesLayer}\n              handleLayerChange={setMoleculesLayer}\n            />\n          )}\n          {cellsLayer && canShowCellVecmask && (\n            <VectorLayerController\n              key={`${dataset}-cells`}\n              label=\"Cell Segmentations\"\n              layerType=\"cells\"\n              layer={cellsLayer}\n              handleLayerChange={setCellsLayer}\n            />\n          )}\n          {rasterLayers\n            && rasterLayers.map((layer, i) => {\n              const { index } = layer;\n              const loader = imageLayerLoaders[index];\n              const layerMeta = imageLayerMeta[index];\n              // Could also be bitmask at the moment.\n              const isRaster = layer.type === 'raster';\n              const ChannelController = isRaster\n                ? RasterChannelController\n                : BitmaskChannelController;\n              // Set up the call back mechanism so that each layer manages\n              // callbacks/loading state for itself and its channels.\n              const setRasterLayerCallback = (cb) => {\n                const newRasterLayersCallbacks = [\n                  ...(rasterLayersCallbacks || []),\n                ];\n                newRasterLayersCallbacks[i] = cb;\n                setRasterLayersCallbacks(newRasterLayersCallbacks);\n              };\n              const areLayerChannelsLoading = (areLoadingRasterChannnels || [])[i] || [];\n              const setAreLayerChannelsLoading = (v) => {\n                const newAreLoadingRasterChannnels = [\n                  ...(areLoadingRasterChannnels || []),\n                ];\n                newAreLoadingRasterChannnels[i] = v;\n                setAreLoadingRasterChannnels(newAreLoadingRasterChannnels);\n              };\n              return loader && layerMeta ? (\n                <Grid\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${dataset}-raster-${index}-${i}`}\n                  item\n                  style={{ marginTop: '10px' }}\n                >\n                  <LayerController\n                    name={layerMeta.name}\n                    layer={layer}\n                    loader={loader}\n                    theme={theme}\n                    handleLayerChange={v => handleRasterLayerChange(v, i)}\n                    handleLayerRemove={() => handleRasterLayerRemove(i)}\n                    ChannelController={ChannelController}\n                    shouldShowTransparentColor={isRaster}\n                    shouldShowDomain={isRaster}\n                    shouldShowColormap={isRaster}\n                    // Disable 3D if given explicit instructions to do so\n                    // or if another layer is using 3D mode.\n                    disable3d={\n                      (disable3d || []).indexOf(layerMeta.name) >= 0\n                      || (typeof layerIs3DIndex === 'number'\n                        && layerIs3DIndex !== -1\n                        && layerIs3DIndex !== i)\n                    }\n                    disabled={\n                      typeof layerIs3DIndex === 'number'\n                      && layerIs3DIndex !== -1\n                      && layerIs3DIndex !== i\n                    }\n                    rasterLayersCallbacks={rasterLayersCallbacks}\n                    setRasterLayerCallback={setRasterLayerCallback}\n                    setViewState={({\n                      zoom: newZoom,\n                      target,\n                      rotationX: newRotationX,\n                      rotationOrbit: newRotationOrbit,\n                    }) => {\n                      setZoom(newZoom);\n                      setTargetX(target[0]);\n                      setTargetY(target[1]);\n                      setTargetZ(target[2]);\n                      setRotationX(newRotationX);\n                      setRotationOrbit(newRotationOrbit);\n                    }}\n                    setAreLayerChannelsLoading={setAreLayerChannelsLoading}\n                    areLayerChannelsLoading={areLayerChannelsLoading}\n                    spatialHeight={(componentHeight * spatialLayout.h) / 12}\n                    spatialWidth={(componentWidth * spatialLayout.w) / 12}\n                  />\n                </Grid>\n              ) : null;\n            })}\n          <Grid item>\n            <ImageAddButton\n              imageOptions={imageLayerMeta}\n              handleImageAdd={handleImageAdd}\n            />\n          </Grid>\n        </div>\n      </TitleInfo>\n    );\n  }),\n);\n\n/**\n * A subscriber component for the spatial layer controller.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {Object} props.disable3d Which layers should have 3D disabled (from `raster.json` names).\n */\nfunction LayerControllerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Spatial Layers',\n    disable3d,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [\n    {\n      dataset,\n      spatialRasterLayers: rasterLayers,\n      spatialCellsLayer: cellsLayer,\n      spatialMoleculesLayer: moleculesLayer,\n    },\n    {\n      setSpatialRasterLayers: setRasterLayers,\n      setSpatialCellsLayer: setCellsLayer,\n      setSpatialMoleculesLayer: setMoleculesLayer,\n      setSpatialTargetX: setTargetX,\n      setSpatialTargetY: setTargetY,\n      setSpatialTargetZ: setTargetZ,\n      setSpatialRotationX: setRotationX,\n      setSpatialRotationOrbit: setRotationOrbit,\n      setSpatialZoom: setZoom,\n    },\n  ] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const [\n    {\n      rasterLayersCallbacks,\n      areLoadingRasterChannnels,\n    },\n    {\n      setRasterLayersCallbacks,\n      setAreLoadingRasterChannnels,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n  // Spatial layout + window size is needed for the \"re-center\" button to work properly.\n  // Dimensions of the Spatial component can be inferred and used for resetting view state to\n  // a nice, centered view.\n  const [spatialLayout] = useComponentLayout('spatial', ['spatialRasterLayers'], coordinationScopes);\n  const layerControllerRef = useRef();\n  const [componentWidth, componentHeight] = useClosestVitessceContainerSize(layerControllerRef);\n  const { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    LAYER_CONTROLLER_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => { }, false,\n    { setSpatialRasterLayers: setRasterLayers },\n    { spatialRasterLayers: rasterLayers },\n  );\n\n  useCellsData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialCellsLayer: setCellsLayer },\n    { spatialCellsLayer: cellsLayer },\n  );\n  useMoleculesData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialMoleculesLayer: setMoleculesLayer },\n    { spatialMoleculesLayer: moleculesLayer },\n  );\n\n  // useCallback prevents new functions from propogating\n  // changes to the underlying component.\n  const handleImageAdd = useCallback(async (index) => {\n    const loader = imageLayerLoaders[index];\n    const newChannels = await initializeLayerChannels(\n      loader,\n      (rasterLayers[index] || {}).use3d,\n    );\n    const newLayer = {\n      index,\n      modelMatrix: imageLayerMeta[index]?.metadata?.transform?.matrix,\n      ...DEFAULT_RASTER_LAYER_PROPS,\n      channels: newChannels,\n      type: imageLayerMeta[index]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n    };\n    const newLayers = [...rasterLayers, newLayer];\n    setRasterLayers(newLayers);\n  }, [imageLayerLoaders, imageLayerMeta, rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerChange = useCallback((newLayer, i) => {\n    const newLayers = [...rasterLayers];\n    newLayers[i] = newLayer;\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerRemove = useCallback((i) => {\n    const newLayers = [...rasterLayers];\n    newLayers.splice(i, 1);\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const hasNoBitmask = (\n    imageLayerMeta.length ? imageLayerMeta : [{ metadata: { isBitmask: true } }]\n  ).every(l => !l?.metadata?.isBitmask);\n  // Only want to show vector cells controller if there is no bitmask\n  const canShowCellVecmask = hasNoBitmask;\n  const layerIs3DIndex = rasterLayers?.findIndex && rasterLayers.findIndex(layer => layer.use3d);\n  return (\n    <LayerControllerMemoized\n      ref={layerControllerRef}\n      title={title}\n      removeGridComponent={removeGridComponent}\n      theme={theme}\n      isReady={isReady}\n      moleculesLayer={moleculesLayer}\n      dataset={dataset}\n      setMoleculesLayer={setMoleculesLayer}\n      cellsLayer={cellsLayer}\n      canShowCellVecmask={canShowCellVecmask}\n      setCellsLayer={setCellsLayer}\n      rasterLayers={rasterLayers}\n      imageLayerLoaders={imageLayerLoaders}\n      imageLayerMeta={imageLayerMeta}\n      rasterLayersCallbacks={rasterLayersCallbacks}\n      setRasterLayersCallbacks={setRasterLayersCallbacks}\n      areLoadingRasterChannnels={areLoadingRasterChannnels}\n      setAreLoadingRasterChannnels={setAreLoadingRasterChannnels}\n      handleRasterLayerChange={handleRasterLayerChange}\n      handleRasterLayerRemove={handleRasterLayerRemove}\n      disable3d={disable3d}\n      layerIs3DIndex={layerIs3DIndex}\n      setZoom={setZoom}\n      setTargetX={setTargetX}\n      setTargetY={setTargetY}\n      setTargetZ={setTargetZ}\n      setRotationX={setRotationX}\n      setRotationOrbit={setRotationOrbit}\n      // Fall back to window for height and width.\n      componentHeight={componentHeight || windowHeight}\n      componentWidth={componentWidth || windowWidth}\n      spatialLayout={spatialLayout}\n      handleImageAdd={handleImageAdd}\n    />\n  );\n}\n\nexport default LayerControllerSubscriber;\n","import React, {\n  useMemo, useEffect, useRef, Suspense, useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport dynamicImportPolyfill from 'dynamic-import-polyfill';\nimport register from 'higlass-register';\nimport { ZarrMultivecDataFetcher } from 'higlass-zarr-datafetchers';\nimport packageJson from '../../../package.json';\nimport { createWarningComponent, asEsModule } from '../utils';\nimport { useGridItemSize } from '../hooks';\nimport {\n  useCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst PIXI_BUNDLE_VERSION = packageJson.dependencies['window-pixi'];\nconst HIGLASS_BUNDLE_VERSION = packageJson.dependencies.higlass;\nconst BUNDLE_FILE_EXT = process.env.NODE_ENV === 'development' ? 'js' : 'min.js';\nconst PIXI_BUNDLE_URL = `https://unpkg.com/window-pixi@${PIXI_BUNDLE_VERSION}/dist/pixi.${BUNDLE_FILE_EXT}`;\nconst HIGLASS_BUNDLE_URL = `https://unpkg.com/higlass@${HIGLASS_BUNDLE_VERSION}/dist/hglib.${BUNDLE_FILE_EXT}`;\n\n\n// Initialize the dynamic __import__() function.\ndynamicImportPolyfill.initialize();\n\n// Register the zarr-multivec plugin data fetcher.\n// References:\n// https://github.com/higlass/higlass-register\n// https://github.com/higlass/higlass-zarr-datafetchers\nregister(\n  { dataFetcher: ZarrMultivecDataFetcher, config: ZarrMultivecDataFetcher.config },\n  { pluginType: 'dataFetcher' },\n);\n\n// Lazy load the HiGlass React component,\n// using dynamic imports with absolute URLs.\nconst HiGlassComponent = React.lazy(() => {\n  if (!window.React) {\n    window.React = React;\n  }\n  if (!window.ReactDOM) {\n    window.ReactDOM = ReactDOM;\n  }\n  return new Promise((resolve) => {\n    const handleImportError = (e) => {\n      console.warn(e);\n      resolve(asEsModule(createWarningComponent({\n        title: 'Could not load HiGlass',\n        message: 'The HiGlass scripts could not be dynamically imported.',\n      })));\n    };\n      // eslint-disable-next-line no-undef\n    __import__(PIXI_BUNDLE_URL).then(() => {\n      // eslint-disable-next-line no-undef\n      __import__(HIGLASS_BUNDLE_URL).then(() => {\n        // React.lazy promise must return an ES module with the\n        // component as the default export.\n        resolve(asEsModule(window.hglib.HiGlassComponent));\n      }).catch(handleImportError);\n    }).catch(handleImportError);\n  });\n});\n\n// Use an arbitrary size for normalization of the zoom level.\n// (800 means 800 px width for the full genome)\nconst HG_SIZE = 800;\n\n/**\n   * A wrapper around HiGlass (http://higlass.io/).\n   * The HiGlassComponent react component is loaded lazily.\n   * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n   * to the HiGlassComponent viewConfig prop.\n   * @prop {object} hgOptions An optional HiGlass object to pass\n   * to the HiGlassComponent hgOptions prop.\n   * @prop {function} removeGridComponent A grid component removal handler\n   * to pass to the TitleInfo component.\n   * @prop {function} onReady A callback function to signal that the component is ready.\n   */\nexport default function HiGlassLazy(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig: hgViewConfigProp,\n    hgOptions: hgOptionsProp,\n    genomeSize,\n    height,\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    genomicZoomX,\n    genomicZoomY,\n    genomicTargetX,\n    genomicTargetY,\n  }, {\n    setGenomicZoomX,\n    setGenomicZoomY,\n    setGenomicTargetX,\n    setGenomicTargetY,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.higlass, coordinationScopes);\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, computedHeight, containerRef] = useGridItemSize();\n  const [hgInstance, setHgInstance] = useState();\n  const isActiveRef = useRef();\n\n  const hgOptions = useMemo(() => ({\n    ...hgOptionsProp,\n    theme,\n  }), [hgOptionsProp, theme]);\n\n  const hgViewConfig = useMemo(() => {\n    // HiGlass needs the start and end absolute genome coordinates\n    const centerX = genomicTargetX;\n    const genomesPerUnitX = genomeSize / (2 ** genomicZoomX);\n    const unitX = width / HG_SIZE;\n    const initialXDomain = [\n      centerX - genomesPerUnitX * unitX / 2,\n      centerX + genomesPerUnitX * unitX / 2,\n    ];\n    const centerY = genomicTargetY;\n    const genomesPerUnitY = genomeSize / (2 ** genomicZoomY);\n    const unitY = height / HG_SIZE;\n    const initialYDomain = [\n      centerY - genomesPerUnitY * unitY / 2,\n      centerY + genomesPerUnitY * unitY / 2,\n    ];\n    return {\n      editable: false,\n      zoomFixed: false,\n      trackSourceServers: [\n        '//higlass.io/api/v1',\n      ],\n      exportViewUrl: '//higlass.io/api/v1/viewconfs',\n      views: [\n        {\n          uid: 'main',\n          ...hgViewConfigProp,\n          initialXDomain,\n          initialYDomain,\n        },\n      ],\n      zoomLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      locationLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      valueScaleLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n    };\n  }, [genomicTargetX, genomeSize, genomicZoomX, width, genomicTargetY,\n    genomicZoomY, height, hgViewConfigProp]);\n\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      isActiveRef.current = true;\n    };\n    const handleMouseLeave = () => {\n      isActiveRef.current = false;\n    };\n    const container = containerRef.current;\n    container.addEventListener('mouseenter', handleMouseEnter);\n    container.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      container.removeEventListener('mouseenter', handleMouseEnter);\n      container.removeEventListener('mouseenter', handleMouseLeave);\n    };\n  }, [containerRef]);\n\n\n  useEffect(() => {\n    if (!hgInstance) {\n      return () => {};\n    }\n    hgInstance.api.on('viewConfig', (viewConfigString) => {\n      // Only set if the user mouse is over this component (\"is active\").\n      // Otherwise, this could be an initial on viewConfig change callback from a sibling,\n      // which will cause an infinite loop.\n      if (!isActiveRef.current) {\n        return;\n      }\n      const viewConfig = JSON.parse(viewConfigString);\n      const xDomain = viewConfig.views[0].initialXDomain;\n      const yDomain = viewConfig.views[0].initialYDomain;\n\n      const nextGenomicZoomX = Math.log2(\n        genomeSize / ((xDomain[1] - xDomain[0]) * (HG_SIZE / width)),\n      );\n      const nextGenomicZoomY = Math.log2(\n        genomeSize / ((yDomain[1] - yDomain[0]) * (HG_SIZE / height)),\n      );\n      const nextGenomicTargetX = xDomain[0] + (xDomain[1] - xDomain[0]) / 2;\n      const nextGenomicTargetY = yDomain[0] + (yDomain[1] - yDomain[0]) / 2;\n      setGenomicZoomX(nextGenomicZoomX);\n      setGenomicZoomY(nextGenomicZoomY);\n      setGenomicTargetX(nextGenomicTargetX);\n      setGenomicTargetY(nextGenomicTargetY);\n    });\n    return () => hgInstance.api.off('viewConfig');\n  }, [hgInstance, genomeSize, width, height, setGenomicZoomX, setGenomicZoomY,\n    setGenomicTargetX, setGenomicTargetY]);\n\n  return (\n    <div className=\"higlass-wrapper-parent\">\n      <div className=\"higlass-wrapper\" ref={containerRef} style={{ height: `${height}px` }}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <HiGlassComponent\n            ref={setHgInstance}\n            zoomFixed={false}\n            viewConfig={hgViewConfig}\n            options={hgOptions}\n          />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nHiGlassLazy.defaultProps = {\n  hgOptions: {\n    bounded: true,\n    pixelPreciseMarginPadding: true,\n    containerPaddingX: 0,\n    containerPaddingY: 0,\n    sizeMode: 'default',\n  },\n  genomeSize: 3100000000,\n};\n","import React from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useReady, useUrls, useGridItemSize } from '../hooks';\nimport HiGlassLazy from './HiGlassLazy';\n\nconst HIGLASS_DATA_TYPES = [];\n\n/**\n * A wrapper around HiGlass (http://higlass.io/).\n * The HiGlassComponent react component is loaded lazily.\n * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n * to the HiGlassComponent viewConfig prop.\n * @prop {object} hgOptions An optional HiGlass object to pass\n * to the HiGlassComponent hgOptions prop.\n * @prop {function} removeGridComponent A grid component removal handler\n * to pass to the TitleInfo component.\n * @prop {function} onReady A callback function to signal that the component is ready.\n */\nexport default function HiGlassSubscriber(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig,\n    removeGridComponent,\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, height, containerRef] = useGridItemSize();\n\n  // eslint-disable-next-line no-unused-vars\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    HIGLASS_DATA_TYPES,\n  );\n  // eslint-disable-next-line no-unused-vars\n  const [urls, addUrl, resetUrls] = useUrls();\n\n  return (\n    <div className=\"higlass-title-wrapper\">\n      <TitleInfo\n        title=\"HiGlass\"\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n        urls={urls}\n      >\n        <div className=\"higlass-lazy-wrapper\" ref={containerRef}>\n          <HiGlassLazy\n            coordinationScopes={coordinationScopes}\n            theme={theme}\n            hgViewConfig={hgViewConfig}\n            height={height}\n          />\n        </div>\n      </TitleInfo>\n    </div>\n  );\n}\n","import React, { Suspense, useMemo } from 'react';\nimport { Handler } from 'vega-tooltip';\nimport ReactVega from './ReactVega';\n\n// TODO: React.lazy is not working with Vitessce in the portal-ui.\n// For now, we can work around this by not using React.lazy,\n// but for performance benefits that come with lazy-loading\n// we should eventually try to resolve this issue.\n// const ReactVega = React.lazy(() => import('./ReactVega'));\n\nexport const DATASET_NAME = 'table';\n\nfunction isVega(spec) {\n  return spec.$schema === 'https://vega.github.io/schema/vega/v5.json';\n}\n\n/**\n * A wrapper around the react-vega Vega component.\n * @param {object} props\n * @param {object} spec A vega or vega-lite spec.\n * @param {object[]} data The plot data as an array of objects.\n * @param {object} signalListeners Vega signal listeners. Optional.\n */\nexport default function VegaPlot(props) {\n  const {\n    spec: partialSpec,\n    data,\n    signalListeners,\n  } = props;\n\n  const spec = {\n    ...partialSpec,\n    data: (isVega(partialSpec)\n      ? [\n        { name: DATASET_NAME },\n        ...partialSpec.data,\n      ]\n      : { name: DATASET_NAME }\n    ),\n  };\n\n  const vegaComponent = useMemo(() => (\n    <ReactVega\n      spec={spec}\n      data={{\n        [DATASET_NAME]: data,\n      }}\n      signalListeners={signalListeners}\n      tooltip={new Handler().call}\n      renderer=\"canvas\"\n      scaleFactor={3}\n    />\n  ), [spec, data, signalListeners]);\n\n  return (\n    spec && data && data.length > 0 ? (\n      <Suspense fallback={<div>Loading...</div>}>\n        {vegaComponent}\n      </Suspense>\n    ) : null\n  );\n}\n","/**\n * Vega-Lite themes that can be passed to the `config` property\n * of the vega-lite spec.\n */\nexport const VEGA_THEMES = {\n  dark: {\n    // The vega-themes dark theme.\n    // Reference: https://github.com/vega/vega-themes/blob/master/src/theme-dark.ts\n    background: null,\n    title: { color: '#fff' },\n    style: {\n      'guide-label': {\n        fill: '#fff',\n      },\n      'guide-title': {\n        fill: '#fff',\n      },\n    },\n    axis: {\n      domainColor: '#fff',\n      gridColor: '#888',\n      tickColor: '#fff',\n    },\n  },\n  light: {\n    // The default vega theme.\n    background: null,\n  },\n};\n","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\nimport { colorArrayToString } from './utils';\n\n/**\n * Cell set sizes displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {object[]} props.data The set size data, an array\n * of objects with properties `name`, `key`, `color`, and `size`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 120.\n * @param {number} props.keyLength The length of the `key` property of\n * each data point. Assumes all key strings have the same length.\n * By default, 36.\n */\nexport default function CellSetSizesPlot(props) {\n  const {\n    data: rawData,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 120,\n    keyLength = 36,\n  } = props;\n\n  // Add a property `keyName` which concatenates the key and the name,\n  // which is both unique and can easily be converted\n  // back to the name by taking a substring.\n  // Add a property `colorString` which contains the `[r, g, b]` color\n  // after converting to a color hex string.\n  const data = rawData.map(d => ({\n    ...d,\n    keyName: d.key + d.name,\n    colorString: colorArrayToString(d.color),\n  }));\n\n  // Manually set the color scale so that Vega-Lite does\n  // not choose the colors automatically.\n  const colors = {\n    domain: data.map(d => d.key),\n    range: data.map(d => d.colorString),\n  };\n\n  // Get an array of keys for sorting purposes.\n  const keys = data.map(d => d.keyName);\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'keyName',\n        type: 'nominal',\n        axis: { labelExpr: `substring(datum.label, ${keyLength})` },\n        title: 'Cell Set',\n        sort: keys,\n      },\n      y: {\n        field: 'size',\n        type: 'quantitative',\n        title: 'Cell Set Size',\n      },\n      color: {\n        field: 'key',\n        type: 'nominal',\n        scale: colors,\n        legend: null,\n      },\n      tooltip: {\n        field: 'size',\n        type: 'quantitative',\n      },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n","import React, { useMemo, useEffect } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { mergeCellSets } from '../utils';\nimport { useCellSetsData } from '../data-hooks';\nimport { treeToSetSizesBySetNames } from './cell-set-utils';\nimport CellSetSizesPlot from './CellSetSizesPlot';\n\nconst CELL_SET_SIZES_DATA_TYPES = ['cell-sets'];\n\n/**\n * A subscriber component for `CellSetSizePlot`,\n * which listens for cell sets data updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {function} props.onReady The function to call when the subscriptions\n * have been made.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {string} props.title The component title.\n */\nexport default function CellSetSizesPlotSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Cell Set Sizes',\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n  }, {\n    setCellSetSelection,\n    setCellSetColor,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSetSizes, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    CELL_SET_SIZES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n    { setCellSetSelection, setCellSetColor },\n    { cellSetSelection, cellSetColor },\n  );\n\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // From the cell sets hierarchy and the list of selected cell sets,\n  // generate the array of set sizes data points for the bar plot.\n  const data = useMemo(() => (mergedCellSets && cellSetSelection && cellSetColor\n    ? treeToSetSizesBySetNames(mergedCellSets, cellSetSelection, cellSetColor)\n    : []\n  ), [mergedCellSets, cellSetSelection, cellSetColor]);\n\n  return (\n    <TitleInfo\n      title={title}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        <CellSetSizesPlot\n          data={data}\n          theme={theme}\n          width={width}\n          height={height}\n        />\n      </div>\n    </TitleInfo>\n  );\n}\n","import React, {\n  useMemo, useEffect,\n} from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { sum } from 'd3-array';\nimport TitleInfo from '../TitleInfo';\nimport { useReady, useUrls, useGridItemSize } from '../hooks';\nimport {\n  useCoordination, useLoaders,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useGenomicProfilesData } from '../data-hooks';\nimport HiGlassLazy from './HiGlassLazy';\n\nconst GENOMIC_PROFILES_DATA_TYPES = ['genomic-profiles'];\n\nconst REFERENCE_TILESETS = {\n  hg38: {\n    chromosomes: 'NyITQvZsS_mOFNlz5C2LJg',\n    genes: 'P0PLbQMwTYGy-5uPIQid7A',\n  },\n  hg19: {\n    chromosomes: 'N12wVGG9SPiTkk03yUayUw',\n    genes: 'OHJakQICQD6gTD7skx4EWA',\n  },\n  mm9: {\n    chromosomes: 'WAVhNHYxQVueq6KulwgWiQ',\n    genes: 'GUm5aBiLRCyz2PsBea7Yzg',\n  },\n  mm10: {\n    chromosomes: 'EtrWT0VtScixmsmwFSd7zg',\n    genes: 'QDutvmyiSrec5nX4pA5WGQ',\n  },\n};\n\n/**\n * A component for visualization of genomic profiles\n * with genome-wide bar plots.\n * @param {object} props The component props.\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.profileTrackUidKey The key in the genomic profiles row_info that identifies\n * each track. By default, 'path'.\n * @param {string} props.profileTrackNameKey The key in the genomic profiles row_info that\n * gives a name for each track. By default, null. When null is provided, uses the\n * profileTrackUidKey for both UID and name. If UID values are path arrays,\n * they will be converted to name strings.\n * @param {string} props.higlassServer The URL for the higlass server used to retreive\n * reference tilesets for the chromosome and gene annotations.\n * @param {string} props.assembly The genome assembly to use for the reference\n * tilesets for the chromosome and gene annotations.\n * @param {string} props.title The title of the component.\n */\nexport default function GenomicProfilesSubscriber(props) {\n  const {\n    coordinationScopes,\n    theme,\n    removeGridComponent,\n    profileTrackUidKey = 'path',\n    profileTrackNameKey = null,\n    higlassServer = 'https://higlass.io/api/v1',\n    assembly = 'hg38',\n    title = 'Genomic Profiles',\n  } = props;\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, height, containerRef] = useGridItemSize();\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    cellSetColor,\n    cellSetSelection,\n  }] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.genomicProfiles,\n    coordinationScopes,\n  );\n\n  // eslint-disable-next-line no-unused-vars\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    GENOMIC_PROFILES_DATA_TYPES,\n  );\n    // eslint-disable-next-line no-unused-vars\n  const [urls, addUrl, resetUrls] = useUrls();\n\n  const [genomicProfilesAttrs] = useGenomicProfilesData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n\n  const hgViewConfig = useMemo(() => {\n    if (!genomicProfilesAttrs || urls.length !== 1) {\n      return null;\n    }\n    // Get the URL to the data file from the downloadable URLs array.\n    const { url } = urls[0];\n\n    // Set up the colors to use in the HiGlass view config based on the current theme.\n    const foregroundColor = (theme === 'dark' ? '#C0C0C0' : '#000000');\n    const backgroundColor = (theme === 'dark' ? '#000000' : '#f1f1f1');\n    const dimColor = (theme === 'dark' ? 'dimgray' : 'silver');\n\n    // Define the \"reference tracks\" for chromosome labels and gene annotations.\n    const referenceTracks = [\n      {\n        type: 'horizontal-chromosome-labels',\n        server: higlassServer,\n        tilesetUid: REFERENCE_TILESETS[assembly].chromosomes,\n        uid: 'chromosome-labels',\n        options: {\n          color: foregroundColor,\n          fontSize: 12,\n          fontIsLeftAligned: false,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n        },\n        height: 30,\n      },\n      {\n        type: 'horizontal-gene-annotations',\n        server: higlassServer,\n        tilesetUid: REFERENCE_TILESETS[assembly].genes,\n        uid: 'gene-annotations',\n        options: {\n          name: 'Gene Annotations (hg38)',\n          fontSize: 10,\n          labelPosition: 'hidden',\n          labelLeftMargin: 0,\n          labelRightMargin: 0,\n          labelTopMargin: 0,\n          labelBottomMargin: 0,\n          minHeight: 24,\n          geneAnnotationHeight: 16,\n          geneLabelPosition: 'outside',\n          geneStrandSpacing: 4,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n          plusStrandColor: foregroundColor,\n          minusStrandColor: foregroundColor,\n          labelColor: 'black',\n          labelBackgroundColor: backgroundColor,\n          trackBorderWidth: 0,\n          trackBorderColor: 'black',\n        },\n        height: 70,\n      },\n    ];\n    // Determine the heights of each profile track by subtracting the\n    // reference track heights from the component height, then\n    // dividing by the number of profiles.\n    const referenceTracksHeightSum = sum(referenceTracks.map(t => t.height));\n    const profileTracksHeightSum = height - referenceTracksHeightSum - 10;\n    const profileTrackHeight = profileTracksHeightSum / genomicProfilesAttrs.row_infos.length;\n    const profileTracks = genomicProfilesAttrs.row_infos.map((rowInfo, i) => {\n      // Get the uid for the HiGlass track.\n      const trackUid = rowInfo[profileTrackUidKey];\n      // When profiles correspond to cell sets, the profile UID will be the cell set path array.\n      const isPath = Array.isArray(trackUid);\n      // Get the name for the HiGlass track: try the name key first,\n      // then try the tail of the path, and otherwise the track UID.\n      // eslint-disable-next-line no-nested-ternary\n      const trackName = profileTrackNameKey\n        ? rowInfo[profileTrackNameKey]\n        : (isPath ? trackUid[trackUid.length - 1] : trackUid);\n      // If the uid is a path, then try to get the corresponding cell set's color,\n      // if it is currently selected.\n      const setInSelection = isPath ? cellSetSelection?.find(s => isEqual(s, trackUid)) : false;\n      const setColor = isPath ? cellSetColor?.find(s => isEqual(s.path, trackUid))?.color : null;\n      // Get the track UID as a string before passing to HiGlass.\n      const trackUidString = isPath ? trackUid.join('__') : trackUid;\n      // Create the HiGlass track definition for this profile.\n      const track = {\n        type: 'horizontal-bar',\n        uid: `bar-track-${trackUidString}`,\n        data: {\n          type: 'zarr-multivec',\n          url,\n          row: i,\n        },\n        options: {\n          name: trackName,\n          showMousePosition: true,\n          mousePositionColor: foregroundColor,\n          labelColor: (theme === 'dark' ? 'white' : 'black'),\n          labelBackgroundColor: (theme === 'dark' ? 'black' : 'white'),\n          labelShowAssembly: false,\n        },\n        height: profileTrackHeight,\n      };\n      // Set the track color if it is available.\n      if (setColor && setInSelection) {\n        const c = setColor;\n        track.options.barFillColor = `rgb(${c[0]},${c[1]},${c[2]})`;\n      } else {\n        track.options.barFillColor = dimColor;\n      }\n      return track;\n    });\n\n    // Create the higlass view.\n    // The HiGlassLazy component will fill in the fields 'uid',\n    // 'initialXDomain', and 'initialYDomain'.\n    const hgView = {\n      tracks: {\n        top: [\n          ...referenceTracks,\n          ...profileTracks,\n        ],\n        left: [],\n        center: [],\n        right: [],\n        bottom: [],\n        whole: [],\n        gallery: [],\n      },\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n        static: false,\n      },\n    };\n    return hgView;\n  }, [genomicProfilesAttrs, urls, theme, height, profileTrackUidKey,\n    profileTrackNameKey, cellSetSelection, cellSetColor,\n    higlassServer, assembly]);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  return (\n    <div className=\"higlass-title-wrapper\">\n      <TitleInfo\n        title={title}\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n        urls={urls}\n      >\n        <div className=\"higlass-lazy-wrapper\" ref={containerRef}>\n          {hgViewConfig ? (\n            <HiGlassLazy\n              coordinationScopes={coordinationScopes}\n              theme={theme}\n              hgViewConfig={hgViewConfig}\n              height={height}\n            />\n          ) : null}\n        </div>\n      </TitleInfo>\n    </div>\n  );\n}\n","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {string[]} props.geneSelection The list of genes\n * currently selected.\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value` and `gene`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 50.\n */\nexport default function ExpressionHistogram(props) {\n  const {\n    geneSelection,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 50,\n  } = props;\n\n  const xTitle = geneSelection && geneSelection.length >= 1\n    ? 'Normalized Expression Value'\n    : 'Total Normalized Transcript Count';\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'value',\n        type: 'quantitative',\n        bin: { maxbins: 50 },\n        title: xTitle,\n      },\n      y: {\n        type: 'quantitative',\n        aggregate: 'count',\n        title: 'Number of Cells',\n      },\n      color: { value: 'gray' },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n","import React, { useMemo, useEffect } from 'react';\nimport { sum } from 'd3-array';\n\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { useExpressionMatrixData, useGeneSelection } from '../data-hooks';\nimport ExpressionHistogram from './ExpressionHistogram';\n\nconst EXPRESSION_HISTOGRAM_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for `ExpressionHistogram`,\n * which listens for gene selection updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {object} props.coordinationScopes An object mapping coordination\n * types to coordination scopes.\n * @param {string} props.theme The name of the current Vitessce theme.\n */\nexport default function ExpressionHistogramSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.expressionHistogram, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    EXPRESSION_HISTOGRAM_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [expressionMatrix] = useExpressionMatrixData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  // Get data from loaders using the data hooks.\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n\n  const firstGeneSelected = geneSelection && geneSelection.length >= 1\n    ? geneSelection[0]\n    : null;\n\n  // From the expression matrix and the list of selected genes,\n  // generate the array of data points for the histogram.\n  const data = useMemo(() => {\n    if (firstGeneSelected && expressionMatrix && expressionData) {\n      // Create new cellColors map based on the selected gene.\n      return Array.from(expressionData[0]).map((_, index) => {\n        const value = expressionData[0][index];\n        const normValue = value * 100 / 255;\n        return { value: normValue, gene: firstGeneSelected };\n      });\n    }\n    if (expressionMatrix) {\n      const numGenes = expressionMatrix.cols.length;\n      return expressionMatrix.rows.map((cellId, cellIndex) => {\n        const values = expressionMatrix.matrix\n          .subarray(cellIndex * numGenes, (cellIndex + 1) * numGenes);\n        const sumValue = sum(values) * 100 / 255;\n        return { value: sumValue, gene: null };\n      });\n    }\n    return null;\n  }, [expressionMatrix, firstGeneSelected, expressionData]);\n\n  return (\n    <TitleInfo\n      title={`Expression Histogram${(firstGeneSelected ? ` (${firstGeneSelected})` : '')}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        <ExpressionHistogram\n          geneSelection={geneSelection}\n          data={data}\n          theme={theme}\n          width={width}\n          height={height}\n        />\n      </div>\n    </TitleInfo>\n  );\n}\n","import { useMemo } from 'react';\nimport { mergeCellSets } from '../utils';\nimport { treeToObjectsBySetNames, treeToSetSizesBySetNames } from './cell-set-utils';\n\n/**\n * Get expression data for the cells\n * in the selected cell sets.\n * @param {object} expressionMatrix\n * @param {string[]} expressionMatrix.rows Cell IDs.\n * @param {string[]} expressionMatrix.cols Gene names.\n * @param {Uint8Array} expressionMatrix.matrix The\n * flattened expression matrix as a typed array.\n * @param {object} cellSets The cell sets from the dataset.\n * @param {object} additionalCellSets The user-defined cell sets\n * from the coordination space.\n * @param {array} geneSelection Array of selected genes.\n * @param {array} cellSetSelection Array of selected cell set paths.\n * @param {object[]} cellSetColor Array of objects with properties\n * `path` and `color`.\n */\nexport function useExpressionByCellSet(\n  expressionData, expressionDataAttrs, cellSets, additionalCellSets,\n  geneSelection, cellSetSelection, cellSetColor, useGeneExpressionTransform,\n) {\n  const mergedCellSets = useMemo(\n    () => mergeCellSets(cellSets, additionalCellSets),\n    [cellSets, additionalCellSets],\n  );\n\n  // From the expression matrix and the list of selected genes / cell sets,\n  // generate the array of data points for the plot.\n  const [expressionArr, expressionMax] = useMemo(() => {\n    if (mergedCellSets && cellSetSelection\n        && geneSelection && geneSelection.length >= 1\n        && expressionData\n    ) {\n      const cellObjects = treeToObjectsBySetNames(mergedCellSets, cellSetSelection, cellSetColor);\n\n      const firstGeneSelected = geneSelection[0];\n      // Create new cellColors map based on the selected gene.\n      let exprMax = -Infinity;\n      const cellIndices = {};\n      for (let i = 0; i < expressionDataAttrs.rows.length; i += 1) {\n        cellIndices[expressionDataAttrs.rows[i]] = i;\n      }\n      const exprValues = cellObjects.map((cell) => {\n        const cellIndex = cellIndices[cell.obsId];\n        const value = expressionData[0][cellIndex];\n        const normValue = value * 100 / 255;\n        const transformedValue = useGeneExpressionTransform ? Math.log(1 + normValue) : normValue;\n        exprMax = Math.max(transformedValue, exprMax);\n        return { value: transformedValue, gene: firstGeneSelected, set: cell.name };\n      });\n      return [exprValues, exprMax];\n    }\n    return [null, null];\n  }, [expressionData, expressionDataAttrs, geneSelection,\n    mergedCellSets, cellSetSelection, cellSetColor, useGeneExpressionTransform]);\n\n  // From the cell sets hierarchy and the list of selected cell sets,\n  // generate the array of set sizes data points for the bar plot.\n  const setArr = useMemo(() => (mergedCellSets && cellSetSelection && cellSetColor\n    ? treeToSetSizesBySetNames(mergedCellSets, cellSetSelection, cellSetColor)\n    : []\n  ), [mergedCellSets, cellSetSelection, cellSetColor]);\n\n  return [expressionArr, setArr, expressionMax];\n}\n","import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\n\nexport default function CellSetExpressionPlotOptions(props) {\n  const { toggleGeneExpressionTransform, useGeneExpressionTransform } = props;\n  const classes = useStyles();\n\n  function handleGeneExpressionTransformChange() {\n    toggleGeneExpressionTransform();\n  }\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell}>Log Transform</TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={Boolean(useGeneExpressionTransform)}\n            onChange={handleGeneExpressionTransformChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n","import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES, DATASET_NAME } from '../vega';\nimport { colorArrayToString } from './utils';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value`, `gene`, and `set`.\n * @param {number} props.domainMax The maximum gene expression value.\n * @param {object[]} props.colors An object for each\n * cell set, with properties `name` and `color`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * Default is allowing the component to automatically determine the margin.\n * @param {boolean} props.useGeneExpressionTransform Boolean representing\n * whether or not the expression values are log-transformed.\n */\nexport default function CellSetExpressionPlot(props) {\n  const {\n    domainMax = 100,\n    colors,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom,\n    useGeneExpressionTransform,\n  } = props;\n  // Get the max characters in an axis label for autsizing the bottom margin.\n  const maxCharactersForLabel = data.reduce((acc, val) => {\n    // eslint-disable-next-line no-param-reassign\n    acc = acc === undefined || val.set.length > acc ? val.set.length : acc;\n    return acc;\n  }, 0);\n  // Use a square-root term because the angle of the labels is 45 degrees (see below)\n  // so the perpendicular distance to the bottom of the labels is proportional to the\n  // square root of the length of the labels along the imaginary hypotenuse.\n  // 30 is an estimate of the pixel size of a given character and seems to work well.\n  const autoMarginBottom = marginBottom\n    || 30 + Math.sqrt(maxCharactersForLabel / 2) * 30;\n  // Manually set the color scale so that Vega-Lite does\n  // not choose the colors automatically.\n  const colorScale = {\n    domain: colors.map(d => d.name),\n    range: colors.map(d => colorArrayToString(d.color)),\n  };\n\n  const plotWidth = clamp(width - marginRight, 10, Infinity);\n  const plotHeight = clamp(height - autoMarginBottom, 10, Infinity);\n\n  const numBands = colors.length;\n  const bandWidth = plotWidth / numBands;\n\n  const rectColor = (theme === 'dark' ? 'white' : 'black');\n\n  const spec = {\n    $schema: 'https://vega.github.io/schema/vega/v5.json',\n    description: 'A violin plot showing distributions of expression levels for selected cell sets.',\n    width: plotWidth,\n    height: plotHeight,\n    config: {\n      ...VEGA_THEMES[theme],\n      axisBand: {\n        bandPosition: 1,\n        tickExtra: true,\n        tickOffset: 0,\n      },\n    },\n\n    signals: [\n      { name: 'bandWidth', value: bandWidth },\n      { name: 'width', value: plotWidth },\n      { name: 'height', value: plotHeight },\n      { name: 'trim', value: true },\n    ],\n\n    data: [\n      {\n        name: 'density',\n        source: DATASET_NAME,\n        transform: [\n          {\n            type: 'kde',\n            field: 'value',\n            groupby: ['set'],\n            bandwidth: 0,\n            extent: [0, domainMax],\n          },\n        ],\n      },\n      {\n        name: 'stats',\n        source: DATASET_NAME,\n        transform: [\n          {\n            type: 'aggregate',\n            groupby: ['set'],\n            fields: ['value', 'value', 'value'],\n            ops: ['q1', 'median', 'q3'],\n            as: ['q1', 'median', 'q3'],\n          },\n        ],\n      },\n    ],\n\n    scales: [\n      {\n        name: 'layout',\n        type: 'band',\n        range: 'width',\n        domain: { data: DATASET_NAME, field: 'set' },\n      },\n      {\n        name: 'yscale',\n        type: 'linear',\n        range: 'height',\n        domain: [0, domainMax],\n      },\n      {\n        name: 'wscale',\n        type: 'linear',\n        range: [0, { signal: 'bandWidth' }],\n        domain: { data: 'density', field: 'density' },\n      },\n      {\n        name: 'wscaleReversed',\n        type: 'linear',\n        reverse: true,\n        range: [0, { signal: 'bandWidth' }],\n        domain: { data: 'density', field: 'density' },\n      },\n      {\n        name: 'color',\n        type: 'ordinal',\n        ...colorScale,\n      },\n    ],\n\n    axes: [\n      {\n        orient: 'left',\n        scale: 'yscale',\n        zindex: 1,\n        // title: useGeneExpressionTransform\n        //   ? 'Log-Normalized Expression Values' : 'Normalized Expression Values',\n        title: useGeneExpressionTransform\n          ? ['Log-Transformed', 'Normalized Expression Values']\n          : 'Normalized Expression Values',\n      },\n      {\n        orient: 'bottom',\n        scale: 'layout',\n        tickCount: 5,\n        zindex: 1,\n        title: 'Cell Set',\n        labelAngle: -45,\n        labelAlign: 'right',\n      },\n    ],\n\n    marks: [\n      {\n        type: 'group',\n        from: {\n          facet: {\n            data: 'density',\n            name: 'violin',\n            groupby: 'set',\n          },\n        },\n\n        encode: {\n          enter: {\n            xc: { scale: 'layout', field: 'set', band: 0.5 },\n            width: { signal: 'bandWidth' },\n            height: { signal: 'height' },\n          },\n        },\n\n        data: [\n          {\n            name: 'summary',\n            source: 'stats',\n            transform: [\n              {\n                type: 'filter',\n                expr: 'datum.set === parent.set',\n              },\n            ],\n          },\n        ],\n\n        marks: [\n          {\n            type: 'area',\n            orient: 'vertical',\n            from: { data: 'violin' },\n            encode: {\n              enter: {\n                fill: { scale: 'color', field: { parent: 'set' } },\n              },\n              update: {\n                width: { scale: 'wscale', field: 'density' },\n                xc: { signal: 'bandWidth / 2' },\n                y2: { scale: 'yscale', field: 'value' },\n                y: { scale: 'yscale', value: 0 },\n              },\n            },\n          },\n          {\n            type: 'area',\n            orient: 'vertical',\n            from: { data: 'violin' },\n            encode: {\n              enter: {\n                fill: { scale: 'color', field: { parent: 'set' } },\n              },\n              update: {\n                width: { scale: 'wscaleReversed', field: 'density' },\n                xc: { signal: 'bandWidth' },\n                y2: { scale: 'yscale', field: 'value' },\n                y: { scale: 'yscale', value: 0 },\n              },\n            },\n          },\n          {\n            type: 'rect',\n            from: { data: 'summary' },\n            encode: {\n              enter: {\n                fill: { value: rectColor },\n                width: { value: 2 },\n              },\n              update: {\n                y: { scale: 'yscale', field: 'q1' },\n                y2: { scale: 'yscale', field: 'q3' },\n                xc: { signal: 'bandWidth / 2' },\n              },\n            },\n          },\n          {\n            type: 'rect',\n            from: { data: 'summary' },\n            encode: {\n              enter: {\n                fill: { value: rectColor },\n                height: { value: 2 },\n                width: { value: 8 },\n              },\n              update: {\n                y: { scale: 'yscale', field: 'median' },\n                xc: { signal: 'bandWidth / 2' },\n              },\n            },\n          },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n","import React, { useEffect, useReducer } from 'react';\nimport TitleInfo from '../TitleInfo';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { useUrls, useReady, useGridItemSize } from '../hooks';\nimport { useGeneSelection, useExpressionAttrs, useCellSetsData } from '../data-hooks';\nimport { useExpressionByCellSet } from './hooks';\nimport CellSetExpressionPlotOptions from './CellSetExpressionPlotOptions';\n\nimport CellSetExpressionPlot from './CellSetExpressionPlot';\n\nconst CELL_SET_EXPRESSION_DATA_TYPES = ['cell-sets', 'expression-matrix'];\n\n/**\n * A subscriber component for `CellSetExpressionPlot`,\n * which listens for gene selection updates and\n * `GRID_RESIZE` events.\n * @param {object} props\n * @param {function} props.removeGridComponent The grid component removal function.\n * @param {object} props.coordinationScopes An object mapping coordination\n * types to coordination scopes.\n * @param {string} props.theme The name of the current Vitessce theme.\n */\nexport default function CellSetExpressionPlotSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    geneSelection,\n    geneExpressionTransform,\n    cellSetSelection,\n    cellSetColor,\n    additionalCellSets,\n  }, {\n    setGeneExpressionTransform,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.cellSetExpression, coordinationScopes);\n\n  const [width, height, containerRef] = useGridItemSize();\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, resetReadyItems] = useReady(\n    CELL_SET_EXPRESSION_DATA_TYPES,\n  );\n\n  const [useGeneExpressionTransform, toggleGeneExpressionTransform] = useReducer((v) => {\n    const newValue = !v;\n    setGeneExpressionTransform(newValue ? 'log1p' : null);\n    return newValue;\n  }, geneExpressionTransform);\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [expressionData] = useGeneSelection(\n    loaders, dataset, setItemIsReady, false, geneSelection,\n  );\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, false,\n  );\n  const [cellSets] = useCellSetsData(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n\n  const [expressionArr, setArr, expressionMax] = useExpressionByCellSet(\n    expressionData, attrs, cellSets, additionalCellSets,\n    geneSelection, cellSetSelection, cellSetColor, useGeneExpressionTransform,\n  );\n\n  const firstGeneSelected = geneSelection && geneSelection.length >= 1\n    ? geneSelection[0]\n    : null;\n  return (\n    <TitleInfo\n      title={`Expression by Cell Set${(firstGeneSelected ? ` (${firstGeneSelected})` : '')}`}\n      removeGridComponent={removeGridComponent}\n      urls={urls}\n      theme={theme}\n      isReady={isReady}\n      options={(\n        <CellSetExpressionPlotOptions\n          useGeneExpressionTransform={useGeneExpressionTransform}\n          toggleGeneExpressionTransform={toggleGeneExpressionTransform}\n        />\n      )}\n    >\n      <div ref={containerRef} className=\"vega-container\">\n        {expressionArr ? (\n          <CellSetExpressionPlot\n            domainMax={expressionMax}\n            colors={setArr}\n            data={expressionArr}\n            theme={theme}\n            width={width}\n            height={height}\n            useGeneExpressionTransform={useGeneExpressionTransform}\n          />\n        ) : (\n          <span>Select a gene.</span>\n        )}\n      </div>\n    </TitleInfo>\n  );\n}\n","import DescriptionSubscriber from '../components/description/DescriptionSubscriber';\nimport StatusSubscriber from '../components/status/StatusSubscriber';\nimport GenesSubscriber from '../components/genes/GenesSubscriber';\nimport CellSetsManagerSubscriber from '../components/sets/CellSetsManagerSubscriber';\nimport ScatterplotSubscriber from '../components/scatterplot/ScatterplotSubscriber';\nimport SpatialSubscriber from '../components/spatial/SpatialSubscriber';\nimport HeatmapSubscriber from '../components/heatmap/HeatmapSubscriber';\nimport LayerControllerSubscriber from '../components/layer-controller/LayerControllerSubscriber';\nimport HiGlassSubscriber from '../components/higlass/HiGlassSubscriber';\nimport CellSetSizesPlotSubscriber from '../components/sets/CellSetSizesPlotSubscriber';\nimport GenomicProfilesSubscriber from '../components/higlass/GenomicProfilesSubscriber';\nimport ExpressionHistogramSubscriber from '../components/genes/ExpressionHistogramSubscriber';\nimport CellSetExpressionPlotSubscriber from '../components/sets/CellSetExpressionPlotSubscriber';\n\nconst registry = {\n  description: DescriptionSubscriber,\n  status: StatusSubscriber,\n  genes: GenesSubscriber,\n  cellSets: CellSetsManagerSubscriber,\n  scatterplot: ScatterplotSubscriber,\n  spatial: SpatialSubscriber,\n  heatmap: HeatmapSubscriber,\n  layerController: LayerControllerSubscriber,\n  cellSetSizes: CellSetSizesPlotSubscriber,\n  expressionHistogram: ExpressionHistogramSubscriber,\n  genomicProfiles: GenomicProfilesSubscriber,\n  cellSetExpression: CellSetExpressionPlotSubscriber,\n  // The plain higlass component does not abstract away the HiGlass view config,\n  // so we probably want to avoid documenting it, only use it for development purposes.\n  higlass: HiGlassSubscriber,\n};\n\nexport function getComponent(name) {\n  const component = registry[name];\n  if (component === undefined) {\n    throw new Error(`Could not find definition for \"${name}\" in registry.`);\n  }\n  return registry[name];\n}\n","import React from 'react';\nimport { useCoordination, useWarning } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Status from './Status';\n\n/**\n * A subscriber component for the status component,\n * which renders hovered cell/gene/molecule information\n * as well as schema validation and data loading errors.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function StatusSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Status',\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    cellHighlight,\n    geneHighlight,\n    moleculeHighlight,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.status, coordinationScopes);\n\n  const warn = useWarning();\n\n  const infos = [\n    ...(cellHighlight\n      ? [`Hovered cell ${cellHighlight}`]\n      : []\n    ),\n    ...(geneHighlight\n      ? [`Hovered gene ${geneHighlight}`]\n      : []\n    ),\n    ...(moleculeHighlight\n      ? [`Hovered gene ${moleculeHighlight}`]\n      : []\n    ),\n  ];\n  const info = infos.join('; ');\n\n  return (\n    <TitleInfo\n      title={title}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      isReady\n    >\n      <Status warn={warn} info={info} />\n    </TitleInfo>\n  );\n}\n","/* eslint-disable no-plusplus */\n/* eslint-disable camelcase */\nimport uuidv4 from 'uuid/v4';\nimport { getNextScope, capitalize } from '../utils';\nimport {\n  COORDINATION_TYPES,\n  DEFAULT_COORDINATION_VALUES,\n  COMPONENT_COORDINATION_TYPES,\n  AUTO_INDEPENDENT_COORDINATION_TYPES,\n} from './state/coordination';\n\n\n/**\n * Get a list of all unique scope names for a\n * particular coordination type, which exist in\n * a particular view config.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @returns {string[]} Array of existing coordination scope names.\n */\nexport function getExistingScopesForCoordinationType(config, coordinationType) {\n  const spaceScopes = Object.keys(config?.coordinationSpace?.[coordinationType] || {});\n  const componentScopes = config.layout.map(c => c.coordinationScopes?.[coordinationType]);\n  return Array.from(new Set([...spaceScopes, ...componentScopes]));\n}\n\n/**\n * Give each component the same scope name for this coordination type.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @param {*} scopeValue The initial value for the coordination scope,\n * to set in the coordination space.\n * @returns {object} The new view config.\n */\nfunction coordinateComponentsTogether(config, coordinationType, scopeValue) {\n  const scopeName = getNextScope(getExistingScopesForCoordinationType(config, coordinationType));\n  const newConfig = {\n    ...config,\n    coordinationSpace: {\n      ...config.coordinationSpace,\n      [coordinationType]: {\n        ...config?.coordinationSpace?.[coordinationType],\n        // Add the new scope name and value to the coordination space.\n        [scopeName]: scopeValue,\n      },\n    },\n    layout: config.layout.map(component => ({\n      ...component,\n      coordinationScopes: {\n        ...component.coordinationScopes,\n        // Only set the coordination scope if this component uses this coordination type,\n        // and the component is missing a coordination scope for this coordination type.\n        ...((\n          COMPONENT_COORDINATION_TYPES[component.component].includes(coordinationType)\n          && !component.coordinationScopes?.[coordinationType]\n        ) ? {\n          // Only set the new scope name if the scope name\n          // for this component and coordination type is currently undefined.\n            [coordinationType]: scopeName,\n          } : {}),\n      },\n    })),\n  };\n  return newConfig;\n}\n\n/**\n * Give each component a different scope name for this coordination type.\n * @param {object} config A view config object.\n * @param {string} coordinationType A coordination type,\n * for example 'spatialZoom' or 'dataset'.\n * @param {*} scopeValue The initial value for the coordination scope,\n * to set in the coordination space.\n * @returns {object} The new view config.\n */\nfunction coordinateComponentsIndependent(config, coordinationType, scopeValue) {\n  const newConfig = {\n    ...config,\n    layout: [...config.layout],\n  };\n  const newScopes = {};\n  newConfig.layout.forEach((component, i) => {\n    // Only set the coordination scope if this component uses this coordination type,\n    // and the component is missing a coordination scope for this coordination type.\n    if (COMPONENT_COORDINATION_TYPES[component.component].includes(coordinationType)\n      && !component.coordinationScopes?.[coordinationType]\n    ) {\n      const scopeName = getNextScope([\n        ...getExistingScopesForCoordinationType(config, coordinationType),\n        ...Object.keys(newScopes),\n      ]);\n      newScopes[scopeName] = scopeValue;\n      newConfig.layout[i] = {\n        ...component,\n        coordinationScopes: {\n          ...component.coordinationScopes,\n          [coordinationType]: scopeName,\n        },\n      };\n    }\n  });\n  newConfig.coordinationSpace = {\n    ...newConfig.coordinationSpace,\n    [coordinationType]: {\n      ...newConfig.coordinationSpace[coordinationType],\n      // Add the new scope name and value to the coordination space.\n      ...newScopes,\n    },\n  };\n  return newConfig;\n}\n\nfunction initializeAuto(config) {\n  let newConfig = config;\n  const { layout, datasets } = newConfig;\n\n  // For each coordination type, check whether it requires initialization.\n  Object.values(COORDINATION_TYPES).forEach((coordinationType) => {\n    // A coordination type requires coordination if at least one component is missing\n    // a (coordination type, coordination scope) tuple.\n    // Components may only use a subset of all coordination types.\n    const requiresCoordination = !layout\n      .every(c => (\n        !COMPONENT_COORDINATION_TYPES[c.component].includes(coordinationType)\n                || c.coordinationScopes?.[coordinationType]\n      ));\n    if (requiresCoordination) {\n      // Note that the default value may be undefined.\n      let defaultValue = DEFAULT_COORDINATION_VALUES[coordinationType];\n      // Check whether this is the special 'dataset' coordination type.\n      if (coordinationType === 'dataset' && datasets.length >= 1) {\n        // Use the first dataset ID as the default\n        // if there is at least one dataset.\n        defaultValue = datasets[0].uid;\n      }\n      // Use the list of \"independent\" coordination types\n      // to determine whether a particular coordination type\n      // should be initialized to\n      // a unique scope for every component (\"independent\")\n      // vs. the same scope for every component (\"together\").\n      if (AUTO_INDEPENDENT_COORDINATION_TYPES.includes(coordinationType)) {\n        newConfig = coordinateComponentsIndependent(newConfig, coordinationType, defaultValue);\n      } else {\n        newConfig = coordinateComponentsTogether(newConfig, coordinationType, defaultValue);\n      }\n    }\n  });\n\n  return newConfig;\n}\n\n\n/**\n * Initialize the view config:\n * - Fill in missing coordination objects with default values.\n * - Fill in missing component coordination scope mappings.\n *   based on the `initStrategy` specified in the view config.\n * Should be \"stable\": if run on the same view config twice, the return value the second\n * time should be identical to the return value the first time.\n * @param {object} config The view config prop.\n */\nexport function initialize(config) {\n  if (config.initStrategy === 'auto') {\n    return initializeAuto(config);\n  }\n  return config;\n}\n\n/**\n * A helper function for the `upgrade()` function,\n * which helps convert `props.view` (for scatterplot and spatial),\n * into new coordination scopes, setting their values\n * in the coordination space and returning the new scope mappings.\n * This function does mutate the `coordinationSpace` parameter.\n * @param {string} prefix The coordination type prefix,\n * either 'embedding' or 'spatial'.\n * @param {object} view The view prop object containing\n * the properties `.target` and `.zoom`.\n * @param {object} coordinationSpace The coordination space.\n * @returns {object} The new coordination scope names.\n */\nfunction upgradeReplaceViewProp(prefix, view, coordinationSpace) {\n  const prevZScopes = Object.keys(coordinationSpace[`${prefix}Zoom`]);\n  const prevTXScopes = Object.keys(coordinationSpace[`${prefix}TargetX`]);\n  const prevTYScopes = Object.keys(coordinationSpace[`${prefix}TargetY`]);\n\n  const nextZScope = getNextScope(prevZScopes);\n  const nextTXScope = getNextScope(prevTXScopes);\n  const nextTYScope = getNextScope(prevTYScopes);\n\n  const { zoom, target: [targetX, targetY] } = view;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}Zoom`][nextZScope] = zoom;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}TargetX`][nextTXScope] = targetX;\n  // eslint-disable-next-line no-param-reassign\n  coordinationSpace[`${prefix}TargetY`][nextTYScope] = targetY;\n  return {\n    [`${prefix}Zoom`]: nextZScope,\n    [`${prefix}TargetX`]: nextTXScope,\n    [`${prefix}TargetY`]: nextTYScope,\n  };\n}\n\n/**\n * Convert an older view config to a newer view config.\n * @param {object} config A v0.1.0 \"legacy\" view config.\n * @returns {object} A v1.0.0 \"upgraded\" view config.\n */\nexport function upgradeFrom0_1_0(config, datasetUid = null) {\n  const coordinationSpace = {\n    embeddingType: {},\n    embeddingZoom: {},\n    embeddingTargetX: {},\n    embeddingTargetY: {},\n    spatialZoom: {},\n    spatialTargetX: {},\n    spatialTargetY: {},\n  };\n\n  const layout = [];\n  config.staticLayout.forEach((componentDef) => {\n    let newComponentDef = {\n      ...componentDef,\n      coordinationScopes: {},\n    };\n    if (componentDef.component === 'scatterplot') {\n      // Need to set up the coordinationSpace\n      // with embeddingType to replace scatterplot\n      // component prop \"mapping\".\n      if (componentDef.props.mapping) {\n        coordinationSpace.embeddingType[componentDef.props.mapping] = componentDef.props.mapping;\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            embeddingType: componentDef.props.mapping,\n          },\n        };\n      }\n      // Need to set up the coordinationSpace\n      // with embeddingZoom / embeddingTargetX/Y to replace scatterplot\n      // component prop \"view\" ({ zoom, target }).\n      if (componentDef.props.view) {\n        // Note that the below function does mutate the coordinationSpace param.\n        const newScopeValues = upgradeReplaceViewProp(\n          'embedding', componentDef.props.view, coordinationSpace,\n        );\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            ...newScopeValues,\n          },\n        };\n      }\n    }\n    if (componentDef.component === 'spatial') {\n      // Need to set up the coordinationSpace\n      // with spatialZoom / spatialTargetX/Y to replace spatial\n      // component prop \"view\" ({ zoom, target }).\n      if (componentDef?.props?.view) {\n        // Note that the below function does mutate the coordinationSpace param.\n        const newScopeValues = upgradeReplaceViewProp(\n          'spatial', componentDef.props.view, coordinationSpace,\n        );\n        newComponentDef = {\n          ...newComponentDef,\n          coordinationScopes: {\n            ...newComponentDef.coordinationScopes,\n            ...newScopeValues,\n          },\n        };\n      }\n    }\n    layout.push(newComponentDef);\n  });\n\n  // Use a random dataset ID when initializing automatically,\n  // so that it changes with each new v0.1.0 view config.\n  // However, check if the `datasetUid` parameter was passed,\n  // which allows for unit testing.\n  const newDatasetUid = datasetUid || uuidv4();\n\n  return {\n    version: '1.0.1',\n    name: config.name,\n    description: config.description,\n    public: config.public,\n    datasets: [\n      {\n        uid: newDatasetUid,\n        name: newDatasetUid,\n        files: config.layers.map(layer => ({\n          type: layer.type.toLowerCase(),\n          fileType: layer.fileType,\n          url: layer.url,\n        })),\n      },\n    ],\n    initStrategy: 'auto',\n    coordinationSpace,\n    layout,\n  };\n}\n\nexport function upgradeFrom1_0_0(config) {\n  const coordinationSpace = { ...config.coordinationSpace };\n\n  function replaceLayerType(layerType) {\n    // Layer type could be one of a few things, bitmask or raster at the moment.\n    const isRaster = layerType === 'raster';\n    coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`] = {};\n    Object.entries(coordinationSpace.spatialLayers).forEach(([scope, layers]) => {\n      if (Array.isArray(layers) && layers.find(layer => layer.type === layerType)) {\n        const typedLayers = layers\n          .filter(layer => layer.type === layerType)\n          .map((layer) => {\n            const newLayer = { ...layer };\n            delete newLayer.type;\n            return newLayer;\n          });\n        coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`][scope] = isRaster ? typedLayers : typedLayers[0];\n      } else {\n        coordinationSpace[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`][scope] = null;\n      }\n    });\n  }\n\n  if (coordinationSpace.spatialLayers) {\n    replaceLayerType('raster');\n    replaceLayerType('cells');\n    replaceLayerType('molecules');\n    replaceLayerType('neighborhoods');\n    delete coordinationSpace.spatialLayers;\n  }\n\n  const layout = config.layout.map((component) => {\n    const newComponent = { ...component };\n\n    function replaceCoordinationScope(layerType) {\n      const isRaster = layerType === 'raster';\n      if (COMPONENT_COORDINATION_TYPES[newComponent.component].includes(`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`)) {\n        newComponent.coordinationScopes[`spatial${capitalize(layerType)}Layer${isRaster ? 's' : ''}`] = newComponent.coordinationScopes.spatialLayers;\n      }\n    }\n\n    if (newComponent.coordinationScopes && newComponent.coordinationScopes.spatialLayers) {\n      replaceCoordinationScope('raster');\n      replaceCoordinationScope('cells');\n      replaceCoordinationScope('molecules');\n      replaceCoordinationScope('neighborhoods');\n      delete newComponent.coordinationScopes.spatialLayers;\n    }\n    return newComponent;\n  });\n\n  return {\n    ...config,\n    coordinationSpace,\n    layout,\n    version: '1.0.1',\n  };\n}\n\nexport function upgrade(fromVersion, oldConfig) {\n  if (fromVersion === '0.1.0') {\n    return upgradeFrom0_1_0(oldConfig);\n  }\n  if (fromVersion === '1.0.0') {\n    return upgradeFrom1_0_0(oldConfig);\n  }\n  throw new Error(`Unable to upgrade from unknown version ${fromVersion}`);\n}\n","/* eslint-disable camelcase */\nimport React, { useEffect, useMemo } from 'react';\nimport Ajv from 'ajv';\nimport {\n  ThemeProvider, StylesProvider,\n  createGenerateClassName,\n} from '@material-ui/core/styles';\nimport isEqual from 'lodash/isEqual';\nimport packageJson from '../../package.json';\nimport { muiTheme } from '../components/shared-mui/styles';\nimport configSchema from '../schemas/config-1.0.1.schema.json';\nimport configSchema1_0_0 from '../schemas/config-1.0.0.schema.json';\nimport configSchema0_1_0 from '../schemas/config-0.1.0.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\n\nimport VitessceGrid from './VitessceGrid';\nimport Warning from './Warning';\nimport CallbackPublisher from './CallbackPublisher';\nimport { getComponent } from './component-registry';\nimport { initialize, upgrade } from './view-config-utils';\n\nconst generateClassName = createGenerateClassName({\n  disableGlobal: true,\n});\n\n/**\n * The Vitessce component.\n * @param {object} props\n * @param {object} props.config A Vitessce view config.\n * If the config is valid, the VitessceGrid will be rendered as a child.\n * If the config is invalid, a Warning will be rendered instead.\n * @param {number} props.rowHeight Row height for grid layout. Optional.\n * @param {number} props.height Total height for grid layout. Optional.\n * @param {string} props.theme The theme, used for styling as\n * light or dark. Optional. By default, \"dark\"\n * @param {function} props.onWarn A callback for warning messages. Optional.\n * @param {function} props.onConfigChange A callback for view config\n * updates. Optional.\n * @param {function} props.onLoaderChange A callback for loader\n * updates. Optional.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes. Use for debugging\n * purposes, as this may have a performance impact. By default, false.\n */\nexport default function Vitessce(props) {\n  const {\n    config,\n    rowHeight,\n    height,\n    theme,\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange = false,\n  } = props;\n\n  // Process the view config and memoize the result:\n  // - Validate.\n  // - Upgrade, if legacy schema.\n  // - Validate after upgrade, if legacy schema.\n  // - Initialize (based on initStrategy).\n  const [configOrWarning, success] = useMemo(() => {\n    // If the config value is undefined, show a warning message.\n    if (!config) {\n      return [{\n        title: 'No such dataset',\n        unformatted: 'The dataset configuration could not be found.',\n      }, false];\n    }\n    // If the view config is missing a version, show a warning message.\n    if (!config.version) {\n      return [{\n        title: 'Missing version',\n        unformatted: 'The dataset configuration is missing a version, preventing validation.',\n      }, false];\n    }\n    // Check if this is a \"legacy\" view config.\n    let upgradedConfig = config;\n    if (upgradedConfig.version === '0.1.0') {\n      // Validate under the legacy schema first.\n      const validateLegacy = new Ajv().compile(configSchema0_1_0);\n      const validLegacy = validateLegacy(upgradedConfig);\n      if (!validLegacy) {\n        const failureReason = JSON.stringify(validateLegacy.errors, null, 2);\n        return [{\n          title: 'Config validation failed',\n          preformatted: failureReason,\n        }, false];\n      }\n      // Upgrade from v0.1.0 to v1.0.1 before v1.0.1 schema validation.\n      upgradedConfig = upgrade('0.1.0', upgradedConfig);\n    }\n    if (upgradedConfig.version === '1.0.0') {\n      // Validate under the legacy schema first.\n      const validateLegacy = new Ajv()\n        .addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema1_0_0);\n      const validLegacy = validateLegacy(upgradedConfig);\n      if (!validLegacy) {\n        const failureReason = JSON.stringify(validateLegacy.errors, null, 2);\n        return [{\n          title: 'Config validation failed',\n          preformatted: failureReason,\n        }, false];\n      }\n      // Upgrade from v1.0.0 to v1.0.1 before v1.0.1 schema validation.\n      upgradedConfig = upgrade('1.0.0', upgradedConfig);\n    }\n    // NOTE: Remove when a view config viewer/editor is available in UI.\n    console.groupCollapsed(`🚄 Vitessce (${packageJson.version}) view configuration`);\n    console.info(`data:,${JSON.stringify(upgradedConfig)}`);\n    console.info(JSON.stringify(upgradedConfig, null, 2));\n    console.groupEnd();\n    const validate = new Ajv()\n      .addSchema(cellSetsSchema).addSchema(rasterSchema).compile(configSchema);\n    const valid = validate(upgradedConfig);\n\n    if (!valid) {\n      const failureReason = JSON.stringify(validate.errors, null, 2);\n      return [{\n        title: 'Config validation failed',\n        preformatted: failureReason,\n      }, false];\n    }\n    // Initialize the view config according to the initStrategy.\n    const initializedConfig = initialize(upgradedConfig);\n    return [initializedConfig, true];\n  }, [config]);\n\n  // Emit the upgraded/initialized view config\n  // to onConfigChange if necessary.\n  useEffect(() => {\n    if (success && !isEqual(configOrWarning, config) && onConfigChange) {\n      onConfigChange(configOrWarning);\n    }\n  }, [success, config, configOrWarning, onConfigChange]);\n\n  return success ? (\n    <StylesProvider generateClassName={generateClassName}>\n      <ThemeProvider theme={muiTheme[theme]}>\n        <VitessceGrid\n          config={configOrWarning}\n          getComponent={getComponent}\n          rowHeight={rowHeight}\n          height={height}\n          theme={theme}\n        />\n        <CallbackPublisher\n          onWarn={onWarn}\n          onConfigChange={onConfigChange}\n          onLoaderChange={onLoaderChange}\n          validateOnConfigChange={validateOnConfigChange}\n        />\n      </ThemeProvider>\n    </StylesProvider>\n  ) : (\n    <Warning\n      theme={theme}\n      {...configOrWarning}\n    />\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Warning from './Warning';\nimport Vitessce from './Vitessce';\nimport '../css/index.scss';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css';\n\n\nfunction AwaitResponse(props) {\n  const {\n    response,\n    theme,\n  } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const responseRef = useRef();\n  useEffect(() => {\n    response.then((c) => {\n      responseRef.current = c;\n      setIsLoading(false);\n    });\n  }, [response]);\n  return (!isLoading ? React.createElement(responseRef.current) : <Warning title=\"Loading...\" theme={theme} />);\n}\n\n\nfunction preformattedDetails(response) {\n  return `\n    ok: ${response.ok}\n    status: ${response.status}\n    statusText: ${response.statusText}\n    redirected: ${response.redirected}\n    type: ${response.type}\n    url: ${response.url}`; // TODO: headers\n}\n\n\nfunction checkResponse(response, theme) {\n  if (!response.ok) {\n    return Promise.resolve(\n      () => (\n        <Warning\n          title=\"Fetch response not OK\"\n          preformatted={preformattedDetails(response)}\n          theme={theme}\n        />\n      ),\n    );\n  }\n\n  const debug = false;\n  return response.text().then((text) => {\n    try {\n      const url = window.location.href;\n      const base = url.split('?')[0];\n      const json = text.replaceAll('http://localhost/', base);\n      const config = JSON.parse(json);\n      return Promise.resolve(() => (\n        <Vitessce\n          config={config}\n          theme={theme}\n          // eslint-disable-next-line no-console\n          onConfigChange={debug ? console.log : undefined}\n          validateOnConfigChange={debug}\n        />\n      ));\n    } catch (e) {\n      return Promise.resolve(() => (\n        <Warning\n          title=\"Error parsing JSON\"\n          preformatted={preformattedDetails(response)}\n          unformatted={`${e.message}: ${text}`}\n          theme={theme}\n        />\n      ));\n    }\n  });\n}\n\n/**\n * Use the theme provided if it is valid, otherwise fall back to the 'dark' theme.\n * @param {string} theme A potentially invalid theme name.\n * @returns {string} A valid theme name.\n */\n// function validateTheme(theme) {\n//   return (['light', 'dark'].includes(theme) ? theme : 'dark');\n// }\n\n/**\n * Convenience function for creating the minimal Vitessce demo and demo listing\n * components based on the current URL parameters.\n * @param {object} params\n * @param {number|null} params.rowHeight The row height to pass to the Vitessce grid.\n * Optional. By default, null.\n * @param {boolean} showBetaHeader Should the header which links to the beta documentation\n * website be rendered? Optional. By default, false.\n * @returns A component, either <Welcome/> or <Vitessce/> depending on the URL params.\n */\nexport function createApp() {\n  const theme = 'light';\n  const responsePromise = fetch('config.json')\n    .then(response => checkResponse(response, theme))\n    .catch(error => Promise.resolve(() => (\n      <Warning\n        title=\"Error fetching\"\n        unformatted={error.message}\n        theme={theme}\n      />\n    )));\n  return (\n    <AwaitResponse response={responsePromise} theme={theme} />\n  );\n}\n","import 'whatwg-fetch';\nimport ReactDOM from 'react-dom';\nimport { createApp } from '../app';\n\n\nReactDOM.render(\n  createApp(),\n  document.getElementById('vitessce-container'),\n);\n","module.exports = function() {\n  return require(\"!!/Users/guq/projects/vitessce/node_modules/worker-loader/dist/workers/InlineWorker.js\")(\"!function(t){var n={};function e(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:r})},e.r=function(t){\\\"undefined\\\"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(t,\\\"__esModule\\\",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&\\\"object\\\"===typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,\\\"default\\\",{enumerable:!0,value:t}),2&n&&\\\"string\\\"!=typeof t)for(var o in t)e.d(r,o,function(n){return t[n]}.bind(null,o));return r},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\\\"a\\\",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p=\\\"./\\\",e(e.s=23)}([function(t,n){t.exports=function(t){var n=typeof t;return null!=t&&(\\\"object\\\"==n||\\\"function\\\"==n)}},function(t,n,e){var r=e(6),o=e(3);t.exports=function(t,n,e){return void 0===e&&(e=n,n=void 0),void 0!==e&&(e=(e=o(e))===e?e:0),void 0!==n&&(n=(n=o(n))===n?n:0),r(o(t),n,e)}},function(t,n,e){var r=e(14)();t.exports=r},function(t,n,e){var r=e(0),o=e(7),i=/^\\\\s+|\\\\s+$/g,u=/^[-+]0x[0-9a-f]+$/i,c=/^0b[01]+$/i,f=/^0o[0-7]+$/i,l=parseInt;t.exports=function(t){if(\\\"number\\\"==typeof t)return t;if(o(t))return NaN;if(r(t)){var n=\\\"function\\\"==typeof t.valueOf?t.valueOf():t;t=r(n)?n+\\\"\\\":n}if(\\\"string\\\"!=typeof t)return 0===t?t:+t;t=t.replace(i,\\\"\\\");var e=c.test(t);return e||f.test(t)?l(t.slice(2),e?2:8):u.test(t)?NaN:+t}},function(t,n,e){var r=e(5),o=e(11),i=e(12),u=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?\\\"[object Undefined]\\\":\\\"[object Null]\\\":u&&u in Object(t)?o(t):i(t)}},function(t,n,e){var r=e(8).Symbol;t.exports=r},function(t,n){t.exports=function(t,n,e){return t===t&&(void 0!==e&&(t=t<=e?t:e),void 0!==n&&(t=t>=n?t:n)),t}},function(t,n,e){var r=e(4),o=e(13);t.exports=function(t){return\\\"symbol\\\"==typeof t||o(t)&&\\\"[object Symbol]\\\"==r(t)}},function(t,n,e){var r=e(9),o=\\\"object\\\"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function(\\\"return this\\\")();t.exports=i},function(t,n,e){(function(n){var e=\\\"object\\\"==typeof n&&n&&n.Object===Object&&n;t.exports=e}).call(this,e(10))},function(t,n){var e;e=function(){return this}();try{e=e||new Function(\\\"return this\\\")()}catch(r){\\\"object\\\"===typeof window&&(e=window)}t.exports=e},function(t,n,e){var r=e(5),o=Object.prototype,i=o.hasOwnProperty,u=o.toString,c=r?r.toStringTag:void 0;t.exports=function(t){var n=i.call(t,c),e=t[c];try{t[c]=void 0;var r=!0}catch(f){}var o=u.call(t);return r&&(n?t[c]=e:delete t[c]),o}},function(t,n){var e=Object.prototype.toString;t.exports=function(t){return e.call(t)}},function(t,n){t.exports=function(t){return null!=t&&\\\"object\\\"==typeof t}},function(t,n,e){var r=e(15),o=e(16),i=e(22);t.exports=function(t){return function(n,e,u){return u&&\\\"number\\\"!=typeof u&&o(n,e,u)&&(e=u=void 0),n=i(n),void 0===e?(e=n,n=0):e=i(e),u=void 0===u?n<e?1:-1:i(u),r(n,e,u,t)}}},function(t,n){var e=Math.ceil,r=Math.max;t.exports=function(t,n,o,i){for(var u=-1,c=r(e((n-t)/(o||1)),0),f=Array(c);c--;)f[i?c:++u]=t,t+=o;return f}},function(t,n,e){var r=e(17),o=e(18),i=e(21),u=e(0);t.exports=function(t,n,e){if(!u(e))return!1;var c=typeof n;return!!(\\\"number\\\"==c?o(e)&&i(n,e.length):\\\"string\\\"==c&&n in e)&&r(e[n],t)}},function(t,n){t.exports=function(t,n){return t===n||t!==t&&n!==n}},function(t,n,e){var r=e(19),o=e(20);t.exports=function(t){return null!=t&&o(t.length)&&!r(t)}},function(t,n,e){var r=e(4),o=e(0);t.exports=function(t){if(!o(t))return!1;var n=r(t);return\\\"[object Function]\\\"==n||\\\"[object GeneratorFunction]\\\"==n||\\\"[object AsyncFunction]\\\"==n||\\\"[object Proxy]\\\"==n}},function(t,n){t.exports=function(t){return\\\"number\\\"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,n){var e=/^(?:0|[1-9]\\\\d*)$/;t.exports=function(t,n){var r=typeof t;return!!(n=null==n?9007199254740991:n)&&(\\\"number\\\"==r||\\\"symbol\\\"!=r&&e.test(t))&&t>-1&&t%1==0&&t<n}},function(t,n,e){var r=e(3);t.exports=function(t){return t?(t=r(t))===1/0||t===-1/0?17976931348623157e292*(t<0?-1:1):t===t?t:0:0===t?t:0}},function(t,n,e){\\\"use strict\\\";e.r(n);e(1);var r=e(2),o=e.n(r);function i(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}var u,c=9728,f=10240,l=10241,a=10242,s=10243,p=33071;i(u={},l,c),i(u,f,c),i(u,a,p),i(u,s,p);function v(t,n){var e,r,i,u=n.tileSize,c=n.tileI,f=n.tileJ,l=n.numCells,a=n.numGenes,s=n.cellOrdering,p=n.cells,v=new Uint8Array(u*u),d=o()(u);return d.forEach((function(n){(r=f*u+n)<l&&(i=p.indexOf(s[r]))>=-1&&d.forEach((function(r){e=t[i*a+(c*u+r)],v[(u-r-1)*u+n]=e}))})),v}function d(t,n){var e,r,i,u,c=n.tileSize,f=n.tileI,l=n.tileJ,a=n.numCells,s=n.numGenes,p=n.cellOrdering,v=n.cells,d=new Uint8Array(c*c),b=o()(c);return b.forEach((function(n){(r=f*c+n)<a&&(u=v.indexOf(p[r]))>=-1&&b.forEach((function(r){e=(i=l*c+r)<s?t[u*s+i]:0,d[(c-n-1)*c+r]=e}))})),d}if(\\\"undefined\\\"!==typeof self){const t={getTile:function({curr:t,tileI:n,tileJ:e,tileSize:r,cellOrdering:o,rows:i,cols:u,data:c,transpose:f}){const l=new Uint8Array(c),a=u.length;return[{tile:(f?v:d)(l,{tileSize:r,tileI:n,tileJ:e,numCells:o.length,numGenes:a,cellOrdering:o,cells:i}),buffer:c,curr:t},[c]]}};self.addEventListener(\\\"message\\\",n=>{try{const[e,r]=n.data,[o,i]=t[e](r);self.postMessage(o,i)}catch(e){console.warn(e)}})}}]);\\n//# sourceMappingURL=6f6f723a7874f4178a42.worker.js.map\", null);\n};"],"sourceRoot":""}